datasource db {
  provider = "mysql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model AaDepartment {
  department    Department @relation(fields: [department_id], references: [id])
  department_id Int
  id            Int        @id @default(autoincrement())
  period        Period?    @relation(fields: [period_id], references: [id])
  period_id     Int?

  @@index([department_id], map: "department_id")
  @@index([period_id], map: "period_id")
  @@map("aa_department")
}

model Accesslog {
  activity           String?  @db.Text()
  applicationId      Int?     @map("application_id")
  client             String?  @db.VarChar(15)
  domain             Int?     @db.TinyInt()
  eventtime          DateTime @default(now()) @db.Timestamp(0)
  id                 Int      @id @default(autoincrement())
  lastsrv            String?  @db.Text()
  luUsersUsertypesId Int?     @map("lu_users_usertypes_id")
  ra                 String?  @db.Text()
  referer            String?  @db.Text()
  sa                 String?  @db.Text()
  usersId            Int?     @map("users_id")
  usertypeId         Int?     @map("usertype_id")
  xforward           String?  @db.Text()

  @@map("accesslog")
}

model AccesslogApplication {
  active Int? @default(1)
  appId  Int? @default(0)
  id     Int  @id @default(autoincrement())

  @@map("accesslog_applications")
}

model Accesslogreplyform {
  activity           String?  @db.Text()
  applicationId      Int?     @map("application_id")
  client             String?  @default("") @db.VarChar(50)
  id                 Int      @id @default(autoincrement())
  luUsersUsertypesId Int?     @map("lu_users_usertypes_id")
  timestamp          DateTime @default(now()) @db.Timestamp(0)
  usersId            Int?     @map("users_id")
  usertypeId         Int?     @map("usertype_id")

  @@map("accesslogreplyform")
}

model AcoPal {
  aco            Boolean?
  application    Application @relation(fields: [application_id], references: [id])
  application_id Int         @unique
  id             Int         @id @default(autoincrement())
  pal            Boolean?

  @@map("aco_pal")
}

model AdmissionLetter {
  applicationId Int    @map("application_id")
  departmentId  Int    @map("department_id")
  id            String @id @default(cuid())
  sections      String @db.Text()

  @@unique([applicationId, departmentId])
  @@map("admission_letter")
}

model Admission {
  applicationId Int @default(0) @map("application_id")
  code          Int @default(0)
  id            Int @id @default(autoincrement())
  programId     Int @map("program_id")

  @@map("admissions")
}

model Advisor {
  departmentId Int @map("department_id")
  id           Int @id @default(autoincrement())
  userId       Int @map("user_id")

  @@map("advisors")
}

model ApplicantIpedsRace {
  id                 String @id @default(cuid())
  ipedsRaceId        Int    @map("ipeds_race_id")
  luUsersUsertypesId Int    @map("lu_users_usertypes_id")

  @@unique([luUsersUsertypesId, ipedsRaceId])
  @@map("applicant_ipeds_race")
}

model Application {
  acoPal                     AcoPal?
  applicationAdminNote       ApplicationAdminNote[]
  area1                      String?                     @db.Text()
  area2                      String?                     @db.Text()
  area3                      String?                     @db.Text()
  attendance                 Attendance[]
  buckleywaive               Boolean?
  cashnetPayment             CashnetPayment[]
  cnbc                       Int?                        @default(0) @db.TinyInt()
  complete                   Boolean                     @default(false)
  createdDate                DateTime?                   @map("created_date") @db.DateTime(0)
  crossDeptProgs             String?                     @map("cross_dept_progs") @db.Text()
  crossDeptProgsOther        String?                     @map("cross_dept_progs_other") @db.VarChar(50)
  cups                       Boolean                     @default(false)
  curEnrolled                String                      @default("0") @map("cur_enrolled") @db.Char(1)
  experience                 Experience[]
  fellowships                Fellowship[]
  gmatscore                  Gmatscore[]
  gresubjectscore            Gresubjectscore[]
  hide                       Boolean                     @default(false)
  honors                     String?                     @db.Text()
  id                         Int                         @id @default(autoincrement())
  ieltsscore                 Ieltsscore[]
  invitationEmailSent        String?                     @map("invitation_email_sent") @db.Char(1)
  luApplicationAdvisor       LuApplicationAdvisor[]
  luApplicationAppreqs       LuApplicationAppreq[]
  luApplicationCohort        LuApplicationCohort?
  luApplicationGroups        LuApplicationGroup[]
  luApplicationPrograms      LuApplicationProgram[]
  luApplicationStartSemester LuApplicationStartSemester?
  mastersReviewWaiver        Boolean                     @default(false) @map("masters_review_waiver")
  mhciPrereqs                MhciPrereq[]
  mhciPrereqsCourses         MhciPrereqsCourse[]
  mlArea                     MlArea[]
  mlSupportingCoursework     MlSupportingCoursework[]
  mseAqa                     MseAqa[]
  mseCodility                MseCodility?
  name                       String                      @db.VarChar(100)
  notificationsent           DateTime?                   @db.DateTime(0)
  otherInst                  String?                     @map("other_inst") @db.Text()
  paid                       Boolean                     @default(false)
  payment                    Payment[]
  paymentamount              Decimal?                    @db.Decimal(10, 0)
  paymentdate                DateTime?                   @db.DateTime(0)
  paymenttype                Int?
  periodApplication          PeriodApplication[]
  pier                       Boolean                     @default(false)
  portfolioLink              String?                     @map("portfolio_link") @db.VarChar(255)
  portfolioPassword          String?                     @map("portfolio_password") @db.VarChar(255)
  portfoliosubmitted         Boolean?
  previousCoursework         Int?                        @default(0) @map("previous_coursework")
  promotionHistory           PromotionHistory[]
  publication                Publication[]
  recommend                  Recommend[]
  recordsPermission          String?                     @map("records_permission") @db.Char(1)
  recruitingEvent            String?                     @map("recruiting_event") @db.MediumText()
  referralToProgram          String?                     @map("referral_to_program") @db.VarChar(255)
  registrationFeePayment     RegistrationFeePayment[]
  registrationFeeStatus      RegistrationFeeStatus[]
  rejectionSent              String?                     @map("rejection_sent") @db.Char(1)
  review                     Review[]
  rissFunding                RissFunding[]
  rissMcnair                 RissMcnair[]
  round2                     String?                     @default("0") @db.Char(1)
  round3                     String?                     @default("0") @db.Char(1)
  sentToProgram              String                      @default("0") @map("sent_to_program") @db.Char(1)
  specialConsideration       SpecialConsideration[]
  statementofpurpose         String?                     @db.VarChar(255)
  studentCommit              Boolean                     @default(false) @map("student_commit")
  studentDecision            StudentDecision[]
  studentDecisionHistory     StudentDecisionHistory[]
  submitted                  Boolean                     @default(false)
  submittedDate              DateTime?                   @map("submitted_date") @db.DateTime(0)
  tagMembers                 TagMember[]
  userId                     Int                         @default(0) @map("user_id")
  waitlistSent               String?                     @map("waitlist_sent") @db.Char(1)
  waive                      Boolean                     @default(false)
  waivedate                  DateTime?                   @db.DateTime(0)
  waiveHigherFee             Int                         @default(0) @map("waive_higher_fee") @db.TinyInt()
  waiveToefl                 Int?                        @map("waive_toefl") @db.TinyInt()
  womenfellowship            Boolean                     @default(false)

  @@index([paid], map: "paid")
  @@index([submitted], map: "submitted")
  @@index([userId], map: "user_id")
  @@map("application")
}

model ApplicationAdminNote {
  application    Application @relation(fields: [application_id], references: [id])
  application_id Int
  id             Int         @id @default(autoincrement()) @map("admin_note_id")
  insertTime     DateTime    @default(now()) @map("insert_time") @db.Timestamp(0)
  note           String      @db.Text()
  users          User        @relation(fields: [insert_user_id], references: [id])
  insert_user_id Int

  @@index([application_id], map: "application_id")
  @@index([insert_user_id], map: "insert_user_id")
  @@map("application_admin_note")
}

model ApplicationContent {
  desired           Boolean?
  id                BigInt   @id @default(autoincrement()) @db.UnsignedBigInt()
  programId         Int?     @map("program_id")
  required          Boolean?
  sectionIdentifier String?  @map("section_identifier") @db.Char(255)

  @@index([sectionIdentifier, programId], map: "section_identifier_program_id")
  @@map("application_content")
}

model ApplicationDecision {
  admissionProgramId    Int     @map("admission_program_id")
  admissionStatus       String? @map("admission_status") @db.Char(1)
  applicationId         Int     @map("application_id") @db.UnsignedInt()
  attendOtherUniversity Int?    @map("attend_other_university") @db.UnsignedTinyInt()
  comments              String? @db.VarChar(512)
  id                    String  @id @default(cuid())
  otherChoiceLocation   String? @map("other_choice_location") @db.Char(100)
  periodId              Int     @map("period_id") @db.UnsignedInt()
  programId             Int     @map("program_id") @db.UnsignedInt()
  visitCampus           Int?    @map("visit_campus") @db.UnsignedTinyInt()
  visitComments         Int?    @map("visit_comments") @db.UnsignedTinyInt()
  visitHelpful          Int?    @map("visit_helpful") @db.UnsignedTinyInt()

  @@unique([applicationId, periodId, programId])
  @@map("application_decision")
}

model ApplicationDecisionIni {
  admissionProgramId  Int       @map("admission_program_id")
  admissionStatus     Int?      @map("admission_status")
  applicationId       Int       @map("application_id") @db.UnsignedInt()
  choice              Int?
  comments            String?   @db.Text()
  id                  String    @id @default(cuid())
  scholarshipAmt      Decimal?  @map("scholarship_amt") @db.Decimal(10, 2)
  scholarshipComments String?   @map("scholarship_comments") @db.Text()
  timestamp           DateTime? @default(now()) @db.Timestamp(0)

  @@unique([applicationId, admissionProgramId])
  @@map("application_decision_ini")
}

model ApplicationDecisionSchool {
  accepted      Boolean?
  applicationId Int?     @map("application_id")
  id            Int      @id @default(autoincrement()) @map("application_decision_schools_id")
  name          String?  @db.Char(100)
  periodId      Int?     @map("period_id")
  programId     Int?     @map("program_id")

  @@index([applicationId, programId, periodId], map: "application_id_program_id_period_id")
  @@map("application_decision_schools")
}

model ApplicationMergeFile {
  guid      String   @db.VarChar(32)
  id        Int      @id @default(autoincrement()) @map("application_id")
  mergeDate DateTime @default(now()) @map("merge_date") @db.Timestamp(0)
  mergeFile String   @map("merge_file") @db.VarChar(255)

  @@map("application_merge_file")
}

model ApplicationPeriod {
  departmentId Int      @map("department_id")
  endDate      DateTime @map("end_date") @db.DateTime(0)
  id           Int      @id @default(autoincrement()) @map("application_period_id")
  startDate    DateTime @map("start_date") @db.DateTime(0)

  @@map("application_periods")
}

model ApplicationProgramLetter {
  admitSent         Boolean?  @map("admit_sent")
  admitSentDate     DateTime? @map("admit_sent_date") @db.DateTime(0)
  id                Int       @id @default(autoincrement()) @map("lu_application_programs_id")
  rejectionSent     Boolean?  @map("rejection_sent")
  rejectionSentDate DateTime? @map("rejection_sent_date") @db.DateTime(0)
  waitlistSent      Boolean?  @map("waitlist_sent")
  waitlistSentDate  DateTime? @map("waitlist_sent_date") @db.DateTime(0)

  @@map("application_program_letters")
}

model Applicationreq {
  id                      Int                      @id @default(autoincrement())
  linkname                String                   @db.VarChar(255)
  name                    String                   @db.VarChar(100)
  programsApplicationreqs ProgramsApplicationreq[]
  short                   String?                  @db.VarChar(100)
  sortorder               Int

  @@map("applicationreqs")
}

model Assistantship {
  applicationId Int @map("application_id")
  granted       Int @default(0) @db.UnsignedTinyInt()
  id            Int @id @default(autoincrement())
  requested     Int @default(0) @db.UnsignedTinyInt()

  @@map("assistantship")
}

model Attendance {
  application    Application @relation(fields: [application_id], references: [id])
  application_id Int
  id             Int         @id @default(autoincrement())
  status         Int

  @@index([application_id], map: "application_id")
  @@map("attendance")
}

model AttendanceStatus {
  id    Int    @id @default(autoincrement())
  value String @db.VarChar(50)

  @@map("attendance_status")
}

model BfDepartment {
  bfDepartment String @map("bf_department") @db.VarChar(10)
  departmentId Int    @map("department_id")
  id           Int    @id @default(autoincrement()) @map("bf_department_id")

  @@map("bf_department")
}

model BlacklistReviewer {
  appId      Int  @default(0) @map("app_id")
  deny       Int? @default(0) @db.TinyInt()
  id         Int  @id @default(autoincrement()) @map("br_id")
  reviewerId Int  @default(0) @map("reviewer_id")

  @@index([appId, reviewerId], map: "Index 2")
  @@map("blacklist_reviewer")
}

model Campus {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(100)

  @@map("campuses")
}

model CashnetDirect {
  amount      Float?   @db.Float()
  appEmail    String?  @db.VarChar(255)
  appId       Int?
  batch       Int?
  created     DateTime @default(now()) @db.DateTime(0)
  custCode    Int?
  dept        String?  @db.VarChar(255)
  id          Int      @id @default(autoincrement())
  name        String?  @db.VarChar(255)
  paymentType String?  @db.VarChar(50)
  station     Int?
  status      String?  @db.VarChar(50)
  transType   String?  @db.VarChar(50)
  txNumber    Int?     @unique

  @@index([appId], map: "appId")
  @@map("cashnetDirect")
}

model CashnetPayment {
  amount          Float?      @db.Float()
  applicantEmail  String      @map("applicant_email") @db.VarChar(255)
  applicantName   String      @map("applicant_name") @db.VarChar(255)
  application     Application @relation(fields: [app_id], references: [id])
  app_id          Int
  id              Int         @id @default(autoincrement()) @db.UnsignedInt()
  merchant        Int
  status          String      @db.VarChar(255)
  transactionId   Int         @map("transaction_id") @db.UnsignedInt()
  transactionTime DateTime    @default(now()) @map("transaction_time") @db.Timestamp(0)
  transactionType String      @map("transaction_type") @db.Char(255)

  @@index([app_id, status, transactionType], map: "app_id")
  @@map("cashnet_payment")
}

model CashnetPaymentCopy {
  amount          Float?   @db.Float()
  appId           Int      @map("app_id") @db.UnsignedInt()
  applicantEmail  String   @map("applicant_email") @db.VarChar(255)
  applicantName   String   @map("applicant_name") @db.VarChar(255)
  id              Int      @id @default(autoincrement()) @db.UnsignedInt()
  merchant        Int
  status          String   @db.VarChar(255)
  transactionId   Int      @map("transaction_id") @db.UnsignedInt()
  transactionTime DateTime @default(now()) @map("transaction_time") @db.Timestamp(0)
  transactionType String   @map("transaction_type") @db.Char(255)

  @@map("cashnet_payment_copy")
}

model CcAuthNotification {
  authNotificationTime DateTime @default(now()) @map("auth_notification_time") @db.Timestamp(0)
  id                   String   @id @default(cuid())
  paymentId            Int      @map("payment_id")

  @@unique([paymentId, authNotificationTime])
  @@map("cc_auth_notification")
}

model CcPaymentStatus {
  authTotal   Float    @default(0) @map("auth_total") @db.Float()
  creditTotal Float    @default(0) @map("credit_total") @db.Float()
  id          Int      @id @default(autoincrement()) @map("payment_id")
  settleTotal Float    @default(0) @map("settle_total") @db.Float()
  statusDate  DateTime @default(now()) @map("status_date") @db.Timestamp(0)

  @@map("cc_payment_status")
}

model CcTransaction {
  applicationId       Int    @map("application_id")
  cardholderNameFirst String @map("cardholder_name_first") @db.VarChar(60)
  cardholderNameLast  String @map("cardholder_name_last") @db.VarChar(60)
  id                  Int    @id @default(autoincrement()) @map("cc_id")
  paymentId           Int    @map("payment_id")
  storeNumber         String @map("store_number") @db.VarChar(10)

  @@index([applicationId], map: "fk_application_id")
  @@index([paymentId], map: "fk_payment_id")
  @@map("cc_transaction")
}

model CcTransactionDetail {
  ccId            Int      @map("cc_id")
  date            DateTime @db.Date()
  id              String   @id @default(cuid())
  itemGlString    String   @map("item_gl_string") @db.VarChar(25)
  itemName        String   @map("item_name") @db.VarChar(50)
  itemPriceEach   Float    @map("item_price_each") @db.Float()
  itemQty         Float    @map("item_qty") @db.Float()
  paymentId       Int      @map("payment_id")
  reportDate      DateTime @map("report_date") @db.Date()
  time            DateTime @db.Time(0)
  transactionType String   @map("transaction_type") @db.VarChar(6)

  @@unique([ccId, date, time, transactionType, itemName])
  @@index([paymentId], map: "fk_payment_id")
  @@index([reportDate], map: "fk_report_date")
  @@map("cc_transaction_detail")
}

model CcTransactionReport {
  id          String   @id @default(cuid()) @map("filename") @db.VarChar(30)
  lastModDate DateTime @default(dbgenerated()) @map("last_mod_date") @db.Timestamp(0)
  size        Int
  statusTime  DateTime @default(now()) @map("status_time") @db.Timestamp(0)

  @@map("cc_transaction_report")
}

model CcTransactionSummary {
  authAmount    Float?   @map("auth_amount") @db.Float()
  authCode      String?  @map("auth_code") @db.Char(1)
  authMessage   String?  @map("auth_message") @db.VarChar(255)
  ccId          Int      @map("cc_id")
  creditAmount  Float?   @map("credit_amount") @db.Float()
  date          DateTime @db.Date()
  id            String   @id @default(cuid())
  paymentId     Int      @map("payment_id")
  reportDate    DateTime @map("report_date") @db.Date()
  settleAmount  Float?   @map("settle_amount") @db.Float()
  settleCode    String?  @map("settle_code") @db.Char(1)
  settleMessage String?  @map("settle_message") @db.VarChar(255)
  time          DateTime @db.Time(0)

  @@unique([ccId, date, time])
  @@index([paymentId], map: "fk_payment_id")
  @@index([reportDate], map: "fk_report_date")
  @@map("cc_transaction_summary")
}

model CmuAffiliation {
  applicationId       Int @map("application_id")
  cmuEmployee         Int @default(0) @map("cmu_employee") @db.TinyInt()
  cmuStudentOrAlumnus Int @default(0) @map("cmu_student_or_alumnus") @db.TinyInt()
  id                  Int @id @default(autoincrement())

  @@map("cmu_affiliation")
}

model Cohort {
  closed    Int      @default(0) @db.TinyInt()
  cohortId  Int      @unique
  id        Int      @id @default(autoincrement())
  period    Period?  @relation(fields: [periodId], references: [id])
  periodId  Int?
  startDate DateTime @db.DateTime(0)

  @@index([periodId], map: "periodId")
  @@map("cohort")
}

model Committee {
  groupId Int @map("group_id")
  id      Int @id @default(autoincrement())
  userId  Int @map("user_id")

  @@map("committee")
}

model Content {
  content       String   @db.MediumText()
  contenttypeId Int      @map("contenttype_id")
  departmentId  Int      @map("department_id")
  domainId      Int?     @map("domain_id")
  id            Int      @id @default(autoincrement())
  modifiedby    Int
  modifieddate  DateTime @db.DateTime(0)
  name          String   @db.VarChar(100)

  @@index([contenttypeId], map: "contenttype_id")
  @@index([domainId], map: "domain_id")
  @@map("content")
}

model ContentBak {
  content       String   @db.Text()
  contenttypeId Int      @map("contenttype_id")
  departmentId  Int      @map("department_id")
  domainId      Int      @map("domain_id")
  id            Int      @id @default(autoincrement())
  modifiedby    Int
  modifieddate  DateTime @db.DateTime(0)
  name          String   @db.VarChar(50)

  @@index([contenttypeId], map: "contenttype_id")
  @@index([domainId], map: "domain_id")
  @@map("content_bak")
}

model Contenttype {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(50)

  @@map("contenttypes")
}

model Country {
  id      Int     @id @default(autoincrement())
  isoCode String? @map("iso_code") @db.VarChar(3)
  name    String? @db.VarChar(50)

  @@map("countries")
}

model DatafileType {
  datafileType String @map("datafile_type") @db.VarChar(50)
  id           Int    @id @default(autoincrement()) @map("datafile_type_id")

  @@map("datafile_type")
}

model Datafileinfo {
  extension String?  @db.VarChar(4)
  id        Int      @id @default(autoincrement())
  moddate   DateTime @db.DateTime(0)
  section   Int
  size      Int
  typeField String   @map("type") @db.VarChar(20)
  userdata  String?  @db.VarChar(20)
  userId    Int      @map("user_id")

  @@index([section, userdata], map: "idx_datafileinfo_section_userdata")
  @@index([typeField], map: "type")
  @@index([userId], map: "user_id")
  @@map("datafileinfo")
}

model DecisionAoiRank {
  decision           String   @db.VarChar(15)
  departmentId       Int      @map("department_id")
  id                 String   @id @default(cuid())
  interestId         Int      @map("interest_id")
  luUsersUsertypesId Int      @map("lu_users_usertypes_id")
  periodId           Int      @map("period_id")
  ranking            String?  @db.Text()
  timestamp          DateTime @default(now()) @db.Timestamp(0)

  @@unique([departmentId, periodId, interestId, decision, timestamp])
  @@map("decision_aoi_rank")
}

model DecisionAoiRankMember {
  applicationId Int    @map("application_id")
  arank         Int
  decision      String @db.VarChar(15)
  departmentId  Int    @map("department_id")
  id            String @id @default(cuid())
  interestId    Int    @map("interest_id")
  periodId      Int    @map("period_id")

  @@unique([departmentId, periodId, interestId, decision, applicationId])
  @@map("decision_aoi_rank_member")
}

model DecisionRank {
  decision           String   @db.VarChar(15)
  departmentId       Int      @map("department_id")
  id                 String   @id @default(cuid())
  luUsersUsertypesId Int      @map("lu_users_usertypes_id")
  periodId           Int      @map("period_id")
  ranking            String?  @db.Text()
  timestamp          DateTime @default(now()) @db.Timestamp(0)

  @@unique([departmentId, periodId, decision, timestamp])
  @@map("decision_rank")
}

model DecisionRankMember {
  applicationId Int    @map("application_id")
  decision      String @db.VarChar(15)
  departmentId  Int    @map("department_id")
  drank         Int
  id            String @id @default(cuid())
  periodId      Int    @map("period_id")

  @@unique([departmentId, periodId, decision, applicationId])
  @@map("decision_rank_member")
}

model Degree {
  id       Int            @id @default(autoincrement())
  name     String         @default("") @db.VarChar(100)
  programs ProgramModel[]
  short    String         @db.VarChar(10)

  @@map("degree")
}

model DegreeLevel {
  id   Int     @id @default(autoincrement())
  name String? @db.VarChar(50)

  @@map("degreeLevel")
}

model Degreesall {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(50)

  @@map("degreesall")
}

model Department {
  aaDepartment             AaDepartment[]
  allowRequestAdvisors     Int?           @default(0) @db.UnsignedTinyInt()
  ccEmail                  String?        @map("cc_email") @db.VarChar(255)
  drank                    Int            @default(0)
  enableFinal              String?        @default("0") @map("enable_final") @db.Char(1)
  enableRound1             String?        @default("1") @map("enable_round1") @db.Char(1)
  enableRound2             String?        @default("0") @map("enable_round2") @db.Char(1)
  enableRound3             String?        @default("0") @map("enable_round3") @db.Char(1)
  enableRound4             String?        @default("0") @map("enable_round4") @db.Char(1)
  id                       Int            @id @default(autoincrement())
  name                     String         @default("") @db.VarChar(50)
  oraclestring             String?        @db.VarChar(50)
  parentSchoolId           Int            @default(0) @map("parent_school_id")
  registrationoraclestring String?        @db.VarChar(50)
  semiblindReview          String?        @default("0") @map("semiblind_review") @db.Char(1)

  @@index([parentSchoolId], map: "parent_school_id")
  @@map("department")
}

model DepartmentEnableRecycling {
  departmentId    Int    @map("department_id")
  enableRecycling Int    @map("enable_recycling") @db.TinyInt()
  id              String @id @default(cuid())
  periodId        Int    @map("period_id")
  usersId         Int    @map("users_id")

  @@unique([departmentId, periodId])
  @@map("department_enable_recycling")
}

model DepartmentReplyperiod {
  deptId Int?      @map("dept_id")
  end    DateTime? @db.DateTime(0)
  id     Int       @id @default(autoincrement())
  start  DateTime? @db.DateTime(0)

  @@index([deptId], map: "dept_id")
  @@map("department_replyperiod")
}

model DepartmentUnit {
  departmentId Int    @map("department_id")
  id           String @id @default(cuid())
  unitId       Int    @map("unit_id")

  @@unique([departmentId, unitId])
  @@map("department_unit")
}

model DietrichDiversity {
  applicationId  Int     @map("application_id")
  background     String? @db.Text()
  id             Int     @id @default(autoincrement())
  lifeExperience String? @map("life_experience") @db.Text()

  @@map("dietrich_diversity")
}

model DietrichFinancialSupport {
  applicationId        Int     @map("application_id")
  id                   Int     @id @default(autoincrement())
  interestedB2Training Int?    @map("interested_b2_training") @db.TinyInt()
  qualifiedAssistance  Int?    @map("qualified_assistance") @db.TinyInt()
  receivedLoans        Int?    @map("received_loans") @db.TinyInt()
  receivedScholarships Int     @map("received_scholarships") @db.TinyInt()
  supportSources       String? @map("support_sources") @db.VarChar(255)

  @@map("dietrich_financial_support")
}

model DietrichRecognition {
  applicationId Int     @map("application_id")
  description   String? @db.Text()
  id            Int     @id @default(autoincrement())

  @@map("dietrich_recognitions")
}

model DietrichSharing {
  applicationId Int  @map("application_id")
  id            Int  @id @default(autoincrement())
  sds           Int? @db.TinyInt()
  tepper        Int? @db.TinyInt()

  @@map("dietrich_sharing")
}

model Disability {
  applicationId  Int  @map("application_id")
  disabilityType Int? @map("disability_type")
  hasDisability  Int  @default(0) @map("has_disability") @db.TinyInt()
  id             Int  @id @default(autoincrement())

  @@map("disability")
}

model DisabilityType {
  id    Int    @id @default(autoincrement())
  value String @db.VarChar(50)

  @@map("disability_type")
}

model Domain {
  active      Boolean      @default(true)
  banner      String       @default("1") @db.VarChar(255)
  description String?      @db.VarChar(180)
  domainUnit  DomainUnit[]
  id          Int          @id @default(autoincrement())
  name        String       @db.VarChar(100)
  path        String       @db.Text()

  @@map("domain")
}

model DomainUnit {
  domain    Domain @relation(fields: [domain_id], references: [id])
  domain_id Int
  id        String @id @default(cuid())
  unit      Unit   @relation(fields: [unit_id], references: [id])
  unit_id   Int

  @@unique([domain_id, unit_id])
  @@index([unit_id], map: "unit_id")
  @@map("domain_unit")
}

model DuolingoDatum {
  applicantId           Int      @default(0) @map("applicant_id")
  applicationId         Int      @map("application_id")
  birthdate             DateTime @db.Date()
  certificateUrl        String   @map("certificate_url") @db.MediumText()
  certified             Int
  comprehensionSubscore Int      @map("comprehension_subscore")
  conversationSubscore  Int      @map("conversation_subscore")
  country               String   @db.MediumText()
  couponId              String   @map("coupon_id") @db.MediumText()
  domain                String   @default("") @db.VarChar(50)
  email                 String   @default("") @db.Char(150)
  embedUrl              String   @map("embed_url") @db.MediumText()
  firstName             String   @map("first_name") @db.MediumText()
  fullName              String   @map("full_name") @db.MediumText()
  givenNames            String   @map("given_names") @db.MediumText()
  id                    Int      @id @default(autoincrement())
  insertDate            DateTime @default(now()) @db.DateTime(0)
  interviewUrl          String   @map("interview_url") @db.MediumText()
  language              String   @db.MediumText()
  lastName              String   @map("last_name") @db.MediumText()
  literacySubscore      Int      @map("literacy_subscore")
  middleNames           String   @map("middle_names") @db.MediumText()
  overallScore          Int      @map("overall_score")
  percentScore          Int      @map("percent_score")
  productionSubscore    Int      @map("production_subscore")
  scale                 Int
  school                String?  @db.TinyText()
  sessionId             String   @map("session_id") @db.MediumText()
  surnames              String   @db.MediumText()
  testDate              DateTime @map("test_date") @db.Date()
  userId                String   @map("user_id") @db.MediumText()
  verificationDate      DateTime @map("verification_date") @db.Date()

  @@index([email], map: "email")
  @@map("duolingo_data")
}

model DuolingoDataCopy {
  applicantId           Int      @default(0) @map("applicant_id")
  applicationId         Int      @map("application_id")
  birthdate             DateTime @db.Date()
  certificateUrl        String   @map("certificate_url") @db.MediumText()
  certified             Int
  comprehensionSubscore Int      @map("comprehension_subscore")
  conversationSubscore  Int      @map("conversation_subscore")
  country               String   @db.MediumText()
  couponId              String   @map("coupon_id") @db.MediumText()
  domain                String   @default("") @db.VarChar(50)
  email                 String   @default("") @db.Char(150)
  embedUrl              String   @map("embed_url") @db.MediumText()
  firstName             String   @map("first_name") @db.MediumText()
  fullName              String   @map("full_name") @db.MediumText()
  givenNames            String   @map("given_names") @db.MediumText()
  id                    Int      @id @default(autoincrement())
  insertDate            DateTime @default(now()) @db.DateTime(0)
  interviewUrl          String   @map("interview_url") @db.MediumText()
  language              String   @db.MediumText()
  lastName              String   @map("last_name") @db.MediumText()
  literacySubscore      Int      @map("literacy_subscore")
  middleNames           String   @map("middle_names") @db.MediumText()
  overallScore          Int      @map("overall_score")
  percentScore          Int      @map("percent_score")
  productionSubscore    Int      @map("production_subscore")
  scale                 Int
  school                String   @db.TinyText()
  sessionId             String   @map("session_id") @db.MediumText()
  surnames              String   @db.MediumText()
  testDate              DateTime @map("test_date") @db.Date()
  userId                String   @map("user_id") @db.MediumText()
  verificationDate      DateTime @map("verification_date") @db.Date()

  @@index([email], map: "email")
  @@map("duolingo_data_copy")
}

model Duolingoscore {
  applicationId  Int       @map("application_id")
  duolingodataId Int?      @map("duolingodata_id")
  id             Int       @id @default(autoincrement())
  matchDate      DateTime? @db.Date()
  testdate       DateTime  @db.Date()
  testemail      String?   @db.VarChar(255)

  @@index([applicationId, duolingodataId], map: "application_id")
  @@index([id], map: "id")
  @@map("duolingoscore")
}

model Em2FinancialSupport {
  applicationId               Int     @map("application_id")
  applyOutsideSupportSource   String? @map("apply_outside_support_source") @db.VarChar(255)
  applyOutsideSupportType     String? @map("apply_outside_support_type") @db.VarChar(100)
  attendWithoutSupport        Int     @default(0) @map("attend_without_support") @db.TinyInt()
  familySupportAmount         String? @map("family_support_amount") @db.VarChar(255)
  familySupportType           String? @map("family_support_type") @db.VarChar(255)
  id                          Int     @id @default(autoincrement())
  otherSupportSource          String? @map("other_support_source") @db.VarChar(255)
  receiveOutsideSupportSource String? @map("receive_outside_support_source") @db.VarChar(255)
  receiveOutsideSupportType   String? @map("receive_outside_support_type") @db.VarChar(100)
  requestAssistantship        Int     @default(0) @map("request_assistantship") @db.TinyInt()
  requestConsideration        Int     @default(0) @map("request_consideration") @db.TinyInt()

  @@map("em2_financial_support")
}

model Em2Sop {
  additionalInfo     String? @map("additional_info") @db.Text()
  applicationId      Int     @map("application_id")
  background         String  @db.Text()
  id                 Int     @id @default(autoincrement())
  objective          String  @db.Text()
  researchExperience String  @map("research_experience") @db.Text()
  taInterest         String? @map("ta_interest") @db.Text()

  @@map("em2_sop")
}

model Em2SupportingCoursework {
  applicationId           Int     @map("application_id")
  dataStructuresNumber    String? @map("data_structures_number") @db.VarChar(50)
  dataStructuresTitle     String? @map("data_structures_title") @db.VarChar(100)
  id                      Int     @id @default(autoincrement())
  makerkitsDescription    String? @map("makerkits_description") @db.Text()
  makerkitsDescription2   String? @map("makerkits_description2") @db.Text()
  msitExperience          String? @map("msit_experience") @db.VarChar(255)
  programmingDescription  String  @map("programming_description") @db.Text()
  programmingDescription2 String  @map("programming_description2") @db.Text()
  statisticsNumber        String? @map("statistics_number") @db.VarChar(50)
  statisticsTitle         String? @map("statistics_title") @db.VarChar(100)

  @@map("em2_supporting_coursework")
}

model Errorlog {
  applicationId      Int?     @map("application_id")
  client             String   @db.VarChar(15)
  id                 Int      @id @default(autoincrement())
  luUsersUsertypesId Int?     @map("lu_users_usertypes_id")
  message            String   @db.Text()
  timestamp          DateTime @default(now()) @db.Timestamp(0)
  usersId            Int?     @map("users_id")
  usertypeId         Int?     @map("usertype_id")

  @@map("errorlog")
}

model Ethnicity {
  id        Int    @id @default(autoincrement())
  name      String @db.VarChar(50)
  sortorder Int

  @@map("ethnicity")
}

model EtsConfig {
  id       Int     @id @default(autoincrement())
  login    String? @db.VarChar(50)
  password String? @db.VarChar(50)
  testName String? @db.VarChar(50)
  wsdl     String? @db.VarChar(250)

  @@map("etsConfig")
}

model EtsGre {
  address1        String?  @db.VarChar(37)
  address2        String?  @db.VarChar(37)
  address3        String?  @db.VarChar(37)
  addressCity     String?  @db.VarChar(37)
  addressState    String?  @db.VarChar(5)
  addressZip      String?  @db.VarChar(14)
  countryCode     String?  @db.VarChar(8)
  countryName     String?  @db.VarChar(35)
  createdDate     DateTime @default(now()) @db.DateTime(0)
  cycleNum        String?  @db.VarChar(7)
  deptCode        String?  @db.VarChar(6)
  deptName        String?  @db.VarChar(35)
  dob             String?  @db.VarChar(13)
  email           String?  @db.VarChar(49)
  fName           String?  @db.VarChar(29)
  gender          String?  @db.VarChar(3)
  gradMajorCode   String?  @db.VarChar(6)
  gradMajorName   String?  @db.VarChar(35)
  id              Int      @id @default(autoincrement())
  instCode        String?  @db.VarChar(6)
  instName        String?  @db.VarChar(35)
  instType        String?  @db.VarChar(4)
  lName           String?  @db.VarChar(37)
  mName           String?  @db.VarChar(5)
  percentileRank1 String?  @db.VarChar(7)
  percentileRank2 String?  @db.VarChar(7)
  percentileRank3 String?  @db.VarChar(7)
  percentileRank4 String?  @db.VarChar(7)
  percentileRank5 String?  @db.VarChar(7)
  percentileRank6 String?  @db.VarChar(7)
  percentileRank7 String?  @db.VarChar(7)
  phone           String?  @db.VarChar(24)
  processDate     String?  @db.VarChar(12)
  recordSerialNum String?  @db.VarChar(7)
  regNumber       String?  @db.VarChar(12)
  scaledScore1    String?  @db.VarChar(7)
  scaledScore2    String?  @db.VarChar(7)
  scaledScore3    String?  @db.VarChar(7)
  scaledScore4    String?  @db.VarChar(7)
  scaledScore5    String?  @db.VarChar(7)
  scaledScore6    String?  @db.VarChar(7)
  scaledScore7    String?  @db.VarChar(7)
  scoreType1      String?  @db.VarChar(3)
  scoreType2      String?  @db.VarChar(3)
  scoreType3      String?  @db.VarChar(3)
  scoreType4      String?  @db.VarChar(3)
  scoreType5      String?  @db.VarChar(3)
  scoreType6      String?  @db.VarChar(3)
  scoreType7      String?  @db.VarChar(3)
  sequenceNum     String?  @db.VarChar(7)
  ssn             String?  @db.VarChar(8)
  testCode        String?  @db.VarChar(6)
  testDate        String?  @db.VarChar(12)
  testName        String?  @db.VarChar(24)

  @@unique([deptCode, regNumber, testDate], map: "deptCode_regNumber_testDate")
  @@map("etsGre")
}

model EtsGreCopy {
  address1        String?  @db.VarChar(37)
  address2        String?  @db.VarChar(37)
  address3        String?  @db.VarChar(37)
  addressCity     String?  @db.VarChar(37)
  addressState    String?  @db.VarChar(5)
  addressZip      String?  @db.VarChar(14)
  countryCode     String?  @db.VarChar(8)
  countryName     String?  @db.VarChar(35)
  createdDate     DateTime @default(now()) @db.DateTime(0)
  cycleNum        String?  @db.VarChar(7)
  deptCode        String?  @db.VarChar(6)
  deptName        String?  @db.VarChar(35)
  dob             String?  @db.VarChar(13)
  email           String?  @db.VarChar(49)
  fName           String?  @db.VarChar(29)
  gender          String?  @db.VarChar(3)
  gradMajorCode   String?  @db.VarChar(6)
  gradMajorName   String?  @db.VarChar(35)
  id              Int      @id @default(autoincrement())
  instCode        String?  @db.VarChar(6)
  instName        String?  @db.VarChar(35)
  instType        String?  @db.VarChar(4)
  lName           String?  @db.VarChar(37)
  mName           String?  @db.VarChar(5)
  percentileRank1 String?  @db.VarChar(7)
  percentileRank2 String?  @db.VarChar(7)
  percentileRank3 String?  @db.VarChar(7)
  percentileRank4 String?  @db.VarChar(7)
  percentileRank5 String?  @db.VarChar(7)
  percentileRank6 String?  @db.VarChar(7)
  percentileRank7 String?  @db.VarChar(7)
  phone           String?  @db.VarChar(24)
  processDate     String?  @db.VarChar(12)
  recordSerialNum String?  @db.VarChar(7)
  regNumber       String?  @db.VarChar(12)
  scaledScore1    String?  @db.VarChar(7)
  scaledScore2    String?  @db.VarChar(7)
  scaledScore3    String?  @db.VarChar(7)
  scaledScore4    String?  @db.VarChar(7)
  scaledScore5    String?  @db.VarChar(7)
  scaledScore6    String?  @db.VarChar(7)
  scaledScore7    String?  @db.VarChar(7)
  scoreType1      String?  @db.VarChar(3)
  scoreType2      String?  @db.VarChar(3)
  scoreType3      String?  @db.VarChar(3)
  scoreType4      String?  @db.VarChar(3)
  scoreType5      String?  @db.VarChar(3)
  scoreType6      String?  @db.VarChar(3)
  scoreType7      String?  @db.VarChar(3)
  sequenceNum     String?  @db.VarChar(7)
  ssn             String?  @db.VarChar(8)
  testCode        String?  @db.VarChar(6)
  testDate        String?  @db.VarChar(12)
  testName        String?  @db.VarChar(24)

  @@unique([deptCode, regNumber, testDate], map: "deptCode_regNumber_testDate")
  @@map("etsGre_copy")
}

model EtsToeflScore {
  address1                       String?  @db.VarChar(60)
  address2                       String?  @db.VarChar(60)
  address3                       String?  @db.VarChar(60)
  address4                       String?  @db.VarChar(60)
  addressCity                    String?  @db.VarChar(32)
  addressState                   String?  @db.VarChar(8)
  addressZip                     String?  @db.VarChar(14)
  countryCode                    String?  @db.VarChar(5)
  countryName                    String?  @db.VarChar(40)
  createdDate                    DateTime @default(now()) @db.DateTime(0)
  deptCode                       String?  @db.VarChar(3)
  dob                            String?  @db.VarChar(9)
  email                          String?  @db.VarChar(75)
  essentialsListening            String?  @db.VarChar(2)
  essentialsListeningCEFR        String?  @db.VarChar(3)
  essentialsListeningmb          String?  @db.VarChar(2)
  essentialsListeningmbDate      String?  @db.VarChar(8)
  essentialsReading              String?  @db.VarChar(2)
  essentialsReadingCEFR          String?  @db.VarChar(3)
  essentialsReadingmb            String?  @db.VarChar(2)
  essentialsReadingmbDate        String?  @db.VarChar(8)
  essentialsSpeaking             String?  @db.VarChar(2)
  essentialsSpeakingCEFR         String?  @db.VarChar(3)
  essentialsSpeakingmb           String?  @db.VarChar(2)
  essentialsSpeakingmbDate       String?  @db.VarChar(8)
  essentialsTotalBandScore       String?  @db.VarChar(4)
  essentialsTotalBandScoreCEFR   String?  @db.VarChar(6)
  essentialsTotalBandScoremb     String?  @db.VarChar(4)
  essentialsTotalBandScorembDate String?  @db.VarChar(8)
  essentialsWriting              String?  @db.VarChar(2)
  essentialsWritingCEFR          String?  @db.VarChar(3)
  essentialsWritingmb            String?  @db.VarChar(2)
  essentialsWritingmbDate        String?  @db.VarChar(8)
  fName                          String?  @db.VarChar(35)
  gender                         String?  @db.VarChar(1)
  id                             Int      @id @default(autoincrement())
  identificationType             String?  @db.VarChar(15)
  idNumber                       String?  @db.VarChar(25)
  instCode                       String?  @db.VarChar(6)
  issuingCountry                 String?  @db.VarChar(10)
  listening                      String?  @db.VarChar(2)
  listeningIndicator             String?  @db.VarChar(1)
  listeningmb                    String?  @db.VarChar(2)
  listeningmbDate                String?  @db.VarChar(8)
  lName                          String?  @db.VarChar(35)
  mName                          String?  @db.VarChar(35)
  nativeCountryCode              String?  @db.VarChar(5)
  nativeCountryName              String?  @db.VarChar(43)
  nativeLanguageCode             String?  @db.VarChar(5)
  nativeLanguageName             String   @db.VarChar(43)
  reading                        String?  @db.VarChar(2)
  readingmb                      String?  @db.VarChar(2)
  readingmbDate                  String?  @db.VarChar(8)
  regNumber                      String?  @db.VarChar(18)
  reportDate                     String?  @db.VarChar(8)
  rPDTListening                  String?  @db.VarChar(2)
  rPDTReading                    String?  @db.VarChar(2)
  rPDTWriting                    String?  @db.VarChar(2)
  speaking                       String?  @db.VarChar(2)
  speakingIndicator              String?  @db.VarChar(1)
  speakingmb                     String?  @db.VarChar(2)
  speakingmbDate                 String?  @db.VarChar(8)
  testCenterCode                 String?  @db.VarChar(15)
  testCenterCodeRPDT             String?  @db.VarChar(5)
  testCountryLocation            String?  @db.VarChar(36)
  testDate                       String?  @db.VarChar(9)
  testType                       String?  @db.VarChar(1)
  total                          String?  @db.VarChar(3)
  totalmb                        String?  @db.VarChar(3)
  totalmbDate                    String?  @db.VarChar(8)
  writing                        String?  @db.VarChar(2)
  writingmb                      String?  @db.VarChar(2)
  writingmbDate                  String?  @db.VarChar(8)

  @@unique([regNumber, reportDate], map: "regNumber_reportDate")
  @@index([email], map: "email")
  @@map("etsToeflScore")
}

model ExceptionApp {
  active Int? @default(1)
  appId  Int? @default(0)
  id     Int  @id @default(autoincrement())

  @@index([appId], map: "appId")
  @@map("exceptionApps")
}

model Experience {
  address        String?     @db.VarChar(255)
  application    Application @relation(fields: [application_id], references: [id])
  application_id Int
  company        String?     @db.VarChar(50)
  datafileId     Int?        @map("datafile_id")
  endDate        String?     @map("end_date") @db.VarChar(20)
  experiencetype Int?
  id             Int         @id @default(autoincrement())
  jobDescription String?     @map("job_description") @db.VarChar(255)
  jobTitle       String?     @map("job_title") @db.VarChar(255)
  orderEntered   Int?        @map("order_entered") @db.UnsignedTinyInt()
  startDate      DateTime?   @map("start_date") @db.Date()
  yearsExp       String?     @map("years_exp") @db.VarChar(20)

  @@index([application_id], map: "application_id")
  @@index([datafileId], map: "datafile_id")
  @@map("experience")
}

model FailedMerge {
  applicationId Int?    @map("application_id")
  file          String? @db.VarChar(250)
  guid          String? @db.VarChar(100)
  id            String  @id @default(cuid())

  @@unique([applicationId, file], map: "application_id_file")
  @@map("failed_merges")
  @@ignore()
}

model Fellowship {
  amount         String?     @db.VarChar(50)
  application    Application @relation(fields: [application_id], references: [id])
  application_id Int
  appliedDate    DateTime?   @map("applied_date") @db.Date()
  awardDate      DateTime?   @map("award_date") @db.Date()
  datafileId     Int?        @map("datafile_id")
  duration       Int?
  id             Int         @id @default(autoincrement())
  name           String?     @db.VarChar(200)
  short          Int?        @db.TinyInt()
  status         String?     @db.VarChar(25)

  @@index([application_id], map: "application_id")
  @@map("fellowships")
}

model Fieldsofstudy {
  id       Int            @id @default(autoincrement())
  name     String         @default("") @db.VarChar(100)
  programs ProgramModel[]

  @@map("fieldsofstudy")
}

model FolderLabelInfo {
  id              Int       @id @default(autoincrement())
  lastLabelColumn Int?      @map("last_label_column")
  lastLabelRow    Int?      @map("last_label_row")
  lastRanTime     DateTime? @map("last_ran_time") @db.DateTime(0)
  periodId        Int       @map("period_id")

  @@map("folder_label_info")
}

model Gender {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(50)

  @@map("gender")
}

model Gmatscore {
  analyticalwritingpercentile Int?
  analyticalwritingscore      Decimal?    @db.Decimal(2, 1)
  application                 Application @relation(fields: [application_id], references: [id])
  application_id              Int
  datafileId                  Int?        @map("datafile_id")
  id                          Int         @id @default(autoincrement())
  quantitativepercentile      Int?
  quantitativescore           Int?
  scorereceived               Boolean     @default(false)
  testdate                    DateTime?   @db.Date()
  totalpercentile             Int?
  totalscore                  Int?
  verbalpercentile            Int?
  verbalscore                 Int?

  @@index([application_id], map: "application_id")
  @@index([datafileId], map: "datafile_id")
  @@map("gmatscore")
}

model Gpascale {
  formula   String? @db.VarChar(100)
  id        Int     @id @default(autoincrement())
  name      String  @db.VarChar(10)
  sortorder Int     @default(0)

  @@map("gpascales")
}

model Grescore {
  analyticalpercentile        String?   @db.Char(2)
  analyticalscore             String?   @db.Char(3)
  analyticalwritingpercentile String?   @db.Char(2)
  analyticalwritingscore      Decimal?  @db.Decimal(2, 1)
  applicationId               Int       @default(0) @map("application_id")
  athome                      Int?      @db.TinyInt()
  datafileId                  Int?      @map("datafile_id")
  greEmail                    String?   @db.VarChar(255)
  id                          Int       @id @default(autoincrement())
  quantitativepercentile      String?   @db.Char(2)
  quantitativescore           String?   @db.Char(3)
  scorereceived               Boolean   @default(false)
  testdate                    DateTime? @default(dbgenerated()) @db.Date()
  verbalpercentile            String?   @db.Char(2)
  verbalscore                 String?   @db.Char(3)

  @@index([applicationId], map: "application_id")
  @@index([datafileId], map: "datafile_id")
  @@map("grescore")
}

model GrescoreMscsWaiver {
  id          Int      @id @default(autoincrement()) @map("application_id")
  waiverAgree Int      @default(0) @map("waiver_agree") @db.TinyInt()
  waiverTime  DateTime @default(now()) @map("waiver_time") @db.Timestamp(0)

  @@map("grescore_mscs_waiver")
}

model Gresubjectscore {
  application    Application @relation(fields: [application_id], references: [id])
  application_id Int
  datafileId     Int?        @map("datafile_id")
  greSubEmail    String?     @db.VarChar(250)
  id             Int         @id @default(autoincrement())
  name           String?     @db.VarChar(250)
  percentile     String?     @db.Char(3)
  score          String?     @db.Char(4)
  scorereceived  Boolean     @default(false)
  testdate       DateTime?   @db.Date()

  @@index([application_id], map: "application_id")
  @@index([datafileId], map: "datafile_id")
  @@map("gresubjectscore")
}

model GroupRank {
  comment            String?  @db.Text()
  groupId            Int      @map("group_id")
  id                 String   @id @default(cuid())
  luUsersUsertypesId Int      @map("lu_users_usertypes_id")
  periodId           Int      @map("period_id")
  ranking            String?  @db.Text()
  round              Int
  timestamp          DateTime @default(now()) @db.Timestamp(0)

  @@unique([groupId, round, periodId, timestamp])
  @@map("group_rank")
}

model GroupRankComment {
  comment            String? @db.Text()
  groupId            Int     @map("group_id")
  id                 String  @id @default(cuid())
  luUsersUsertypesId Int     @map("lu_users_usertypes_id")
  periodId           Int     @map("period_id")
  round              Int

  @@unique([groupId, round, periodId])
  @@map("group_rank_comment")
}

model GroupRankMember {
  applicationId      Int    @map("application_id")
  grank              Int
  groupId            Int    @map("group_id")
  id                 String @id @default(cuid())
  luUsersUsertypesId Int    @map("lu_users_usertypes_id")
  periodId           Int    @map("period_id")
  round              Int

  @@unique([groupId, round, periodId, applicationId])
  @@map("group_rank_member")
}

model Highschool {
  appId      Int
  created    DateTime @default(now()) @db.DateTime(0)
  graduated  Int?     @default(0) @db.UnsignedTinyInt()
  hsCeeb     Int?     @db.UnsignedInt()
  hsDuration Decimal? @db.Decimal(3, 2)
  hsGradYear Int?
  hsName     String?  @db.Text()
  hsNces     BigInt?  @db.UnsignedBigInt()
  hsState    String?  @db.VarChar(100)
  hsZip      String?  @db.VarChar(12)
  id         Int      @id @default(autoincrement()) @map("hsId")
  modified   DateTime @default(now()) @db.DateTime(0)

  @@index([appId], map: "appId")
  @@map("highschool")
}

model Ieltsscore {
  application    Application @relation(fields: [application_id], references: [id])
  application_id Int
  datafileId     Int?        @map("datafile_id") @db.UnsignedInt()
  id             Int         @id @default(autoincrement()) @db.UnsignedInt()
  listeningscore Decimal?    @db.Decimal(2, 1)
  overallscore   Decimal?    @db.Decimal(2, 1)
  readingscore   Decimal?    @db.Decimal(2, 1)
  scorereceived  Int?        @default(0) @db.UnsignedTinyInt()
  speakingscore  Decimal?    @db.Decimal(2, 1)
  testdate       DateTime?   @default(dbgenerated()) @db.Date()
  testEmail      String?     @db.VarChar(250)
  writingscore   Decimal?    @db.Decimal(2, 1)

  @@index([application_id], map: "idx_ieltsscore_application_id")
  @@map("ieltsscore")
}

model IniDisciplinaryAction {
  applicationId         Int     @map("application_id")
  id                    Int     @id @default(autoincrement())
  retraction            Int     @default(0) @db.TinyInt()
  retractionDescription String? @map("retraction_description") @db.VarChar(255)
  sanction              Int     @default(0) @db.TinyInt()
  sanctionDescription   String? @map("sanction_description") @db.VarChar(255)

  @@map("ini_disciplinary_action")
}

model IniFinancialSupport {
  applicationId               Int     @map("application_id")
  applyOutsideSupportSource   String? @map("apply_outside_support_source") @db.VarChar(255)
  applyOutsideSupportType     String? @map("apply_outside_support_type") @db.VarChar(100)
  attendWithoutSupport        Int     @default(0) @map("attend_without_support") @db.TinyInt()
  familySupportAmount         String? @map("family_support_amount") @db.VarChar(255)
  familySupportType           String? @map("family_support_type") @db.VarChar(255)
  id                          Int     @id @default(autoincrement())
  otherSupportSource          String? @map("other_support_source") @db.VarChar(255)
  receiveOutsideSupportSource String? @map("receive_outside_support_source") @db.VarChar(255)
  receiveOutsideSupportType   String? @map("receive_outside_support_type") @db.VarChar(100)
  requestConsideration        Int     @default(0) @map("request_consideration") @db.TinyInt()

  @@map("ini_financial_support")
}

model IniSop {
  additionalInfo       String? @map("additional_info") @db.Text()
  applicationId        Int     @map("application_id")
  background           String  @db.Text()
  id                   Int     @id @default(autoincrement())
  leadershipExperience String  @map("leadership_experience") @db.Text()
  objective            String  @db.Text()
  researchExperience   String  @map("research_experience") @db.Text()
  sfsInterest          String? @map("sfs_interest") @db.Text()

  @@map("ini_sop")
}

model IniSupportingCoursework {
  applicationId           Int     @map("application_id")
  dataStructuresNumber    String  @map("data_structures_number") @db.VarChar(50)
  dataStructuresTitle     String  @map("data_structures_title") @db.VarChar(100)
  id                      Int     @id @default(autoincrement())
  msitExperience          String? @map("msit_experience") @db.VarChar(255)
  probabilityNumber       String  @map("probability_number") @db.VarChar(50)
  probabilityTitle        String  @map("probability_title") @db.VarChar(100)
  programmingDescription  String  @map("programming_description") @db.Text()
  programmingDescription2 String? @map("programming_description2") @db.Text()
  statisticsNumber        String  @map("statistics_number") @db.VarChar(50)
  statisticsTitle         String  @map("statistics_title") @db.VarChar(100)

  @@map("ini_supporting_coursework")
}

model IniSupportingCourseworkKobe {
  applicationId Int    @map("application_id")
  description   String @db.Text()
  id            Int    @id @default(autoincrement())

  @@map("ini_supporting_coursework_kobe")
}

model IniYearsExperience {
  applicationId        Int @map("application_id")
  fullTimeProfessional Int @map("full_time_professional")
  id                   Int @id @default(autoincrement())
  relevantIndustry     Int @map("relevant_industry")

  @@map("ini_years_experience")
}

model Institute {
  hide    Boolean? @default(false)
  id      Int      @id @default(autoincrement())
  name    String   @db.VarChar(255)
  usersId Int?     @map("users_id")

  @@map("institutes")
}

model Interest {
  id   Int    @id @default(autoincrement())
  name String @default("") @db.VarChar(100)

  @@map("interest")
}

model IpedsEthnicity {
  ethnicityId    Int    @map("ethnicity_id")
  id             Int    @id @default(autoincrement()) @map("ipeds_ethnicity_id")
  ipedsEthnicity String @map("ipeds_ethnicity") @db.VarChar(50)
  sortOrder      Int    @map("sort_order")

  @@map("ipeds_ethnicity")
}

model IpedsRace {
  id        Int    @id @default(autoincrement()) @map("ipeds_race_id")
  ipedsRace String @map("ipeds_race") @db.VarChar(200)
  sortOrder Int    @map("sort_order")

  @@map("ipeds_race")
}

model JiraIssue {
  created     DateTime @default(now()) @db.DateTime(0)
  id          String   @id @default(cuid()) @map("jiraName") @db.VarChar(50)
  jiraId      BigInt
  jiraIssueId Int      @map("id")
  jiraProject String   @db.VarChar(100)
  updatedAt   DateTime @default(now()) @db.DateTime(0)

  @@index([id], map: "id")
  @@map("jiraIssues")
}

model Jiravote {
  created   DateTime @default(now()) @db.DateTime(0)
  id        Int      @id @default(autoincrement())
  jiraName  String   @db.VarChar(50)
  updatedAt DateTime @default(now()) @db.DateTime(0)
  user      String   @db.VarChar(255)

  @@index([id], map: "id")
  @@map("jiravotes")
  @@ignore()
}

model LangProfRecommend {
  applicationId          Int       @default(0) @map("application_id")
  content                String?   @db.Text()
  datafileId             Int?      @map("datafile_id")
  id                     Int       @id @default(autoincrement())
  langProfRecId          Int?      @map("lang_prof_rec_id")
  languageSpecialization String    @default("0") @map("language_specialization") @db.VarChar(50)
  lastReminderSent       DateTime? @map("last_reminder_sent") @db.Date()
  recUserId              Int       @default(0) @map("rec_user_id")
  reminderSentCount      Int       @default(0) @map("reminder_sent_count")
  submitted              Boolean   @default(false)

  @@unique([applicationId, recUserId])
  @@index([id], map: "id")
  @@map("lang_prof_recommend")
}

model LangProfRecommenderInfo {
  affiliation            String  @db.VarChar(250)
  id                     Int     @id @default(autoincrement()) @map("recommend_id")
  languageSpecialization String? @map("language_specialization") @db.VarChar(50)
  phone                  String  @db.VarChar(20)
  recUserId              Int     @map("rec_user_id")
  title                  String  @db.VarChar(21)

  @@index([recUserId], map: "rec_user_id")
  @@map("lang_prof_recommender_info")
}

model LanguageAssessment {
  applicationId      Int     @map("application_id")
  competencyEvidence String? @map("competency_evidence") @db.Text()
  id                 Int     @id @default(autoincrement())
  language           String  @db.VarChar(100)
  listening          Int?
  nativeSpeaker      Int?    @map("native_speaker") @db.TinyInt()
  reading            Int
  speaking           Int
  studyLevel         Int?    @map("study_level")
  writing            Int
  yearsStudy         Int?    @map("years_study")

  @@map("language_assessment")
}

model LanguageAssessmentRating {
  id    Int    @id @default(autoincrement())
  value String @db.VarChar(20)

  @@map("language_assessment_rating")
}

model LanguageAssessmentStudyLevel {
  id    Int    @id @default(autoincrement())
  value String @db.VarChar(20)

  @@map("language_assessment_study_level")
}

model LegacyEthnicity {
  ethnicityId Int    @map("ethnicity_id")
  id          Int    @id @default(autoincrement())
  name        String @db.VarChar(50)
  sortorder   Int

  @@map("legacy_ethnicity")
}

model LtiMastersAdmit {
  id Int @id @default(autoincrement()) @map("application_id")

  @@map("lti_masters_admits")
}

model LuApplicationAdvisor {
  advisorType    Int         @default(1) @map("advisor_type")
  advisorUserId  Int?        @map("advisor_user_id")
  application    Application @relation(fields: [application_id], references: [id])
  application_id Int
  choice         Int?        @db.UnsignedTinyInt()
  id             Int         @id @default(autoincrement())
  name           String?     @db.VarChar(150)
  programId      Int?        @map("program_id") @db.UnsignedInt()

  @@index([advisorUserId], map: "advisor_user_id")
  @@index([application_id], map: "application_id")
  @@map("lu_application_advisor")
}

model LuApplicationAppreq {
  application    Application @relation(fields: [application_id], references: [id])
  application_id Int
  completed      Boolean     @default(false)
  id             Int         @id @default(autoincrement())
  lastModified   DateTime    @default(now()) @map("last_modified") @db.DateTime(0)
  reqId          Int         @map("req_id")

  @@index([application_id], map: "application_id")
  @@index([reqId], map: "req_id")
  @@map("lu_application_appreqs")
}

model LuApplicationCohort {
  application   Application @relation(fields: [applicationId], references: [id])
  applicationId Int         @unique
  cohortId      Int
  id            Int         @id @default(autoincrement())

  @@map("lu_application_cohort")
}

model LuApplicationEtsgre {
  appId Int
  greId Int
  id    Int @id @default(autoincrement())

  @@unique([appId, greId], map: "appId_greId")
  @@map("lu_application_etsgre")
}

model LuApplicationGroup {
  application    Application @relation(fields: [application_id], references: [id])
  application_id Int
  groupId        Int         @map("group_id")
  id             Int         @id @default(autoincrement())
  round          Int         @default(1)

  @@index([application_id], map: "application_id")
  @@index([groupId], map: "group_id")
  @@map("lu_application_groups")
}

model LuApplicationInterest {
  appProgramId Int  @default(0) @map("app_program_id")
  choice       Int?
  id           Int  @id @default(autoincrement())
  interestId   Int  @default(0) @map("interest_id")

  @@index([appProgramId], map: "app_program_id")
  @@index([interestId], map: "interest_id")
  @@map("lu_application_interest")
}

model LuApplicationProgram {
  admissionStatus     String?      @map("admission_status") @db.Char(1)
  admit               String?      @db.Char(1)
  admitComments       String?      @map("admit_comments") @db.Text()
  application         Application  @relation(fields: [application_id], references: [id])
  application_id      Int
  choice              Int
  decision            String?      @db.VarChar(15)
  faccontact          String?      @db.VarChar(255)
  id                  Int          @id @default(autoincrement())
  ltichoice           String?      @db.VarChar(10)
  msecertchoice       String?      @db.VarChar(10)
  programs            ProgramModel @relation(fields: [program_id], references: [id])
  program_id          Int
  round2              String?      @default("0") @db.Char(1)
  scholarshipAmt      Decimal?     @map("scholarship_amt") @db.Decimal(10, 2)
  scholarshipComments String?      @map("scholarship_comments") @db.Text()
  stucontact          String?      @db.VarChar(255)

  @@index([application_id], map: "application_id")
  @@index([program_id], map: "program_id")
  @@map("lu_application_programs")
}

model LuApplicationProgramsHistory {
  applicationId Int      @map("application_id")
  choice        Int
  createdDate   DateTime @default(now()) @db.DateTime(0)
  deletedBy     Int      @map("deleted_by")
  id            Int      @id @default(autoincrement())
  lapId         Int      @map("lap_id")
  programId     Int      @map("program_id")

  @@index([applicationId], map: "application_id")
  @@index([programId], map: "program_id")
  @@map("lu_application_programs_history")
}

model LuApplicationStartSemester {
  application   Application @relation(fields: [applicationId], references: [id])
  applicationId Int         @unique
  id            Int         @id @default(autoincrement())
  semester      String?     @db.VarChar(20)
  year          String?     @db.VarChar(20)

  @@map("lu_application_start_semester")
}

model LuDegreesApplicationreq {
  appreqId Int @map("appreq_id")
  degreeId Int @map("degree_id")
  id       Int @id @default(autoincrement())

  @@index([appreqId], map: "appreq_id")
  @@index([degreeId], map: "degree_id")
  @@map("lu_degrees_applicationreqs")
}

model LuDomainDepartment {
  departmentId Int @map("department_id")
  domainId     Int @map("domain_id")
  drank        Int @default(0)
  id           Int @id @default(autoincrement())

  @@index([departmentId], map: "department_id")
  @@index([domainId], map: "domain_id")
  @@map("lu_domain_department")
}

model LuProgramsApplicationreq {
  appreqId  Int? @map("appreq_id") @db.UnsignedInt()
  degreeId  Int? @map("degree_id") @db.UnsignedInt()
  id        Int  @id @default(autoincrement()) @db.UnsignedInt()
  programId Int? @map("program_id") @db.UnsignedInt()

  @@map("lu_programs_applicationreqs")
}

model LuProgramsDepartment {
  departmentId Int @map("department_id")
  id           Int @id @default(autoincrement())
  programId    Int @map("program_id")

  @@index([departmentId], map: "department_id")
  @@index([programId], map: "program_id")
  @@map("lu_programs_departments")
}

model LuProgramsInterest {
  id         Int @id @default(autoincrement())
  interestId Int @map("interest_id")
  programId  Int @map("program_id")

  @@index([interestId], map: "interest_id")
  @@index([programId], map: "program_id")
  @@map("lu_programs_interests")
}

model LuProgramsRecommendation {
  id                   Int @id @default(autoincrement())
  numrequired          Int @default(1)
  programId            Int @map("program_id")
  recommendationtypeId Int @map("recommendationtype_id")

  @@index([programId], map: "program_id")
  @@index([recommendationtypeId], map: "recommendationtype_id")
  @@map("lu_programs_recommendations")
}

model LuReviewInterest {
  code      Int @default(0)
  id        Int @id @default(autoincrement())
  programId Int @default(0) @map("program_id")
  reviewId  Int @default(0) @map("review_id")

  @@index([programId], map: "program_id")
  @@index([reviewId], map: "review_id")
  @@map("lu_review_interest")
}

model LuReviewerGroup {
  departmentId Int? @map("department_id") @db.UnsignedInt()
  groupId      Int  @map("group_id")
  id           Int  @id @default(autoincrement())
  reviewerId   Int  @map("reviewer_id")
  round        Int  @default(1)

  @@index([departmentId], map: "department_id")
  @@index([groupId], map: "group_id")
  @@index([reviewerId], map: "reviewer_id")
  @@map("lu_reviewer_groups")
}

model LuUserDepartment {
  departmentId Int @map("department_id")
  id           Int @id @default(autoincrement())
  userId       Int @map("user_id")

  @@index([departmentId], map: "department_id")
  @@index([userId], map: "user_id")
  @@map("lu_user_department")
}

model LuUsersUsertype {
  domain                          Int?
  id                              Int                              @id @default(autoincrement())
  mhciPrereqsConversationComments MhciPrereqsConversationComment[]
  mhciPrereqsCourses              MhciPrereqsCourse[]
  mhciPrereqsDesignPortfolios     MhciPrereqsDesignPortfolio[]
  mhciPrereqsProgrammingSamples   MhciPrereqsProgrammingSample?
  mhciPrereqsProgrammingTests     MhciPrereqsProgrammingTest[]
  users                           User                             @relation(fields: [user_id], references: [id])
  user_id                         Int
  usertypeId                      Int                              @map("usertype_id")

  @@index([domain], map: "domain")
  @@index([user_id], map: "user_id")
  @@index([usertypeId], map: "usertype_id")
  @@map("lu_users_usertypes")
}

model LuUsersUsertypesHistory {
  deleteTimestamp DateTime @default(now()) @map("delete_timestamp") @db.Timestamp(0)
  deleteUsersId   Int?     @map("delete_users_id")
  id              Int      @id @default(autoincrement())
  userId          Int      @map("user_id")
  usertypeId      Int      @map("usertype_id")

  @@index([deleteUsersId], map: "domain")
  @@index([userId], map: "user_id")
  @@index([usertypeId], map: "usertype_id")
  @@map("lu_users_usertypes_history")
}

model LuUsersUsertypesOrig {
  domain     Int?
  id         Int  @id @default(autoincrement())
  userId     Int  @map("user_id")
  usertypeId Int  @map("usertype_id")

  @@index([domain], map: "domain")
  @@index([userId], map: "user_id")
  @@index([usertypeId], map: "usertype_id")
  @@map("lu_users_usertypes_orig")
}

model Merge {
  applicationId Int      @map("application_id")
  errorField    Int      @map("error")
  id            Int      @id @default(autoincrement()) @map("merge_id")
  merged        Boolean
  mergeDate     DateTime @default(now()) @map("merge_date") @db.Timestamp(0)
  message       String?  @db.VarChar(255)

  @@map("merge")
}

model MergeApplication {
  baseConvertError       Int?    @map("base_convert_error")
  baseConvertMessage     String? @map("base_convert_message") @db.VarChar(255)
  baseWriteError         Int?    @map("base_write_error")
  baseWriteMessage       String? @map("base_write_message") @db.VarChar(255)
  id                     Int     @id @default(autoincrement()) @map("merge_id")
  searchTextWriteError   Int?    @map("search_text_write_error")
  searchTextWriteMessage String? @map("search_text_write_message") @db.VarChar(255)

  @@map("merge_application")
}

model MergeDatafile {
  converted      Boolean?
  convertError   Int?     @map("convert_error")
  convertMessage String?  @map("convert_message") @db.VarChar(255)
  datafileinfoId Int      @map("datafileinfo_id")
  id             String   @id @default(cuid())
  merged         Boolean?
  mergeError     Int?     @map("merge_error")
  mergeFilename  String?  @map("merge_filename") @db.VarChar(255)
  mergeId        Int      @map("merge_id")
  mergeMessage   String?  @map("merge_message") @db.VarChar(255)

  @@unique([mergeId, datafileinfoId])
  @@index([datafileinfoId], map: "fk_application_merge_datafile_datafileinfo")
  @@map("merge_datafile")
}

model MhciPrereq {
  application                     Application                      @relation(fields: [application_id], references: [id])
  application_id                  Int
  id                              Int                              @id @default(autoincrement())
  mhciPrereqsConversationComments MhciPrereqsConversationComment[]
  mhciPrereqsStatus               MhciPrereqsStatus?
  periodId                        Int                              @map("period_id") @db.UnsignedInt()
  prereq_type                     EnumMhciPrereqPrereqType
  status2                         EnumMhciPrereqStatus2?
  student_assessment              EnumMhciPrereqStudentAssessment?
  studentLuUsersUsertypesId       Int                              @map("student_lu_users_usertypes_id")
  timestamp                       DateTime                         @default(now()) @db.Timestamp(0)

  @@unique([studentLuUsersUsertypesId, periodId, prereq_type], map: "student_lu_users_usertypes_id")
  @@index([application_id], map: "application_id")
  @@map("mhci_prereqs")
}

model MhciPrereqsConversationComment {
  applicationId         Int             @map("application_id") @db.UnsignedInt()
  comment               String          @db.Text()
  id                    Int             @id @default(autoincrement())
  luUsersUsertypes      LuUsersUsertype @relation(fields: [lu_users_usertypes_id], references: [id])
  lu_users_usertypes_id Int
  mhciPrereqs           MhciPrereq      @relation(fields: [prereq_id], references: [id])
  prereq_id             Int
  periodId              Int?            @map("period_id") @db.UnsignedInt()
  programId             Int?            @map("program_id") @db.UnsignedInt()
  timestamp             DateTime        @default(now()) @db.Timestamp(0)

  @@index([lu_users_usertypes_id], map: "lu_users_usertypes_id")
  @@index([prereq_id], map: "prereq_id")
  @@map("mhci_prereqsConversationComments")
}

model MhciPrereqsCourseDatafile {
  datafileinfoId      Int?              @unique @map("datafileinfo_id")
  id                  Int               @id @default(autoincrement())
  mhciPrereqsCourses  MhciPrereqsCourse @relation(fields: [prereq_courses_id], references: [id])
  prereq_courses_id   Int
  newFileUploaded     Boolean           @default(false) @map("new_file_uploaded")
  note                String?           @db.VarChar(255)
  submittedToReviewer Boolean           @default(false) @map("submitted_to_reviewer")

  @@index([prereq_courses_id], map: "prereq_courses_id")
  @@map("mhci_prereqsCourseDatafiles")
}

model MhciPrereqsCourse {
  application                   Application                     @relation(fields: [application_id], references: [id])
  application_id                Int
  course_type                   EnumMhciPrereqsCourseCourseType
  id                            Int                             @id @default(autoincrement())
  luUsersUsertypes              LuUsersUsertype                 @relation(fields: [student_lu_users_usertypes_id], references: [id])
  student_lu_users_usertypes_id Int
  mhciPrereqsCourseDatafiles    MhciPrereqsCourseDatafile[]
  periodId                      Int?                            @map("period_id") @db.UnsignedInt()
  programId                     Int?                            @map("program_id") @db.UnsignedInt()
  studentCourseGrade            String?                         @map("student_course_grade") @db.VarChar(5)
  studentCourseInstitution      String                          @map("student_course_institution") @db.VarChar(255)
  studentCourseName             String                          @map("student_course_name") @db.VarChar(255)
  studentCourseTime             String                          @map("student_course_time") @db.VarChar(100)
  submittedToReviewer           Int                             @default(0) @map("submitted_to_reviewer") @db.TinyInt()

  @@unique([student_lu_users_usertypes_id, course_type, studentCourseName, studentCourseTime, studentCourseInstitution, studentCourseGrade], map: "student_lu_users_usertypes_id")
  @@index([application_id], map: "application_id")
  @@map("mhci_prereqsCourses")
}

model MhciPrereqsDesignPortfolio {
  applicationId                 Int?            @map("application_id") @db.UnsignedInt()
  description                   String?         @db.VarChar(255)
  id                            Int             @id @default(autoincrement())
  luUsersUsertypes              LuUsersUsertype @relation(fields: [student_lu_users_usertypes_id], references: [id])
  student_lu_users_usertypes_id Int
  periodId                      Int?            @map("period_id") @db.UnsignedInt()
  programId                     Int?            @map("program_id") @db.UnsignedInt()
  url                           String?         @db.VarChar(255)

  @@index([student_lu_users_usertypes_id], map: "student_lu_users_usertypes_id")
  @@map("mhci_prereqsDesignPortfolios")
}

model MhciPrereqsProgrammingSample {
  applicationId                 Int?            @map("application_id") @db.UnsignedInt()
  datafileinfoId                Int             @map("datafileinfo_id")
  id                            Int             @id @default(autoincrement())
  luUsersUsertypes              LuUsersUsertype @relation(fields: [student_lu_users_usertypes_id], references: [id])
  student_lu_users_usertypes_id Int             @unique
  newFileUploaded               Boolean         @default(false) @map("new_file_uploaded")
  note                          String?         @db.VarChar(255)
  periodId                      Int?            @map("period_id") @db.UnsignedInt()
  programId                     Int?            @map("program_id") @db.UnsignedInt()
  submittedToReviewer           Boolean         @default(false) @map("submitted_to_reviewer")

  @@map("mhci_prereqsProgrammingSamples")
}

model MhciPrereqsProgrammingTest {
  applicationId                 Int             @map("application_id")
  downloadTimestamp             DateTime?       @map("download_timestamp") @db.Timestamp(0)
  id                            Int             @id @default(autoincrement())
  luUsersUsertypes              LuUsersUsertype @relation(fields: [student_lu_users_usertypes_id], references: [id])
  student_lu_users_usertypes_id Int
  periodId                      Int             @map("period_id")
  uploadDatafileinfoId          Int?            @map("upload_datafileinfo_id")

  @@index([student_lu_users_usertypes_id], map: "student_lu_users_usertypes_id")
  @@map("mhci_prereqsProgrammingTests")
}

model MhciPrereqsReference {
  anovaComment         String?                                      @map("anova_comment") @db.VarChar(255)
  anova_knowledge      EnumMhciPrereqsReferenceAnovaKnowledge?
  applicationId        Int                                          @default(0) @map("application_id")
  content              String?                                      @db.Text()
  datafileId           Int?                                         @map("datafile_id")
  id                   Int                                          @id @default(autoincrement())
  lastReminderSent     DateTime?                                    @map("last_reminder_sent") @db.Date()
  periodId             Int?                                         @map("period_id") @db.UnsignedInt()
  programId            Int?                                         @map("program_id") @db.UnsignedInt()
  refUserId            Int                                          @default(0) @map("ref_user_id")
  regressionComment    String?                                      @map("regression_comment") @db.VarChar(255)
  regression_knowledge EnumMhciPrereqsReferenceRegressionKnowledge?
  reminderSentCount    Int                                          @default(0) @map("reminder_sent_count")
  submitted            Boolean                                      @default(false)

  @@index([applicationId], map: "application_id")
  @@index([datafileId], map: "datafile_id")
  @@index([refUserId], map: "ref_user_id")
  @@map("mhci_prereqsReferences")
}

model MhciPrereqsReviewer {
  emailNotification Boolean @default(false) @map("email_notification")
  id                Int     @id @default(autoincrement())
  placeoutPeriodId  String  @map("placeout_period_id") @db.VarChar(50)
  prereqType        String  @map("prereq_type") @db.VarChar(50)
  reviewerLuuId     Int     @map("reviewer_luu_id")

  @@map("mhci_prereqsReviewers")
}

model MhciPrereqsStatus {
  id                         Int                                 @id @default(autoincrement())
  mhciPrereqs                MhciPrereq                          @relation(fields: [mhci_prereqs_id], references: [id])
  mhci_prereqs_id            Int                                 @unique
  programId                  Int?                                @map("program_id") @db.UnsignedInt()
  reviewerExplanation        String?                             @map("reviewer_explanation") @db.VarChar(255)
  reviewerLuUsersUsertypesId Int?                                @map("reviewer_lu_users_usertypes_id")
  reviewer_status            EnumMhciPrereqsStatusReviewerStatus @default(In_progress)
  reviewerTimestamp          DateTime?                           @map("reviewer_timestamp") @db.Timestamp(0)
  status3                    EnumMhciPrereqsStatusStatus3?

  @@map("mhci_prereqs_status")
}

model MhciSlateAppSchool {
  first                                String? @map("First") @db.VarChar(100)
  id                                   String  @id @default(cuid()) @map("Application_Slate_GUID") @db.VarChar(100)
  last                                 String? @map("Last") @db.VarChar(100)
  middle                               String? @map("Middle") @db.VarChar(100)
  prefix                               String? @map("Prefix") @db.VarChar(100)
  school1Awards                        String? @map("School_1_Awards") @db.VarChar(100)
  school1City                          String? @map("School_1_City") @db.VarChar(100)
  school1ClassRankNumeric              String? @map("School_1_Class_Rank_Numeric") @db.VarChar(100)
  school1ClassRankXOutOfY              String? @map("School_1_Class_Rank_X_out_of_Y") @db.VarChar(100)
  school1ClassSizeNumeric              String? @map("School_1_Class_Size_Numeric") @db.VarChar(100)
  school1Code                          String? @map("School_1_Code") @db.VarChar(100)
  school1Confirmed                     String? @map("School_1_Confirmed") @db.VarChar(100)
  school1Country                       String? @map("School_1_Country") @db.VarChar(100)
  school1Created                       String? @map("School_1_Created") @db.VarChar(100)
  school1Degree                        String? @map("School_1_Degree") @db.VarChar(100)
  school1DegreeConferred               String? @map("School_1_Degree_Conferred") @db.VarChar(100)
  school1Field                         String? @map("School_1_Field") @db.VarChar(100)
  school1From                          String? @map("School_1_From") @db.VarChar(100)
  school1Gpa                           String? @map("School_1_GPA") @db.VarChar(100)
  school1GpaConverted                  String? @map("School_1_GPA_Converted") @db.VarChar(100)
  school1GpaRecalculated               String? @map("School_1_GPA_Recalculated") @db.VarChar(100)
  school1GpaScale                      String? @map("School_1_GPA_Scale") @db.VarChar(100)
  school1Honors                        String? @map("School_1_Honors") @db.VarChar(100)
  school1Hours                         String? @map("School_1_Hours") @db.VarChar(100)
  school1Institution                   String? @map("School_1_Institution") @db.VarChar(100)
  school1Language                      String? @map("School_1_Language") @db.VarChar(100)
  school1Major                         String? @map("School_1_Major") @db.VarChar(100)
  school1Major1                        String? @map("School_1_Major_1") @db.VarChar(100)
  school1Major2                        String? @map("School_1_Major_2") @db.VarChar(100)
  school1Minor                         String? @map("School_1_Minor") @db.VarChar(100)
  school1Region                        String? @map("School_1_Region") @db.VarChar(100)
  school1To                            String? @map("School_1_To") @db.VarChar(100)
  school1Type                          String? @map("School_1_Type") @db.VarChar(100)
  school1Updated                       String? @map("School_1_Updated") @db.VarChar(100)
  school1Website                       String? @map("School_1_Website") @db.VarChar(100)
  school2Awards                        String? @map("School_2_Awards") @db.VarChar(100)
  school2City                          String? @map("School_2_City") @db.VarChar(100)
  school2ClassRankNumeric              String? @map("School_2_Class_Rank_Numeric") @db.VarChar(100)
  school2ClassRankXOutOfY              String? @map("School_2_Class_Rank_X_out_of_Y") @db.VarChar(100)
  school2ClassSizeNumeric              String? @map("School_2_Class_Size_Numeric") @db.VarChar(100)
  school2Code                          String? @map("School_2_Code") @db.VarChar(100)
  school2Confirmed                     String? @map("School_2_Confirmed") @db.VarChar(100)
  school2Country                       String? @map("School_2_Country") @db.VarChar(100)
  school2Created                       String? @map("School_2_Created") @db.VarChar(100)
  school2Degree                        String? @map("School_2_Degree") @db.VarChar(100)
  school2DegreeConferred               String? @map("School_2_Degree_Conferred") @db.VarChar(100)
  school2Field                         String? @map("School_2_Field") @db.VarChar(100)
  school2From                          String? @map("School_2_From") @db.VarChar(100)
  school2Gpa                           String? @map("School_2_GPA") @db.VarChar(100)
  school2GpaConverted                  String? @map("School_2_GPA_Converted") @db.VarChar(100)
  school2GpaRecalculated               String? @map("School_2_GPA_Recalculated") @db.VarChar(100)
  school2GpaScale                      String? @map("School_2_GPA_Scale") @db.VarChar(100)
  school2Honors                        String? @map("School_2_Honors") @db.VarChar(100)
  school2Hours                         String? @map("School_2_Hours") @db.VarChar(100)
  school2Institution                   String? @map("School_2_Institution") @db.VarChar(100)
  school2Language                      String? @map("School_2_Language") @db.VarChar(100)
  school2Major                         String? @map("School_2_Major") @db.VarChar(100)
  school2Major1                        String? @map("School_2_Major_1") @db.VarChar(100)
  school2Major2                        String? @map("School_2_Major_2") @db.VarChar(100)
  school2Minor                         String? @map("School_2_Minor") @db.VarChar(100)
  school2Region                        String? @map("School_2_Region") @db.VarChar(100)
  school2To                            String? @map("School_2_To") @db.VarChar(100)
  school2Type                          String? @map("School_2_Type") @db.VarChar(100)
  school2Updated                       String? @map("School_2_Updated") @db.VarChar(100)
  school2Website                       String? @map("School_2_Website") @db.VarChar(100)
  school3Awards                        String? @map("School_3_Awards") @db.VarChar(100)
  school3City                          String? @map("School_3_City") @db.VarChar(100)
  school3ClassRankNumeric              String? @map("School_3_Class_Rank_Numeric") @db.VarChar(100)
  school3ClassRankXOutOfY              String? @map("School_3_Class_Rank_X_out_of_Y") @db.VarChar(100)
  school3ClassSizeNumeric              String? @map("School_3_Class_Size_Numeric") @db.VarChar(100)
  school3Code                          String? @map("School_3_Code") @db.VarChar(100)
  school3Confirmed                     String? @map("School_3_Confirmed") @db.VarChar(100)
  school3Country                       String? @map("School_3_Country") @db.VarChar(100)
  school3Created                       String? @map("School_3_Created") @db.VarChar(100)
  school3Degree                        String? @map("School_3_Degree") @db.VarChar(100)
  school3DegreeConferred               String? @map("School_3_Degree_Conferred") @db.VarChar(100)
  school3Field                         String? @map("School_3_Field") @db.VarChar(100)
  school3From                          String? @map("School_3_From") @db.VarChar(100)
  school3Gpa                           String? @map("School_3_GPA") @db.VarChar(100)
  school3GpaConverted                  String? @map("School_3_GPA_Converted") @db.VarChar(100)
  school3GpaRecalculated               String? @map("School_3_GPA_Recalculated") @db.VarChar(100)
  school3GpaScale                      String? @map("School_3_GPA_Scale") @db.VarChar(100)
  school3Honors                        String? @map("School_3_Honors") @db.VarChar(100)
  school3Hours                         String? @map("School_3_Hours") @db.VarChar(100)
  school3Institution                   String? @map("School_3_Institution") @db.VarChar(100)
  school3Language                      String? @map("School_3_Language") @db.VarChar(100)
  school3Major                         String? @map("School_3_Major") @db.VarChar(100)
  school3Major1                        String? @map("School_3_Major_1") @db.VarChar(100)
  school3Major2                        String? @map("School_3_Major_2") @db.VarChar(100)
  school3Minor                         String? @map("School_3_Minor") @db.VarChar(100)
  school3Region                        String? @map("School_3_Region") @db.VarChar(100)
  school3To                            String? @map("School_3_To") @db.VarChar(100)
  school3Type                          String? @map("School_3_Type") @db.VarChar(100)
  school3Updated                       String? @map("School_3_Updated") @db.VarChar(100)
  school3Website                       String? @map("School_3_Website") @db.VarChar(100)
  school4Awards                        String? @map("School_4_Awards") @db.VarChar(100)
  school4City                          String? @map("School_4_City") @db.VarChar(100)
  school4ClassRankNumeric              String? @map("School_4_Class_Rank_Numeric") @db.VarChar(100)
  school4ClassRankXOutOfY              String? @map("School_4_Class_Rank_X_out_of_Y") @db.VarChar(100)
  school4ClassSizeNumeric              String? @map("School_4_Class_Size_Numeric") @db.VarChar(100)
  school4Code                          String? @map("School_4_Code") @db.VarChar(100)
  school4Confirmed                     String? @map("School_4_Confirmed") @db.VarChar(100)
  school4Country                       String? @map("School_4_Country") @db.VarChar(100)
  school4Created                       String? @map("School_4_Created") @db.VarChar(100)
  school4Degree                        String? @map("School_4_Degree") @db.VarChar(100)
  school4DegreeConferred               String? @map("School_4_Degree_Conferred") @db.VarChar(100)
  school4Field                         String? @map("School_4_Field") @db.VarChar(100)
  school4From                          String? @map("School_4_From") @db.VarChar(100)
  school4Gpa                           String? @map("School_4_GPA") @db.VarChar(100)
  school4GpaConverted                  String? @map("School_4_GPA_Converted") @db.VarChar(100)
  school4GpaRecalculated               String? @map("School_4_GPA_Recalculated") @db.VarChar(100)
  school4GpaScale                      String? @map("School_4_GPA_Scale") @db.VarChar(100)
  school4Honors                        String? @map("School_4_Honors") @db.VarChar(100)
  school4Hours                         String? @map("School_4_Hours") @db.VarChar(100)
  school4Institution                   String? @map("School_4_Institution") @db.VarChar(100)
  school4Language                      String? @map("School_4_Language") @db.VarChar(100)
  school4Major                         String? @map("School_4_Major") @db.VarChar(100)
  school4Major1                        String? @map("School_4_Major_1") @db.VarChar(100)
  school4Major2                        String? @map("School_4_Major_2") @db.VarChar(100)
  school4Minor                         String? @map("School_4_Minor") @db.VarChar(100)
  school4Region                        String? @map("School_4_Region") @db.VarChar(100)
  school4To                            String? @map("School_4_To") @db.VarChar(100)
  school4Type                          String? @map("School_4_Type") @db.VarChar(100)
  school4Updated                       String? @map("School_4_Updated") @db.VarChar(100)
  school4Website                       String? @map("School_4_Website") @db.VarChar(100)
  school5Awards                        String? @map("School_5_Awards") @db.VarChar(100)
  school5City                          String? @map("School_5_City") @db.VarChar(100)
  school5ClassRankNumeric              String? @map("School_5_Class_Rank_Numeric") @db.VarChar(100)
  school5ClassRankXOutOfY              String? @map("School_5_Class_Rank_X_out_of_Y") @db.VarChar(100)
  school5ClassSizeNumeric              String? @map("School_5_Class_Size_Numeric") @db.VarChar(100)
  school5Code                          String? @map("School_5_Code") @db.VarChar(100)
  school5Confirmed                     String? @map("School_5_Confirmed") @db.VarChar(100)
  school5Country                       String? @map("School_5_Country") @db.VarChar(100)
  school5Created                       String? @map("School_5_Created") @db.VarChar(100)
  school5Degree                        String? @map("School_5_Degree") @db.VarChar(100)
  school5DegreeConferred               String? @map("School_5_Degree_Conferred") @db.VarChar(100)
  school5Field                         String? @map("School_5_Field") @db.VarChar(100)
  school5From                          String? @map("School_5_From") @db.VarChar(100)
  school5Gpa                           String? @map("School_5_GPA") @db.VarChar(100)
  school5GpaConverted                  String? @map("School_5_GPA_Converted") @db.VarChar(100)
  school5GpaRecalculated               String? @map("School_5_GPA_Recalculated") @db.VarChar(100)
  school5GpaScale                      String? @map("School_5_GPA_Scale") @db.VarChar(100)
  school5Honors                        String? @map("School_5_Honors") @db.VarChar(100)
  school5Hours                         String? @map("School_5_Hours") @db.VarChar(100)
  school5Institution                   String? @map("School_5_Institution") @db.VarChar(100)
  school5Language                      String? @map("School_5_Language") @db.VarChar(100)
  school5Major                         String? @map("School_5_Major") @db.VarChar(100)
  school5Major1                        String? @map("School_5_Major_1") @db.VarChar(100)
  school5Major2                        String? @map("School_5_Major_2") @db.VarChar(100)
  school5Minor                         String? @map("School_5_Minor") @db.VarChar(100)
  school5Region                        String? @map("School_5_Region") @db.VarChar(100)
  school5To                            String? @map("School_5_To") @db.VarChar(100)
  school5Type                          String? @map("School_5_Type") @db.VarChar(100)
  school5Updated                       String? @map("School_5_Updated") @db.VarChar(100)
  school5Website                       String? @map("School_5_Website") @db.VarChar(100)
  schoolNum1NumberOfActiveApplications String? @map("School_num1_Number_of_Active_Applications") @db.VarChar(100)
  schoolNum1Priority                   String? @map("School_num1_Priority") @db.VarChar(100)
  schoolNum2Priority                   String? @map("School_num2_Priority") @db.VarChar(100)
  schoolNum3Priority                   String? @map("School_num3_Priority") @db.VarChar(100)
  schoolNum4Priority                   String? @map("School_num4_Priority") @db.VarChar(100)
  schoolNum5Priority                   String? @map("School_num5_Priority") @db.VarChar(100)

  @@map("mhci_slate_app_schools")
}

model MhciSlateApp {
  applicationStatus                String? @map("Application_Status") @db.VarChar(255)
  appSubmittedDate                 String? @map("App_Submitted_Date") @db.VarChar(255)
  birthdate                        String? @map("Birthdate") @db.VarChar(255)
  citizenshipStatus                String? @map("Citizenship_Status") @db.VarChar(255)
  decisionConfirmedExportCode      String? @map("Decision_Confirmed_Export_Code") @db.VarChar(255)
  email                            String? @map("Email") @db.VarChar(255)
  emailAddress                     String? @map("Email_Address") @db.VarChar(255)
  first                            String? @map("First") @db.VarChar(255)
  hispanic                         String? @map("Hispanic") @db.VarChar(255)
  id                               String  @id @default(cuid()) @map("Application_Slate_GUID") @db.VarChar(255)
  ipedsClassification              String? @map("IPEDS_Classification") @db.VarChar(255)
  language                         String? @map("Language") @db.VarChar(255)
  last                             String? @map("Last") @db.VarChar(255)
  mailingAddressCity               String? @map("Mailing_Address_City") @db.VarChar(255)
  mailingAddressCountryFipsCode    String? @map("Mailing_Address_Country_FIPS_Code") @db.VarChar(255)
  mailingAddressCountryIso2Code    String? @map("Mailing_Address_Country_ISO_2_Code") @db.VarChar(255)
  mailingAddressCountryIso3Code    String? @map("Mailing_Address_Country_ISO_3_Code") @db.VarChar(255)
  mailingAddressCountryName        String? @map("Mailing_Address_Country_Name") @db.VarChar(255)
  mailingAddressCountrySisExport   String? @map("Mailing_Address_Country_SIS_Export") @db.VarChar(255)
  mailingAddressGeomarket          String? @map("Mailing_Address_Geomarket") @db.VarChar(255)
  mailingAddressPostalCode         String? @map("Mailing_Address_Postal_Code") @db.VarChar(255)
  mailingAddressRegion             String? @map("Mailing_Address_Region") @db.VarChar(255)
  mailingAddressStreet1            String? @map("Mailing_Address_Street_1") @db.VarChar(255)
  mailingAddressStreet2            String? @map("Mailing_Address_Street_2") @db.VarChar(255)
  mailingAddressStreet3            String? @map("Mailing_Address_Street_3") @db.VarChar(255)
  mailingAddressValidFromDate      String? @map("Mailing_Address_Valid_From_Date") @db.VarChar(255)
  mailingAddressValidToDate        String? @map("Mailing_Address_Valid_To_Date") @db.VarChar(255)
  middle                           String? @map("Middle") @db.VarChar(255)
  mobilePhoneNumber                String? @map("Mobile_Phone_Number") @db.VarChar(255)
  permanentAddressCity             String? @map("Permanent_Address_City") @db.VarChar(255)
  permanentAddressCountry          String? @map("Permanent_Address_Country") @db.VarChar(255)
  permanentAddressCountryFipsCode  String? @map("Permanent_Address_Country_FIPS_Code") @db.VarChar(255)
  permanentAddressCountryIso2Code  String? @map("Permanent_Address_Country_ISO_2_Code") @db.VarChar(255)
  permanentAddressCountryIso3Code  String? @map("Permanent_Address_Country_ISO_3_Code") @db.VarChar(255)
  permanentAddressCountrySisExport String? @map("Permanent_Address_Country_SIS_Export") @db.VarChar(255)
  permanentAddressGeomarket        String? @map("Permanent_Address_Geomarket") @db.VarChar(255)
  permanentAddressPostalCode       String? @map("Permanent_Address_Postal_Code") @db.VarChar(255)
  permanentAddressRegion           String? @map("Permanent_Address_Region") @db.VarChar(255)
  permanentAddressStreet1          String? @map("Permanent_Address_Street_1") @db.VarChar(255)
  permanentAddressStreet2          String? @map("Permanent_Address_Street_2") @db.VarChar(255)
  permanentAddressStreet3          String? @map("Permanent_Address_Street_3") @db.VarChar(255)
  personalWebSite                  String? @map("Personal_Web_Site") @db.VarChar(255)
  phoneNumber                      String? @map("Phone_Number") @db.VarChar(255)
  prefix                           String? @map("Prefix") @db.VarChar(255)
  primaryCitizenship               String? @map("Primary_Citizenship") @db.VarChar(255)
  race                             String? @map("Race") @db.VarChar(255)
  reference1Waiver                 String? @map("Reference_1_Waiver") @db.VarChar(255)
  reference2Waiver                 String? @map("Reference_2_Waiver") @db.VarChar(255)
  reference3Waiver                 String? @map("Reference_3_Waiver") @db.VarChar(255)
  roundExportCode                  String? @map("Round_Export_Code") @db.VarChar(255)
  secondaryCitizenship             String? @map("Secondary_Citizenship") @db.VarChar(255)
  sex                              String? @map("Sex") @db.VarChar(255)
  suffix                           String? @map("Suffix") @db.VarChar(255)

  @@map("mhci_slate_apps")
}

model MhciSlateGre {
  first                   String? @map("First") @db.VarChar(255)
  greAnalyticalWriting    String? @map("GRE_Analytical_Writing") @db.VarChar(255)
  greAnalyticalWritingPct String? @map("GRE_Analytical_Writing_pct") @db.VarChar(255)
  greQuantitative         String? @map("GRE_Quantitative") @db.VarChar(255)
  greQuantitativePct      String? @map("GRE_Quantitative_pct") @db.VarChar(255)
  greVerbal               String? @map("GRE_Verbal") @db.VarChar(255)
  greVerbalPct            String? @map("GRE_Verbal_pct") @db.VarChar(255)
  id                      String  @id @default(cuid()) @map("Application_Slate_GUID") @db.VarChar(255)
  last                    String? @map("Last") @db.VarChar(255)
  middle                  String? @map("Middle") @db.VarChar(255)
  prefix                  String? @map("Prefix") @db.VarChar(255)

  @@map("mhci_slate_gre")
}

model MhciSlateIelt {
  first                 String? @map("First") @db.VarChar(255)
  id                    String  @id @default(cuid()) @map("Application_Slate_GUID") @db.VarChar(255)
  ieltsListening        String? @map("IELTS_Listening") @db.VarChar(255)
  ieltsOverallBandScore String? @map("IELTS_Overall_Band_Score") @db.VarChar(255)
  ieltsReading          String? @map("IELTS_Reading") @db.VarChar(255)
  ieltsSpeaking         String? @map("IELTS_Speaking") @db.VarChar(255)
  ieltsWriting          String? @map("IELTS_Writing") @db.VarChar(255)
  last                  String? @map("Last") @db.VarChar(255)
  middle                String? @map("Middle") @db.VarChar(255)
  prefix                String? @map("Prefix") @db.VarChar(255)

  @@map("mhci_slate_ielts")
}

model MhciSlatePub {
  authorsPub1             String? @map("Authors_Pub_1") @db.VarChar(255)
  authorsPub2             String? @map("Authors_Pub_2") @db.VarChar(255)
  authorsPub3             String? @map("Authors_Pub_3") @db.VarChar(255)
  authorsPub4             String? @map("Authors_Pub_4") @db.VarChar(255)
  authorsPub5             String? @map("Authors_Pub_5") @db.VarChar(255)
  authorsPub6             String? @map("Authors_Pub_6") @db.VarChar(255)
  citationPub1            String? @map("Citation_Pub_1") @db.VarChar(255)
  citationPub2            String? @map("Citation_Pub_2") @db.VarChar(255)
  citationPub3            String? @map("Citation_Pub_3") @db.VarChar(255)
  citationPub4            String? @map("Citation_Pub_4") @db.VarChar(255)
  citationPub5            String? @map("Citation_Pub_5") @db.VarChar(255)
  citationPub6            String? @map("Citation_Pub_6") @db.VarChar(255)
  destinationPub1         String? @map("Destination_Pub_1") @db.VarChar(255)
  destinationPub2         String? @map("Destination_Pub_2") @db.VarChar(255)
  destinationPub3         String? @map("Destination_Pub_3") @db.VarChar(255)
  destinationPub4         String? @map("Destination_Pub_4") @db.VarChar(255)
  destinationPub5         String? @map("Destination_Pub_5") @db.VarChar(255)
  destinationPub6         String? @map("Destination_Pub_6") @db.VarChar(255)
  first                   String? @map("First") @db.VarChar(255)
  hasPublications         String? @map("Has_Publications") @db.VarChar(255)
  id                      String  @id @default(cuid()) @map("Application_Slate_GUID") @db.VarChar(255)
  last                    String? @map("Last") @db.VarChar(255)
  middle                  String? @map("Middle") @db.VarChar(255)
  otherTypeOfPublication1 String? @map("Other_Type_of_publication_1") @db.VarChar(255)
  otherTypeOfPublication2 String? @map("Other_Type_of_publication_2") @db.VarChar(255)
  otherTypeOfPublication3 String? @map("Other_Type_of_publication_3") @db.VarChar(255)
  otherTypeOfPublication4 String? @map("Other_Type_of_publication_4") @db.VarChar(255)
  otherTypeOfPublication5 String? @map("Other_Type_of_publication_5") @db.VarChar(255)
  otherTypeOfPublication6 String? @map("Other_Type_of_publication_6") @db.VarChar(255)
  prefix                  String? @map("Prefix") @db.VarChar(255)
  statusOfPublication1    String? @map("Status_of_publication_1") @db.VarChar(255)
  statusOfPublication2    String? @map("Status_of_publication_2") @db.VarChar(255)
  statusOfPublication3    String? @map("Status_of_publication_3") @db.VarChar(255)
  statusOfPublication4    String? @map("Status_of_publication_4") @db.VarChar(255)
  statusOfPublication5    String? @map("Status_of_publication_5") @db.VarChar(255)
  statusOfPublication6    String? @map("Status_of_publication_6") @db.VarChar(255)
  titlePub1               String? @map("Title_Pub_1") @db.VarChar(255)
  titlePub2               String? @map("Title_Pub_2") @db.VarChar(255)
  titlePub3               String? @map("Title_Pub_3") @db.VarChar(255)
  titlePub4               String? @map("Title_Pub_4") @db.VarChar(255)
  titlePub5               String? @map("Title_Pub_5") @db.VarChar(255)
  titlePub6               String? @map("Title_Pub_6") @db.VarChar(255)
  typeOfPublication1      String? @map("Type_of_publication_1") @db.VarChar(255)
  typeOfPublication2      String? @map("Type_of_publication_2") @db.VarChar(255)
  typeOfPublication3      String? @map("Type_of_publication_3") @db.VarChar(255)
  typeOfPublication4      String? @map("Type_of_publication_4") @db.VarChar(255)
  typeOfPublication5      String? @map("Type_of_publication_5") @db.VarChar(255)
  typeOfPublication6      String? @map("Type_of_publication_6") @db.VarChar(255)
  urlPub1                 String? @map("URL_Pub_1") @db.VarChar(255)
  urlPub2                 String? @map("URL_Pub_2") @db.VarChar(255)
  urlPub3                 String? @map("URL_Pub_3") @db.VarChar(255)
  urlPub4                 String? @map("URL_Pub_4") @db.VarChar(255)
  urlPub5                 String? @map("URL_Pub_5") @db.VarChar(255)
  urlPub6                 String? @map("URL_Pub_6") @db.VarChar(255)

  @@map("mhci_slate_pubs")
}

model MhciSlateToefl {
  first                           String? @map("First") @db.VarChar(255)
  id                              String  @id @default(cuid()) @map("Application_Slate_GUID") @db.VarChar(255)
  last                            String? @map("Last") @db.VarChar(255)
  middle                          String? @map("Middle") @db.VarChar(255)
  prefix                          String? @map("Prefix") @db.VarChar(255)
  toeflListening                  String? @map("TOEFL_Listening") @db.VarChar(255)
  toeflReading                    String? @map("TOEFL_Reading") @db.VarChar(255)
  toeflSpeaking                   String? @map("TOEFL_Speaking") @db.VarChar(255)
  toeflStructureWrittenExpression String? @map("TOEFL_Structure_Written_Expression") @db.VarChar(255)
  toeflTotal                      String? @map("TOEFL_Total") @db.VarChar(255)

  @@map("mhci_slate_toefl")
}

model MitsSlateAppSchool {
  first                                String? @map("First") @db.VarChar(100)
  id                                   String  @id @default(cuid()) @map("Application_Slate_GUID") @db.VarChar(100)
  last                                 String? @map("Last") @db.VarChar(100)
  middle                               String? @map("Middle") @db.VarChar(100)
  prefix                               String? @map("Prefix") @db.VarChar(100)
  school1Awards                        String? @map("School_1_Awards") @db.VarChar(100)
  school1City                          String? @map("School_1_City") @db.VarChar(100)
  school1ClassRankNumeric              String? @map("School_1_Class_Rank_Numeric") @db.VarChar(100)
  school1ClassRankXOutOfY              String? @map("School_1_Class_Rank_X_out_of_Y") @db.VarChar(100)
  school1ClassSizeNumeric              String? @map("School_1_Class_Size_Numeric") @db.VarChar(100)
  school1Code                          String? @map("School_1_Code") @db.VarChar(100)
  school1Confirmed                     String? @map("School_1_Confirmed") @db.VarChar(100)
  school1Country                       String? @map("School_1_Country") @db.VarChar(100)
  school1Created                       String? @map("School_1_Created") @db.VarChar(100)
  school1Degree                        String? @map("School_1_Degree") @db.VarChar(100)
  school1DegreeConferred               String? @map("School_1_Degree_Conferred") @db.VarChar(100)
  school1Field                         String? @map("School_1_Field") @db.VarChar(100)
  school1From                          String? @map("School_1_From") @db.VarChar(100)
  school1Gpa                           String? @map("School_1_GPA") @db.VarChar(100)
  school1GpaConverted                  String? @map("School_1_GPA_Converted") @db.VarChar(100)
  school1GpaRecalculated               String? @map("School_1_GPA_Recalculated") @db.VarChar(100)
  school1GpaScale                      String? @map("School_1_GPA_Scale") @db.VarChar(100)
  school1Honors                        String? @map("School_1_Honors") @db.VarChar(100)
  school1Hours                         String? @map("School_1_Hours") @db.VarChar(100)
  school1Institution                   String? @map("School_1_Institution") @db.VarChar(100)
  school1Language                      String? @map("School_1_Language") @db.VarChar(100)
  school1Major                         String? @map("School_1_Major") @db.VarChar(100)
  school1Major1                        String? @map("School_1_Major_1") @db.VarChar(100)
  school1Major2                        String? @map("School_1_Major_2") @db.VarChar(100)
  school1Minor                         String? @map("School_1_Minor") @db.VarChar(100)
  school1Region                        String? @map("School_1_Region") @db.VarChar(100)
  school1To                            String? @map("School_1_To") @db.VarChar(100)
  school1Type                          String? @map("School_1_Type") @db.VarChar(100)
  school1Updated                       String? @map("School_1_Updated") @db.VarChar(100)
  school1Website                       String? @map("School_1_Website") @db.VarChar(100)
  school2Awards                        String? @map("School_2_Awards") @db.VarChar(100)
  school2City                          String? @map("School_2_City") @db.VarChar(100)
  school2ClassRankNumeric              String? @map("School_2_Class_Rank_Numeric") @db.VarChar(100)
  school2ClassRankXOutOfY              String? @map("School_2_Class_Rank_X_out_of_Y") @db.VarChar(100)
  school2ClassSizeNumeric              String? @map("School_2_Class_Size_Numeric") @db.VarChar(100)
  school2Code                          String? @map("School_2_Code") @db.VarChar(100)
  school2Confirmed                     String? @map("School_2_Confirmed") @db.VarChar(100)
  school2Country                       String? @map("School_2_Country") @db.VarChar(100)
  school2Created                       String? @map("School_2_Created") @db.VarChar(100)
  school2Degree                        String? @map("School_2_Degree") @db.VarChar(100)
  school2DegreeConferred               String? @map("School_2_Degree_Conferred") @db.VarChar(100)
  school2Field                         String? @map("School_2_Field") @db.VarChar(100)
  school2From                          String? @map("School_2_From") @db.VarChar(100)
  school2Gpa                           String? @map("School_2_GPA") @db.VarChar(100)
  school2GpaConverted                  String? @map("School_2_GPA_Converted") @db.VarChar(100)
  school2GpaRecalculated               String? @map("School_2_GPA_Recalculated") @db.VarChar(100)
  school2GpaScale                      String? @map("School_2_GPA_Scale") @db.VarChar(100)
  school2Honors                        String? @map("School_2_Honors") @db.VarChar(100)
  school2Hours                         String? @map("School_2_Hours") @db.VarChar(100)
  school2Institution                   String? @map("School_2_Institution") @db.VarChar(100)
  school2Language                      String? @map("School_2_Language") @db.VarChar(100)
  school2Major                         String? @map("School_2_Major") @db.VarChar(100)
  school2Major1                        String? @map("School_2_Major_1") @db.VarChar(100)
  school2Major2                        String? @map("School_2_Major_2") @db.VarChar(100)
  school2Minor                         String? @map("School_2_Minor") @db.VarChar(100)
  school2Region                        String? @map("School_2_Region") @db.VarChar(100)
  school2To                            String? @map("School_2_To") @db.VarChar(100)
  school2Type                          String? @map("School_2_Type") @db.VarChar(100)
  school2Updated                       String? @map("School_2_Updated") @db.VarChar(100)
  school2Website                       String? @map("School_2_Website") @db.VarChar(100)
  school3Awards                        String? @map("School_3_Awards") @db.VarChar(100)
  school3City                          String? @map("School_3_City") @db.VarChar(100)
  school3ClassRankNumeric              String? @map("School_3_Class_Rank_Numeric") @db.VarChar(100)
  school3ClassRankXOutOfY              String? @map("School_3_Class_Rank_X_out_of_Y") @db.VarChar(100)
  school3ClassSizeNumeric              String? @map("School_3_Class_Size_Numeric") @db.VarChar(100)
  school3Code                          String? @map("School_3_Code") @db.VarChar(100)
  school3Confirmed                     String? @map("School_3_Confirmed") @db.VarChar(100)
  school3Country                       String? @map("School_3_Country") @db.VarChar(100)
  school3Created                       String? @map("School_3_Created") @db.VarChar(100)
  school3Degree                        String? @map("School_3_Degree") @db.VarChar(100)
  school3DegreeConferred               String? @map("School_3_Degree_Conferred") @db.VarChar(100)
  school3Field                         String? @map("School_3_Field") @db.VarChar(100)
  school3From                          String? @map("School_3_From") @db.VarChar(100)
  school3Gpa                           String? @map("School_3_GPA") @db.VarChar(100)
  school3GpaConverted                  String? @map("School_3_GPA_Converted") @db.VarChar(100)
  school3GpaRecalculated               String? @map("School_3_GPA_Recalculated") @db.VarChar(100)
  school3GpaScale                      String? @map("School_3_GPA_Scale") @db.VarChar(100)
  school3Honors                        String? @map("School_3_Honors") @db.VarChar(100)
  school3Hours                         String? @map("School_3_Hours") @db.VarChar(100)
  school3Institution                   String? @map("School_3_Institution") @db.VarChar(100)
  school3Language                      String? @map("School_3_Language") @db.VarChar(100)
  school3Major                         String? @map("School_3_Major") @db.VarChar(100)
  school3Major1                        String? @map("School_3_Major_1") @db.VarChar(100)
  school3Major2                        String? @map("School_3_Major_2") @db.VarChar(100)
  school3Minor                         String? @map("School_3_Minor") @db.VarChar(100)
  school3Region                        String? @map("School_3_Region") @db.VarChar(100)
  school3To                            String? @map("School_3_To") @db.VarChar(100)
  school3Type                          String? @map("School_3_Type") @db.VarChar(100)
  school3Updated                       String? @map("School_3_Updated") @db.VarChar(100)
  school3Website                       String? @map("School_3_Website") @db.VarChar(100)
  school4Awards                        String? @map("School_4_Awards") @db.VarChar(100)
  school4City                          String? @map("School_4_City") @db.VarChar(100)
  school4ClassRankNumeric              String? @map("School_4_Class_Rank_Numeric") @db.VarChar(100)
  school4ClassRankXOutOfY              String? @map("School_4_Class_Rank_X_out_of_Y") @db.VarChar(100)
  school4ClassSizeNumeric              String? @map("School_4_Class_Size_Numeric") @db.VarChar(100)
  school4Code                          String? @map("School_4_Code") @db.VarChar(100)
  school4Confirmed                     String? @map("School_4_Confirmed") @db.VarChar(100)
  school4Country                       String? @map("School_4_Country") @db.VarChar(100)
  school4Created                       String? @map("School_4_Created") @db.VarChar(100)
  school4Degree                        String? @map("School_4_Degree") @db.VarChar(100)
  school4DegreeConferred               String? @map("School_4_Degree_Conferred") @db.VarChar(100)
  school4Field                         String? @map("School_4_Field") @db.VarChar(100)
  school4From                          String? @map("School_4_From") @db.VarChar(100)
  school4Gpa                           String? @map("School_4_GPA") @db.VarChar(100)
  school4GpaConverted                  String? @map("School_4_GPA_Converted") @db.VarChar(100)
  school4GpaRecalculated               String? @map("School_4_GPA_Recalculated") @db.VarChar(100)
  school4GpaScale                      String? @map("School_4_GPA_Scale") @db.VarChar(100)
  school4Honors                        String? @map("School_4_Honors") @db.VarChar(100)
  school4Hours                         String? @map("School_4_Hours") @db.VarChar(100)
  school4Institution                   String? @map("School_4_Institution") @db.VarChar(100)
  school4Language                      String? @map("School_4_Language") @db.VarChar(100)
  school4Major                         String? @map("School_4_Major") @db.VarChar(100)
  school4Major1                        String? @map("School_4_Major_1") @db.VarChar(100)
  school4Major2                        String? @map("School_4_Major_2") @db.VarChar(100)
  school4Minor                         String? @map("School_4_Minor") @db.VarChar(100)
  school4Region                        String? @map("School_4_Region") @db.VarChar(100)
  school4To                            String? @map("School_4_To") @db.VarChar(100)
  school4Type                          String? @map("School_4_Type") @db.VarChar(100)
  school4Updated                       String? @map("School_4_Updated") @db.VarChar(100)
  school4Website                       String? @map("School_4_Website") @db.VarChar(100)
  school5Awards                        String? @map("School_5_Awards") @db.VarChar(100)
  school5City                          String? @map("School_5_City") @db.VarChar(100)
  school5ClassRankNumeric              String? @map("School_5_Class_Rank_Numeric") @db.VarChar(100)
  school5ClassRankXOutOfY              String? @map("School_5_Class_Rank_X_out_of_Y") @db.VarChar(100)
  school5ClassSizeNumeric              String? @map("School_5_Class_Size_Numeric") @db.VarChar(100)
  school5Code                          String? @map("School_5_Code") @db.VarChar(100)
  school5Confirmed                     String? @map("School_5_Confirmed") @db.VarChar(100)
  school5Country                       String? @map("School_5_Country") @db.VarChar(100)
  school5Created                       String? @map("School_5_Created") @db.VarChar(100)
  school5Degree                        String? @map("School_5_Degree") @db.VarChar(100)
  school5DegreeConferred               String? @map("School_5_Degree_Conferred") @db.VarChar(100)
  school5Field                         String? @map("School_5_Field") @db.VarChar(100)
  school5From                          String? @map("School_5_From") @db.VarChar(100)
  school5Gpa                           String? @map("School_5_GPA") @db.VarChar(100)
  school5GpaConverted                  String? @map("School_5_GPA_Converted") @db.VarChar(100)
  school5GpaRecalculated               String? @map("School_5_GPA_Recalculated") @db.VarChar(100)
  school5GpaScale                      String? @map("School_5_GPA_Scale") @db.VarChar(100)
  school5Honors                        String? @map("School_5_Honors") @db.VarChar(100)
  school5Hours                         String? @map("School_5_Hours") @db.VarChar(100)
  school5Institution                   String? @map("School_5_Institution") @db.VarChar(100)
  school5Language                      String? @map("School_5_Language") @db.VarChar(100)
  school5Major                         String? @map("School_5_Major") @db.VarChar(100)
  school5Major1                        String? @map("School_5_Major_1") @db.VarChar(100)
  school5Major2                        String? @map("School_5_Major_2") @db.VarChar(100)
  school5Minor                         String? @map("School_5_Minor") @db.VarChar(100)
  school5Region                        String? @map("School_5_Region") @db.VarChar(100)
  school5To                            String? @map("School_5_To") @db.VarChar(100)
  school5Type                          String? @map("School_5_Type") @db.VarChar(100)
  school5Updated                       String? @map("School_5_Updated") @db.VarChar(100)
  school5Website                       String? @map("School_5_Website") @db.VarChar(100)
  schoolNum1NumberOfActiveApplications String? @map("School_num1_Number_of_Active_Applications") @db.VarChar(100)
  schoolNum1Priority                   String? @map("School_num1_Priority") @db.VarChar(100)
  schoolNum2Priority                   String? @map("School_num2_Priority") @db.VarChar(100)
  schoolNum3Priority                   String? @map("School_num3_Priority") @db.VarChar(100)
  schoolNum4Priority                   String? @map("School_num4_Priority") @db.VarChar(100)
  schoolNum5Priority                   String? @map("School_num5_Priority") @db.VarChar(100)

  @@map("mits_slate_app_schools")
}

model MitsSlateApp {
  applicationStatus                String? @map("Application_Status") @db.VarChar(255)
  appSubmittedDate                 String? @map("App_Submitted_Date") @db.VarChar(255)
  birthdate                        String? @map("Birthdate") @db.VarChar(255)
  citizenshipStatus                String? @map("Citizenship_Status") @db.VarChar(255)
  decisionConfirmedExportCode      String? @map("Decision_Confirmed_Export_Code") @db.VarChar(255)
  email                            String? @map("Email") @db.VarChar(255)
  emailAddress                     String? @map("Email_Address") @db.VarChar(255)
  first                            String? @map("First") @db.VarChar(255)
  hispanic                         String? @map("Hispanic") @db.VarChar(255)
  id                               String  @id @default(cuid()) @map("Application_Slate_GUID") @db.VarChar(255)
  ipedsClassification              String? @map("IPEDS_Classification") @db.VarChar(255)
  language                         String? @map("Language") @db.VarChar(255)
  last                             String? @map("Last") @db.VarChar(255)
  mailingAddressCity               String? @map("Mailing_Address_City") @db.VarChar(255)
  mailingAddressCountryFipsCode    String? @map("Mailing_Address_Country_FIPS_Code") @db.VarChar(255)
  mailingAddressCountryIso2Code    String? @map("Mailing_Address_Country_ISO_2_Code") @db.VarChar(255)
  mailingAddressCountryIso3Code    String? @map("Mailing_Address_Country_ISO_3_Code") @db.VarChar(255)
  mailingAddressCountryName        String? @map("Mailing_Address_Country_Name") @db.VarChar(255)
  mailingAddressCountrySisExport   String? @map("Mailing_Address_Country_SIS_Export") @db.VarChar(255)
  mailingAddressGeomarket          String? @map("Mailing_Address_Geomarket") @db.VarChar(255)
  mailingAddressPostalCode         String? @map("Mailing_Address_Postal_Code") @db.VarChar(255)
  mailingAddressRegion             String? @map("Mailing_Address_Region") @db.VarChar(255)
  mailingAddressStreet1            String? @map("Mailing_Address_Street_1") @db.VarChar(255)
  mailingAddressStreet2            String? @map("Mailing_Address_Street_2") @db.VarChar(255)
  mailingAddressStreet3            String? @map("Mailing_Address_Street_3") @db.VarChar(255)
  mailingAddressValidFromDate      String? @map("Mailing_Address_Valid_From_Date") @db.VarChar(255)
  mailingAddressValidToDate        String? @map("Mailing_Address_Valid_To_Date") @db.VarChar(255)
  middle                           String? @map("Middle") @db.VarChar(255)
  mobilePhoneNumber                String? @map("Mobile_Phone_Number") @db.VarChar(255)
  permanentAddressCity             String? @map("Permanent_Address_City") @db.VarChar(255)
  permanentAddressCountry          String? @map("Permanent_Address_Country") @db.VarChar(255)
  permanentAddressCountryFipsCode  String? @map("Permanent_Address_Country_FIPS_Code") @db.VarChar(255)
  permanentAddressCountryIso2Code  String? @map("Permanent_Address_Country_ISO_2_Code") @db.VarChar(255)
  permanentAddressCountryIso3Code  String? @map("Permanent_Address_Country_ISO_3_Code") @db.VarChar(255)
  permanentAddressCountrySisExport String? @map("Permanent_Address_Country_SIS_Export") @db.VarChar(255)
  permanentAddressGeomarket        String? @map("Permanent_Address_Geomarket") @db.VarChar(255)
  permanentAddressPostalCode       String? @map("Permanent_Address_Postal_Code") @db.VarChar(255)
  permanentAddressRegion           String? @map("Permanent_Address_Region") @db.VarChar(255)
  permanentAddressStreet1          String? @map("Permanent_Address_Street_1") @db.VarChar(255)
  permanentAddressStreet2          String? @map("Permanent_Address_Street_2") @db.VarChar(255)
  permanentAddressStreet3          String? @map("Permanent_Address_Street_3") @db.VarChar(255)
  personalWebSite                  String? @map("Personal_Web_Site") @db.VarChar(255)
  phoneNumber                      String? @map("Phone_Number") @db.VarChar(255)
  prefix                           String? @map("Prefix") @db.VarChar(255)
  primaryCitizenship               String? @map("Primary_Citizenship") @db.VarChar(255)
  race                             String? @map("Race") @db.VarChar(255)
  reference1Waiver                 String? @map("Reference_1_Waiver") @db.VarChar(255)
  reference2Waiver                 String? @map("Reference_2_Waiver") @db.VarChar(255)
  reference3Waiver                 String? @map("Reference_3_Waiver") @db.VarChar(255)
  roundExportCode                  String? @map("Round_Export_Code") @db.VarChar(255)
  secondaryCitizenship             String? @map("Secondary_Citizenship") @db.VarChar(255)
  sex                              String? @map("Sex") @db.VarChar(255)
  suffix                           String? @map("Suffix") @db.VarChar(255)

  @@map("mits_slate_apps")
}

model MitsSlateAppsMseReviewed {
  applicationStatus                String? @map("Application_Status") @db.VarChar(255)
  appSubmittedDate                 String? @map("App_Submitted_Date") @db.VarChar(255)
  birthdate                        String? @map("Birthdate") @db.VarChar(255)
  citizenshipStatus                String? @map("Citizenship_Status") @db.VarChar(255)
  decisionConfirmedExportCode      String? @map("Decision_Confirmed_Export_Code") @db.VarChar(255)
  email                            String? @map("Email") @db.VarChar(255)
  emailAddress                     String? @map("Email_Address") @db.VarChar(255)
  first                            String? @map("First") @db.VarChar(255)
  hispanic                         String? @map("Hispanic") @db.VarChar(255)
  id                               String  @id @default(cuid()) @map("Application_Slate_GUID") @db.VarChar(255)
  ipedsClassification              String? @map("IPEDS_Classification") @db.VarChar(255)
  language                         String? @map("Language") @db.VarChar(255)
  last                             String? @map("Last") @db.VarChar(255)
  mailingAddressCity               String? @map("Mailing_Address_City") @db.VarChar(255)
  mailingAddressCountryFipsCode    String? @map("Mailing_Address_Country_FIPS_Code") @db.VarChar(255)
  mailingAddressCountryIso2Code    String? @map("Mailing_Address_Country_ISO_2_Code") @db.VarChar(255)
  mailingAddressCountryIso3Code    String? @map("Mailing_Address_Country_ISO_3_Code") @db.VarChar(255)
  mailingAddressCountryName        String? @map("Mailing_Address_Country_Name") @db.VarChar(255)
  mailingAddressCountrySisExport   String? @map("Mailing_Address_Country_SIS_Export") @db.VarChar(255)
  mailingAddressGeomarket          String? @map("Mailing_Address_Geomarket") @db.VarChar(255)
  mailingAddressPostalCode         String? @map("Mailing_Address_Postal_Code") @db.VarChar(255)
  mailingAddressRegion             String? @map("Mailing_Address_Region") @db.VarChar(255)
  mailingAddressStreet1            String? @map("Mailing_Address_Street_1") @db.VarChar(255)
  mailingAddressStreet2            String? @map("Mailing_Address_Street_2") @db.VarChar(255)
  mailingAddressStreet3            String? @map("Mailing_Address_Street_3") @db.VarChar(255)
  mailingAddressValidFromDate      String? @map("Mailing_Address_Valid_From_Date") @db.VarChar(255)
  mailingAddressValidToDate        String? @map("Mailing_Address_Valid_To_Date") @db.VarChar(255)
  middle                           String? @map("Middle") @db.VarChar(255)
  mobilePhoneNumber                String? @map("Mobile_Phone_Number") @db.VarChar(255)
  permanentAddressCity             String? @map("Permanent_Address_City") @db.VarChar(255)
  permanentAddressCountry          String? @map("Permanent_Address_Country") @db.VarChar(255)
  permanentAddressCountryFipsCode  String? @map("Permanent_Address_Country_FIPS_Code") @db.VarChar(255)
  permanentAddressCountryIso2Code  String? @map("Permanent_Address_Country_ISO_2_Code") @db.VarChar(255)
  permanentAddressCountryIso3Code  String? @map("Permanent_Address_Country_ISO_3_Code") @db.VarChar(255)
  permanentAddressCountrySisExport String? @map("Permanent_Address_Country_SIS_Export") @db.VarChar(255)
  permanentAddressGeomarket        String? @map("Permanent_Address_Geomarket") @db.VarChar(255)
  permanentAddressPostalCode       String? @map("Permanent_Address_Postal_Code") @db.VarChar(255)
  permanentAddressRegion           String? @map("Permanent_Address_Region") @db.VarChar(255)
  permanentAddressStreet1          String? @map("Permanent_Address_Street_1") @db.VarChar(255)
  permanentAddressStreet2          String? @map("Permanent_Address_Street_2") @db.VarChar(255)
  permanentAddressStreet3          String? @map("Permanent_Address_Street_3") @db.VarChar(255)
  personalWebSite                  String? @map("Personal_Web_Site") @db.VarChar(255)
  phoneNumber                      String? @map("Phone_Number") @db.VarChar(255)
  prefix                           String? @map("Prefix") @db.VarChar(255)
  primaryCitizenship               String? @map("Primary_Citizenship") @db.VarChar(255)
  race                             String? @map("Race") @db.VarChar(255)
  reference1Waiver                 String? @map("Reference_1_Waiver") @db.VarChar(255)
  reference2Waiver                 String? @map("Reference_2_Waiver") @db.VarChar(255)
  reference3Waiver                 String? @map("Reference_3_Waiver") @db.VarChar(255)
  roundExportCode                  String? @map("Round_Export_Code") @db.VarChar(255)
  secondaryCitizenship             String? @map("Secondary_Citizenship") @db.VarChar(255)
  sex                              String? @map("Sex") @db.VarChar(255)
  suffix                           String? @map("Suffix") @db.VarChar(255)

  @@map("mits_slate_apps_mse_reviewed")
}

model MitsSlateCodility {
  codilityCloseDate          String? @map("Codility_Close_Date") @db.VarChar(255)
  codilityCreateDate         String? @map("Codility_Create_Date") @db.VarChar(255)
  codilityIpAddresses        String? @map("Codility_IP_Addresses") @db.VarChar(255)
  codilityMaxScore           String? @map("Codility_Max_Score") @db.VarChar(255)
  codilityPercentCorrectness String? @map("Codility_Percent_Correctness") @db.VarChar(255)
  codilityPercentPerformance String? @map("Codility_Percent_Performance") @db.VarChar(255)
  codilityPercentTotalScore  String? @map("Codility_Percent_Total_Score") @db.VarChar(255)
  codilityScore              String? @map("Codility_Score") @db.VarChar(255)
  codilitySimilarity         String? @map("Codility_Similarity") @db.VarChar(255)
  codilityStartDate          String? @map("Codility_Start_Date") @db.VarChar(255)
  codilityTask1Correctness   String? @map("Codility_Task_1_Correctness") @db.VarChar(255)
  codilityTask1Difficulty    String? @map("Codility_Task_1_Difficulty") @db.VarChar(255)
  codilityTask1Language      String? @map("Codility_Task_1_language") @db.VarChar(255)
  codilityTask1Name          String? @map("Codility_Task_1_Name") @db.VarChar(255)
  codilityTask1Performance   String? @map("Codility_Task_1_Performance") @db.VarChar(255)
  codilityTask1Score         String? @map("Codility_Task_1_Score") @db.VarChar(255)
  codilityTask2Correctness   String? @map("Codility_Task_2_Correctness") @db.VarChar(255)
  codilityTask2Difficulty    String? @map("Codility_Task_2_Difficulty") @db.VarChar(255)
  codilityTask2Language      String? @map("Codility_Task_2_language") @db.VarChar(255)
  codilityTask2Name          String? @map("Codility_Task_2_Name") @db.VarChar(255)
  codilityTask2Performance   String? @map("Codility_Task_2_Performance") @db.VarChar(255)
  codilityTask2Score         String? @map("Codility_Task_2_Score") @db.VarChar(255)
  codilityTask3Correctness   String? @map("Codility_Task_3_Correctness") @db.VarChar(255)
  codilityTask3Difficulty    String? @map("Codility_Task_3_Difficulty") @db.VarChar(255)
  codilityTask3Language      String? @map("Codility_Task_3_language") @db.VarChar(255)
  codilityTask3Name          String? @map("Codility_Task_3_Name") @db.VarChar(255)
  codilityTask3Performance   String? @map("Codility_Task_3_Performance") @db.VarChar(255)
  codilityTask3Score         String? @map("Codility_Task_3_Score") @db.VarChar(255)
  codilityTask4Correctness   String? @map("Codility_Task_4_Correctness") @db.VarChar(255)
  codilityTask4Difficulty    String? @map("Codility_Task_4_Difficulty") @db.VarChar(255)
  codilityTask4Language      String? @map("Codility_Task_4_language") @db.VarChar(255)
  codilityTask4Name          String? @map("Codility_Task_4_Name") @db.VarChar(255)
  codilityTask4Performance   String? @map("Codility_Task_4_Performance") @db.VarChar(255)
  codilityTask4Score         String? @map("Codility_Task_4_Score") @db.VarChar(255)
  codilityTestName           String? @map("Codility_Test_Name") @db.VarChar(255)
  codilityTestSession        String? @map("Codility_Test_Session") @db.VarChar(255)
  first                      String? @map("First") @db.VarChar(255)
  id                         String  @id @default(cuid()) @map("Application_Slate_GUID") @db.VarChar(255)
  last                       String? @map("Last") @db.VarChar(255)
  middle                     String? @map("Middle") @db.VarChar(255)
  prefix                     String? @map("Prefix") @db.VarChar(255)

  @@map("mits_slate_codility")
}

model MitsSlateEmploy {
  first                    String? @map("First") @db.VarChar(255)
  id                       String  @id @default(cuid()) @map("Application_Slate_GUID") @db.VarChar(255)
  job1From                 String? @map("Job_1_From") @db.VarChar(255)
  job1Organization         String? @map("Job_1_Organization") @db.VarChar(255)
  job1To                   String? @map("Job_1_To") @db.VarChar(255)
  job2From                 String? @map("Job_2_From") @db.VarChar(255)
  job2Organization         String? @map("Job_2_Organization") @db.VarChar(255)
  job2To                   String? @map("Job_2_To") @db.VarChar(255)
  job3From                 String? @map("Job_3_From") @db.VarChar(255)
  job3Organization         String? @map("Job_3_Organization") @db.VarChar(255)
  job3To                   String? @map("Job_3_To") @db.VarChar(255)
  jobNum1YearsOfExperience String? @map("Job_num1_Years_of_Experience") @db.VarChar(255)
  jobNum2YearsOfExperience String? @map("Job_num2_Years_of_Experience") @db.VarChar(255)
  jobNum3YearsOfExperience String? @map("Job_num3_Years_of_Experience") @db.VarChar(255)
  last                     String? @map("Last") @db.VarChar(255)
  middle                   String? @map("Middle") @db.VarChar(255)
  prefix                   String? @map("Prefix") @db.VarChar(255)

  @@map("mits_slate_employ")
}

model MitsSlateGre {
  first                   String? @map("First") @db.VarChar(255)
  greAnalyticalWriting    String? @map("GRE_Analytical_Writing") @db.VarChar(255)
  greAnalyticalWritingPct String? @map("GRE_Analytical_Writing_pct") @db.VarChar(255)
  greQuantitative         String? @map("GRE_Quantitative") @db.VarChar(255)
  greQuantitativePct      String? @map("GRE_Quantitative_pct") @db.VarChar(255)
  greVerbal               String? @map("GRE_Verbal") @db.VarChar(255)
  greVerbalPct            String? @map("GRE_Verbal_pct") @db.VarChar(255)
  id                      String  @id @default(cuid()) @map("Application_Slate_GUID") @db.VarChar(255)
  last                    String? @map("Last") @db.VarChar(255)
  middle                  String? @map("Middle") @db.VarChar(255)
  prefix                  String? @map("Prefix") @db.VarChar(255)

  @@map("mits_slate_gre")
}

model MitsSlateIelt {
  first                 String? @map("First") @db.VarChar(255)
  id                    String  @id @default(cuid()) @map("Application_Slate_GUID") @db.VarChar(255)
  ieltsListening        String? @map("IELTS_Listening") @db.VarChar(255)
  ieltsOverallBandScore String? @map("IELTS_Overall_Band_Score") @db.VarChar(255)
  ieltsReading          String? @map("IELTS_Reading") @db.VarChar(255)
  ieltsSpeaking         String? @map("IELTS_Speaking") @db.VarChar(255)
  ieltsWriting          String? @map("IELTS_Writing") @db.VarChar(255)
  last                  String? @map("Last") @db.VarChar(255)
  middle                String? @map("Middle") @db.VarChar(255)
  prefix                String? @map("Prefix") @db.VarChar(255)

  @@map("mits_slate_ielts")
}

model MitsSlatePub {
  authorsPub1             String? @map("Authors_Pub_1") @db.VarChar(255)
  authorsPub2             String? @map("Authors_Pub_2") @db.VarChar(255)
  authorsPub3             String? @map("Authors_Pub_3") @db.VarChar(255)
  authorsPub4             String? @map("Authors_Pub_4") @db.VarChar(255)
  authorsPub5             String? @map("Authors_Pub_5") @db.VarChar(255)
  authorsPub6             String? @map("Authors_Pub_6") @db.VarChar(255)
  citationPub1            String? @map("Citation_Pub_1") @db.VarChar(255)
  citationPub2            String? @map("Citation_Pub_2") @db.VarChar(255)
  citationPub3            String? @map("Citation_Pub_3") @db.VarChar(255)
  citationPub4            String? @map("Citation_Pub_4") @db.VarChar(255)
  citationPub5            String? @map("Citation_Pub_5") @db.VarChar(255)
  citationPub6            String? @map("Citation_Pub_6") @db.VarChar(255)
  destinationPub1         String? @map("Destination_Pub_1") @db.VarChar(255)
  destinationPub2         String? @map("Destination_Pub_2") @db.VarChar(255)
  destinationPub3         String? @map("Destination_Pub_3") @db.VarChar(255)
  destinationPub4         String? @map("Destination_Pub_4") @db.VarChar(255)
  destinationPub5         String? @map("Destination_Pub_5") @db.VarChar(255)
  destinationPub6         String? @map("Destination_Pub_6") @db.VarChar(255)
  first                   String? @map("First") @db.VarChar(255)
  hasPublications         String? @map("Has_Publications") @db.VarChar(255)
  id                      String  @id @default(cuid()) @map("Application_Slate_GUID") @db.VarChar(255)
  last                    String? @map("Last") @db.VarChar(255)
  middle                  String? @map("Middle") @db.VarChar(255)
  otherTypeOfPublication1 String? @map("Other_Type_of_publication_1") @db.VarChar(255)
  otherTypeOfPublication2 String? @map("Other_Type_of_publication_2") @db.VarChar(255)
  otherTypeOfPublication3 String? @map("Other_Type_of_publication_3") @db.VarChar(255)
  otherTypeOfPublication4 String? @map("Other_Type_of_publication_4") @db.VarChar(255)
  otherTypeOfPublication5 String? @map("Other_Type_of_publication_5") @db.VarChar(255)
  otherTypeOfPublication6 String? @map("Other_Type_of_publication_6") @db.VarChar(255)
  prefix                  String? @map("Prefix") @db.VarChar(255)
  statusOfPublication1    String? @map("Status_of_publication_1") @db.VarChar(255)
  statusOfPublication2    String? @map("Status_of_publication_2") @db.VarChar(255)
  statusOfPublication3    String? @map("Status_of_publication_3") @db.VarChar(255)
  statusOfPublication4    String? @map("Status_of_publication_4") @db.VarChar(255)
  statusOfPublication5    String? @map("Status_of_publication_5") @db.VarChar(255)
  statusOfPublication6    String? @map("Status_of_publication_6") @db.VarChar(255)
  titlePub1               String? @map("Title_Pub_1") @db.VarChar(255)
  titlePub2               String? @map("Title_Pub_2") @db.VarChar(255)
  titlePub3               String? @map("Title_Pub_3") @db.VarChar(255)
  titlePub4               String? @map("Title_Pub_4") @db.VarChar(255)
  titlePub5               String? @map("Title_Pub_5") @db.VarChar(255)
  titlePub6               String? @map("Title_Pub_6") @db.VarChar(255)
  typeOfPublication1      String? @map("Type_of_publication_1") @db.VarChar(255)
  typeOfPublication2      String? @map("Type_of_publication_2") @db.VarChar(255)
  typeOfPublication3      String? @map("Type_of_publication_3") @db.VarChar(255)
  typeOfPublication4      String? @map("Type_of_publication_4") @db.VarChar(255)
  typeOfPublication5      String? @map("Type_of_publication_5") @db.VarChar(255)
  typeOfPublication6      String? @map("Type_of_publication_6") @db.VarChar(255)
  urlPub1                 String? @map("URL_Pub_1") @db.VarChar(255)
  urlPub2                 String? @map("URL_Pub_2") @db.VarChar(255)
  urlPub3                 String? @map("URL_Pub_3") @db.VarChar(255)
  urlPub4                 String? @map("URL_Pub_4") @db.VarChar(255)
  urlPub5                 String? @map("URL_Pub_5") @db.VarChar(255)
  urlPub6                 String? @map("URL_Pub_6") @db.VarChar(255)

  @@map("mits_slate_pubs")
}

model MitsSlateRecommend {
  applicationSlateGuid                             String  @map("Application_Slate_GUID") @db.VarChar(255)
  first                                            String? @map("First") @db.VarChar(255)
  id                                               Int     @id @default(autoincrement()) @map("Id")
  last                                             String? @map("Last") @db.VarChar(255)
  middle                                           String? @map("Middle") @db.VarChar(255)
  prefix                                           String? @map("Prefix") @db.VarChar(255)
  reference1Email                                  String? @map("Reference_1_Email") @db.VarChar(255)
  reference1First                                  String? @map("Reference_1_First") @db.VarChar(255)
  reference1Industry                               String? @map("Reference_1_Industry") @db.VarChar(255)
  reference1Last                                   String? @map("Reference_1_Last") @db.VarChar(255)
  reference1Organization                           String? @map("Reference_1_Organization") @db.VarChar(255)
  reference1Phone                                  String? @map("Reference_1_Phone") @db.VarChar(255)
  reference1Submitted                              String? @map("Reference_1_Submitted") @db.VarChar(255)
  reference1Title                                  String? @map("Reference_1_Title") @db.VarChar(255)
  reference1Type                                   String? @map("Reference_1_Type") @db.VarChar(255)
  referenceNum1IsrmsRecommenderScore1              String? @map("Reference_num1_ISRMS_Recommender_Score_1") @db.VarChar(255)
  referenceNum1IsrmsRecommenderScore10             String? @map("Reference_num1_ISRMS_Recommender_Score_10") @db.VarChar(255)
  referenceNum1IsrmsRecommenderScore11             String? @map("Reference_num1_ISRMS_Recommender_Score_11") @db.VarChar(255)
  referenceNum1IsrmsRecommenderScore12             String? @map("Reference_num1_ISRMS_Recommender_Score_12") @db.VarChar(255)
  referenceNum1IsrmsRecommenderScore13             String? @map("Reference_num1_ISRMS_Recommender_Score_13") @db.VarChar(255)
  referenceNum1IsrmsRecommenderScore14             String? @map("Reference_num1_ISRMS_Recommender_Score_14") @db.VarChar(255)
  referenceNum1IsrmsRecommenderScore15             String? @map("Reference_num1_ISRMS_Recommender_Score_15") @db.VarChar(255)
  referenceNum1IsrmsRecommenderScore2              String? @map("Reference_num1_ISRMS_Recommender_Score_2") @db.VarChar(255)
  referenceNum1IsrmsRecommenderScore3              String? @map("Reference_num1_ISRMS_Recommender_Score_3") @db.VarChar(255)
  referenceNum1IsrmsRecommenderScore4              String? @map("Reference_num1_ISRMS_Recommender_Score_4") @db.VarChar(255)
  referenceNum1IsrmsRecommenderScore5              String? @map("Reference_num1_ISRMS_Recommender_Score_5") @db.VarChar(255)
  referenceNum1IsrmsRecommenderScore6              String? @map("Reference_num1_ISRMS_Recommender_Score_6") @db.VarChar(255)
  referenceNum1IsrmsRecommenderScore7              String? @map("Reference_num1_ISRMS_Recommender_Score_7") @db.VarChar(255)
  referenceNum1IsrmsRecommenderScore8              String? @map("Reference_num1_ISRMS_Recommender_Score_8") @db.VarChar(255)
  referenceNum1IsrmsRecommenderScore9              String? @map("Reference_num1_ISRMS_Recommender_Score_9") @db.VarChar(255)
  referenceNum1MseRecommendationAdditional         String? @map("Reference_num1_MSE_Recommendation_Additional") @db.VarChar(255)
  referenceNum1MseRecommendationComparison         String? @map("Reference_num1_MSE_Recommendation_Comparison") @db.VarChar(255)
  referenceNum1MseRecommendationHowKnown           String? @map("Reference_num1_MSE_Recommendation_How_Known") @db.VarChar(255)
  referenceNum1MseRecommendationProjectPerformance String? @map("Reference_num1_MSE_Recommendation_Project_Performance") @db.VarChar(255)
  referenceNum1MseRecommendationStrengthsWeakness  String? @map("Reference_num1_MSE_Recommendation_Strengths_Weakness") @db.VarChar(255)
  referenceNum1RecommenderScore1                   String? @map("Reference_num1_Recommender_Score_1") @db.VarChar(255)
  referenceNum1RecommenderScore2                   String? @map("Reference_num1_Recommender_Score_2") @db.VarChar(255)
  referenceNum1RecommenderScore3                   String? @map("Reference_num1_Recommender_Score_3") @db.VarChar(255)
  referenceNum1RecommenderScore4                   String? @map("Reference_num1_Recommender_Score_4") @db.VarChar(255)
  referenceNum1RecommenderScore5                   String? @map("Reference_num1_Recommender_Score_5") @db.VarChar(255)
  referenceNum1RecommenderScore6                   String? @map("Reference_num1_Recommender_Score_6") @db.VarChar(255)
  referenceNum1RecommenderScore7                   String? @map("Reference_num1_Recommender_Score_7") @db.VarChar(255)
  referenceNum1RecommenderScore8                   String? @map("Reference_num1_Recommender_Score_8") @db.VarChar(255)

  @@map("mits_slate_recommend")
}

model MitsSlateRecommend1 {
  first                                            String? @map("First") @db.VarChar(255)
  id                                               String  @id @default(cuid()) @map("Application_Slate_GUID") @db.VarChar(255)
  last                                             String? @map("Last") @db.VarChar(255)
  middle                                           String? @map("Middle") @db.VarChar(255)
  prefix                                           String? @map("Prefix") @db.VarChar(255)
  reference1Email                                  String? @map("Reference_1_Email") @db.VarChar(255)
  reference1First                                  String? @map("Reference_1_First") @db.VarChar(255)
  reference1Industry                               String? @map("Reference_1_Industry") @db.VarChar(255)
  reference1Last                                   String? @map("Reference_1_Last") @db.VarChar(255)
  reference1Organization                           String? @map("Reference_1_Organization") @db.VarChar(255)
  reference1Phone                                  String? @map("Reference_1_Phone") @db.VarChar(255)
  reference1Submitted                              String? @map("Reference_1_Submitted") @db.VarChar(255)
  reference1Title                                  String? @map("Reference_1_Title") @db.VarChar(255)
  reference1Type                                   String? @map("Reference_1_Type") @db.VarChar(255)
  referenceNum1IsrmsRecommenderScore1              String? @map("Reference_num1_ISRMS_Recommender_Score_1") @db.VarChar(255)
  referenceNum1IsrmsRecommenderScore10             String? @map("Reference_num1_ISRMS_Recommender_Score_10") @db.VarChar(255)
  referenceNum1IsrmsRecommenderScore11             String? @map("Reference_num1_ISRMS_Recommender_Score_11") @db.VarChar(255)
  referenceNum1IsrmsRecommenderScore12             String? @map("Reference_num1_ISRMS_Recommender_Score_12") @db.VarChar(255)
  referenceNum1IsrmsRecommenderScore13             String? @map("Reference_num1_ISRMS_Recommender_Score_13") @db.VarChar(255)
  referenceNum1IsrmsRecommenderScore14             String? @map("Reference_num1_ISRMS_Recommender_Score_14") @db.VarChar(255)
  referenceNum1IsrmsRecommenderScore15             String? @map("Reference_num1_ISRMS_Recommender_Score_15") @db.VarChar(255)
  referenceNum1IsrmsRecommenderScore2              String? @map("Reference_num1_ISRMS_Recommender_Score_2") @db.VarChar(255)
  referenceNum1IsrmsRecommenderScore3              String? @map("Reference_num1_ISRMS_Recommender_Score_3") @db.VarChar(255)
  referenceNum1IsrmsRecommenderScore4              String? @map("Reference_num1_ISRMS_Recommender_Score_4") @db.VarChar(255)
  referenceNum1IsrmsRecommenderScore5              String? @map("Reference_num1_ISRMS_Recommender_Score_5") @db.VarChar(255)
  referenceNum1IsrmsRecommenderScore6              String? @map("Reference_num1_ISRMS_Recommender_Score_6") @db.VarChar(255)
  referenceNum1IsrmsRecommenderScore7              String? @map("Reference_num1_ISRMS_Recommender_Score_7") @db.VarChar(255)
  referenceNum1IsrmsRecommenderScore8              String? @map("Reference_num1_ISRMS_Recommender_Score_8") @db.VarChar(255)
  referenceNum1IsrmsRecommenderScore9              String? @map("Reference_num1_ISRMS_Recommender_Score_9") @db.VarChar(255)
  referenceNum1MseRecommendationAdditional         String? @map("Reference_num1_MSE_Recommendation_Additional") @db.VarChar(255)
  referenceNum1MseRecommendationComparison         String? @map("Reference_num1_MSE_Recommendation_Comparison") @db.VarChar(255)
  referenceNum1MseRecommendationHowKnown           String? @map("Reference_num1_MSE_Recommendation_How_Known") @db.VarChar(255)
  referenceNum1MseRecommendationProjectPerformance String? @map("Reference_num1_MSE_Recommendation_Project_Performance") @db.VarChar(255)
  referenceNum1MseRecommendationStrengthsWeakness  String? @map("Reference_num1_MSE_Recommendation_Strengths_Weakness") @db.VarChar(255)
  referenceNum1RecommenderScore1                   String? @map("Reference_num1_Recommender_Score_1") @db.VarChar(255)
  referenceNum1RecommenderScore2                   String? @map("Reference_num1_Recommender_Score_2") @db.VarChar(255)
  referenceNum1RecommenderScore3                   String? @map("Reference_num1_Recommender_Score_3") @db.VarChar(255)
  referenceNum1RecommenderScore4                   String? @map("Reference_num1_Recommender_Score_4") @db.VarChar(255)
  referenceNum1RecommenderScore5                   String? @map("Reference_num1_Recommender_Score_5") @db.VarChar(255)
  referenceNum1RecommenderScore6                   String? @map("Reference_num1_Recommender_Score_6") @db.VarChar(255)
  referenceNum1RecommenderScore7                   String? @map("Reference_num1_Recommender_Score_7") @db.VarChar(255)
  referenceNum1RecommenderScore8                   String? @map("Reference_num1_Recommender_Score_8") @db.VarChar(255)

  @@map("mits_slate_recommend1")
}

model MitsSlateRecommend2 {
  first                                            String? @map("First") @db.VarChar(255)
  id                                               String  @id @default(cuid()) @map("Application_Slate_GUID") @db.VarChar(255)
  last                                             String? @map("Last") @db.VarChar(255)
  middle                                           String? @map("Middle") @db.VarChar(255)
  prefix                                           String? @map("Prefix") @db.VarChar(255)
  reference2Email                                  String? @map("Reference_2_Email") @db.VarChar(255)
  reference2First                                  String? @map("Reference_2_First") @db.VarChar(255)
  reference2Industry                               String? @map("Reference_2_Industry") @db.VarChar(255)
  reference2Last                                   String? @map("Reference_2_Last") @db.VarChar(255)
  reference2Organization                           String? @map("Reference_2_Organization") @db.VarChar(255)
  reference2Phone                                  String? @map("Reference_2_Phone") @db.VarChar(255)
  reference2Submitted                              String? @map("Reference_2_Submitted") @db.VarChar(255)
  reference2Title                                  String? @map("Reference_2_Title") @db.VarChar(255)
  reference2Type                                   String? @map("Reference_2_Type") @db.VarChar(255)
  referenceNum2IsrmsRecommenderScore1              String? @map("Reference_num2_ISRMS_Recommender_Score_1") @db.VarChar(255)
  referenceNum2IsrmsRecommenderScore10             String? @map("Reference_num2_ISRMS_Recommender_Score_10") @db.VarChar(255)
  referenceNum2IsrmsRecommenderScore11             String? @map("Reference_num2_ISRMS_Recommender_Score_11") @db.VarChar(255)
  referenceNum2IsrmsRecommenderScore12             String? @map("Reference_num2_ISRMS_Recommender_Score_12") @db.VarChar(255)
  referenceNum2IsrmsRecommenderScore13             String? @map("Reference_num2_ISRMS_Recommender_Score_13") @db.VarChar(255)
  referenceNum2IsrmsRecommenderScore14             String? @map("Reference_num2_ISRMS_Recommender_Score_14") @db.VarChar(255)
  referenceNum2IsrmsRecommenderScore15             String? @map("Reference_num2_ISRMS_Recommender_Score_15") @db.VarChar(255)
  referenceNum2IsrmsRecommenderScore2              String? @map("Reference_num2_ISRMS_Recommender_Score_2") @db.VarChar(255)
  referenceNum2IsrmsRecommenderScore3              String? @map("Reference_num2_ISRMS_Recommender_Score_3") @db.VarChar(255)
  referenceNum2IsrmsRecommenderScore4              String? @map("Reference_num2_ISRMS_Recommender_Score_4") @db.VarChar(255)
  referenceNum2IsrmsRecommenderScore5              String? @map("Reference_num2_ISRMS_Recommender_Score_5") @db.VarChar(255)
  referenceNum2IsrmsRecommenderScore6              String? @map("Reference_num2_ISRMS_Recommender_Score_6") @db.VarChar(255)
  referenceNum2IsrmsRecommenderScore7              String? @map("Reference_num2_ISRMS_Recommender_Score_7") @db.VarChar(255)
  referenceNum2IsrmsRecommenderScore8              String? @map("Reference_num2_ISRMS_Recommender_Score_8") @db.VarChar(255)
  referenceNum2IsrmsRecommenderScore9              String? @map("Reference_num2_ISRMS_Recommender_Score_9") @db.VarChar(255)
  referenceNum2MseRecommendationAdditional         String? @map("Reference_num2_MSE_Recommendation_Additional") @db.VarChar(255)
  referenceNum2MseRecommendationComparison         String? @map("Reference_num2_MSE_Recommendation_Comparison") @db.VarChar(255)
  referenceNum2MseRecommendationHowKnown           String? @map("Reference_num2_MSE_Recommendation_How_Known") @db.VarChar(255)
  referenceNum2MseRecommendationProjectPerformance String? @map("Reference_num2_MSE_Recommendation_Project_Performance") @db.VarChar(255)
  referenceNum2MseRecommendationStrengthsWeakness  String? @map("Reference_num2_MSE_Recommendation_Strengths_Weakness") @db.VarChar(255)
  referenceNum2RecommenderScore1                   String? @map("Reference_num2_Recommender_Score_1") @db.VarChar(255)
  referenceNum2RecommenderScore2                   String? @map("Reference_num2_Recommender_Score_2") @db.VarChar(255)
  referenceNum2RecommenderScore3                   String? @map("Reference_num2_Recommender_Score_3") @db.VarChar(255)
  referenceNum2RecommenderScore4                   String? @map("Reference_num2_Recommender_Score_4") @db.VarChar(255)
  referenceNum2RecommenderScore5                   String? @map("Reference_num2_Recommender_Score_5") @db.VarChar(255)
  referenceNum2RecommenderScore6                   String? @map("Reference_num2_Recommender_Score_6") @db.VarChar(255)
  referenceNum2RecommenderScore7                   String? @map("Reference_num2_Recommender_Score_7") @db.VarChar(255)
  referenceNum2RecommenderScore8                   String? @map("Reference_num2_Recommender_Score_8") @db.VarChar(255)

  @@map("mits_slate_recommend2")
}

model MitsSlateRecommend3 {
  first                                            String? @map("First") @db.VarChar(255)
  id                                               String  @id @default(cuid()) @map("Application_Slate_GUID") @db.VarChar(255)
  last                                             String? @map("Last") @db.VarChar(255)
  middle                                           String? @map("Middle") @db.VarChar(255)
  prefix                                           String? @map("Prefix") @db.VarChar(255)
  reference3Email                                  String? @map("Reference_3_Email") @db.VarChar(255)
  reference3First                                  String? @map("Reference_3_First") @db.VarChar(255)
  reference3Industry                               String? @map("Reference_3_Industry") @db.VarChar(255)
  reference3Last                                   String? @map("Reference_3_Last") @db.VarChar(255)
  reference3Organization                           String? @map("Reference_3_Organization") @db.VarChar(255)
  reference3Phone                                  String? @map("Reference_3_Phone") @db.VarChar(255)
  reference3Submitted                              String? @map("Reference_3_Submitted") @db.VarChar(255)
  reference3Title                                  String? @map("Reference_3_Title") @db.VarChar(255)
  reference3Type                                   String? @map("Reference_3_Type") @db.VarChar(255)
  referenceNum3IsrmsRecommenderScore1              String? @map("Reference_num3_ISRMS_Recommender_Score_1") @db.VarChar(255)
  referenceNum3IsrmsRecommenderScore10             String? @map("Reference_num3_ISRMS_Recommender_Score_10") @db.VarChar(255)
  referenceNum3IsrmsRecommenderScore11             String? @map("Reference_num3_ISRMS_Recommender_Score_11") @db.VarChar(255)
  referenceNum3IsrmsRecommenderScore12             String? @map("Reference_num3_ISRMS_Recommender_Score_12") @db.VarChar(255)
  referenceNum3IsrmsRecommenderScore13             String? @map("Reference_num3_ISRMS_Recommender_Score_13") @db.VarChar(255)
  referenceNum3IsrmsRecommenderScore14             String? @map("Reference_num3_ISRMS_Recommender_Score_14") @db.VarChar(255)
  referenceNum3IsrmsRecommenderScore15             String? @map("Reference_num3_ISRMS_Recommender_Score_15") @db.VarChar(255)
  referenceNum3IsrmsRecommenderScore2              String? @map("Reference_num3_ISRMS_Recommender_Score_2") @db.VarChar(255)
  referenceNum3IsrmsRecommenderScore3              String? @map("Reference_num3_ISRMS_Recommender_Score_3") @db.VarChar(255)
  referenceNum3IsrmsRecommenderScore4              String? @map("Reference_num3_ISRMS_Recommender_Score_4") @db.VarChar(255)
  referenceNum3IsrmsRecommenderScore5              String? @map("Reference_num3_ISRMS_Recommender_Score_5") @db.VarChar(255)
  referenceNum3IsrmsRecommenderScore6              String? @map("Reference_num3_ISRMS_Recommender_Score_6") @db.VarChar(255)
  referenceNum3IsrmsRecommenderScore7              String? @map("Reference_num3_ISRMS_Recommender_Score_7") @db.VarChar(255)
  referenceNum3IsrmsRecommenderScore8              String? @map("Reference_num3_ISRMS_Recommender_Score_8") @db.VarChar(255)
  referenceNum3IsrmsRecommenderScore9              String? @map("Reference_num3_ISRMS_Recommender_Score_9") @db.VarChar(255)
  referenceNum3MseRecommendationAdditional         String? @map("Reference_num3_MSE_Recommendation_Additional") @db.VarChar(255)
  referenceNum3MseRecommendationComparison         String? @map("Reference_num3_MSE_Recommendation_Comparison") @db.VarChar(255)
  referenceNum3MseRecommendationHowKnown           String? @map("Reference_num3_MSE_Recommendation_How_Known") @db.VarChar(255)
  referenceNum3MseRecommendationProjectPerformance String? @map("Reference_num3_MSE_Recommendation_Project_Performance") @db.VarChar(255)
  referenceNum3MseRecommendationStrengthsWeakness  String? @map("Reference_num3_MSE_Recommendation_Strengths_Weakness") @db.VarChar(255)
  referenceNum3RecommenderScore1                   String? @map("Reference_num3_Recommender_Score_1") @db.VarChar(255)
  referenceNum3RecommenderScore2                   String? @map("Reference_num3_Recommender_Score_2") @db.VarChar(255)
  referenceNum3RecommenderScore3                   String? @map("Reference_num3_Recommender_Score_3") @db.VarChar(255)
  referenceNum3RecommenderScore4                   String? @map("Reference_num3_Recommender_Score_4") @db.VarChar(255)
  referenceNum3RecommenderScore5                   String? @map("Reference_num3_Recommender_Score_5") @db.VarChar(255)
  referenceNum3RecommenderScore6                   String? @map("Reference_num3_Recommender_Score_6") @db.VarChar(255)
  referenceNum3RecommenderScore7                   String? @map("Reference_num3_Recommender_Score_7") @db.VarChar(255)
  referenceNum3RecommenderScore8                   String? @map("Reference_num3_Recommender_Score_8") @db.VarChar(255)

  @@map("mits_slate_recommend3")
}

model MitsSlateReview {
  first                                             String? @map("First") @db.VarChar(100)
  id                                                String  @id @default(cuid()) @map("Application_Slate_GUID") @db.VarChar(100)
  last                                              String? @map("Last") @db.VarChar(100)
  middle                                            String? @map("Middle") @db.VarChar(100)
  mseReviewFormNum1AbilityToProgramComments         String? @map("MSE_Review_Form_num1_Ability_to_Program_Comments") @db.Text()
  mseReviewFormNum1AbilityToProgramEvaluation       String? @map("MSE_Review_Form_num1_Ability_to_Program_Evaluation") @db.VarChar(100)
  mseReviewFormNum1Comments                         String? @map("MSE_Review_Form_num1_Comments") @db.Text()
  mseReviewFormNum1CsseEvaluation                   String? @map("MSE_Review_Form_num1_CSSE_Evaluation") @db.VarChar(100)
  mseReviewFormNum1EnglishComments                  String? @map("MSE_Review_Form_num1_English_Comments") @db.Text()
  mseReviewFormNum1EnglishEvaluation                String? @map("MSE_Review_Form_num1_English_Evaluation") @db.VarChar(100)
  mseReviewFormNum1ExperienceComments               String? @map("MSE_Review_Form_num1_Experience_Comments") @db.Text()
  mseReviewFormNum1ExperienceEvaluation             String? @map("MSE_Review_Form_num1_Experience_Evaluation") @db.VarChar(100)
  mseReviewFormNum1FoundationalKnowledgeComments    String? @map("MSE_Review_Form_num1_Foundational_Knowledge_Comments") @db.Text()
  mseReviewFormNum1FoundationalKnowledgeEvaluation  String? @map("MSE_Review_Form_num1_Foundational_Knowledge_Evaluation") @db.VarChar(100)
  mseReviewFormNum1FromBin                          String? @map("MSE_Review_Form_num1_From_Bin") @db.VarChar(100)
  mseReviewFormNum1IntoBin                          String? @map("MSE_Review_Form_num1_Into_Bin") @db.VarChar(100)
  mseReviewFormNum1MaturityLeadershipEvaluation     String? @map("MSE_Review_Form_num1_Maturity_Leadership_Evaluation") @db.VarChar(100)
  mseReviewFormNum1MaturityLeadershpComments        String? @map("MSE_Review_Form_num1_Maturity_Leadershp_Comments") @db.Text()
  mseReviewFormNum1MitsEvaluation                   String? @map("MSE_Review_Form_num1_MITS_Evaluation") @db.VarChar(100)
  mseReviewFormNum1MseEvaluation                    String? @map("MSE_Review_Form_num1_MSE_Evaluation") @db.VarChar(100)
  mseReviewFormNum1MsitEvaluation                   String? @map("MSE_Review_Form_num1_MSIT_Evaluation") @db.VarChar(100)
  mseReviewFormNum1OtherRiskFactors                 String? @map("MSE_Review_Form_num1_Other_Risk_Factors") @db.VarChar(100)
  mseReviewFormNum1RiskFactors                      String? @map("MSE_Review_Form_num1_Risk_Factors") @db.Text()
  mseReviewFormNum1Started                          String? @map("MSE_Review_Form_num1_Started") @db.VarChar(100)
  mseReviewFormNum1Submitted                        String? @map("MSE_Review_Form_num1_Submitted") @db.VarChar(100)
  mseReviewFormNum1UnderstandingOfProgramComments   String? @map("MSE_Review_Form_num1_Understanding_of_Program_Comments") @db.Text()
  mseReviewFormNum1UnderstandingOfProgramEvaluation String? @map("MSE_Review_Form_num1_Understanding_of_Program_Evaluation") @db.VarChar(100)
  mseReviewFormNum1UserEmail                        String? @map("MSE_Review_Form_num1_User_Email") @db.VarChar(100)
  mseReviewFormNum1UserName                         String? @map("MSE_Review_Form_num1_User_Name") @db.VarChar(100)
  mseReviewFormNum2AbilityToProgramComments         String? @map("MSE_Review_Form_num2_Ability_to_Program_Comments") @db.Text()
  mseReviewFormNum2AbilityToProgramEvaluation       String? @map("MSE_Review_Form_num2_Ability_to_Program_Evaluation") @db.VarChar(100)
  mseReviewFormNum2Comments                         String? @map("MSE_Review_Form_num2_Comments") @db.Text()
  mseReviewFormNum2CsseEvaluation                   String? @map("MSE_Review_Form_num2_CSSE_Evaluation") @db.VarChar(100)
  mseReviewFormNum2EnglishComments                  String? @map("MSE_Review_Form_num2_English_Comments") @db.Text()
  mseReviewFormNum2EnglishEvaluation                String? @map("MSE_Review_Form_num2_English_Evaluation") @db.VarChar(100)
  mseReviewFormNum2ExperienceComments               String? @map("MSE_Review_Form_num2_Experience_Comments") @db.Text()
  mseReviewFormNum2ExperienceEvaluation             String? @map("MSE_Review_Form_num2_Experience_Evaluation") @db.VarChar(100)
  mseReviewFormNum2FoundationalKnowledgeComments    String? @map("MSE_Review_Form_num2_Foundational_Knowledge_Comments") @db.Text()
  mseReviewFormNum2FoundationalKnowledgeEvaluation  String? @map("MSE_Review_Form_num2_Foundational_Knowledge_Evaluation") @db.VarChar(100)
  mseReviewFormNum2FromBin                          String? @map("MSE_Review_Form_num2_From_Bin") @db.VarChar(100)
  mseReviewFormNum2IntoBin                          String? @map("MSE_Review_Form_num2_Into_Bin") @db.VarChar(100)
  mseReviewFormNum2MaturityLeadershipEvaluation     String? @map("MSE_Review_Form_num2_Maturity_Leadership_Evaluation") @db.VarChar(100)
  mseReviewFormNum2MaturityLeadershpComments        String? @map("MSE_Review_Form_num2_Maturity_Leadershp_Comments") @db.Text()
  mseReviewFormNum2MitsEvaluation                   String? @map("MSE_Review_Form_num2_MITS_Evaluation") @db.VarChar(100)
  mseReviewFormNum2MseEvaluation                    String? @map("MSE_Review_Form_num2_MSE_Evaluation") @db.VarChar(100)
  mseReviewFormNum2MsitEvaluation                   String? @map("MSE_Review_Form_num2_MSIT_Evaluation") @db.VarChar(100)
  mseReviewFormNum2OtherRiskFactors                 String? @map("MSE_Review_Form_num2_Other_Risk_Factors") @db.VarChar(100)
  mseReviewFormNum2RiskFactors                      String? @map("MSE_Review_Form_num2_Risk_Factors") @db.Text()
  mseReviewFormNum2Started                          String? @map("MSE_Review_Form_num2_Started") @db.VarChar(100)
  mseReviewFormNum2Submitted                        String? @map("MSE_Review_Form_num2_Submitted") @db.VarChar(100)
  mseReviewFormNum2UnderstandingOfProgramComments   String? @map("MSE_Review_Form_num2_Understanding_of_Program_Comments") @db.Text()
  mseReviewFormNum2UnderstandingOfProgramEvaluation String? @map("MSE_Review_Form_num2_Understanding_of_Program_Evaluation") @db.VarChar(100)
  mseReviewFormNum2UserEmail                        String? @map("MSE_Review_Form_num2_User_Email") @db.VarChar(100)
  mseReviewFormNum2UserName                         String? @map("MSE_Review_Form_num2_User_Name") @db.VarChar(100)
  mseReviewFormNum3AbilityToProgramComments         String? @map("MSE_Review_Form_num3_Ability_to_Program_Comments") @db.Text()
  mseReviewFormNum3AbilityToProgramEvaluation       String? @map("MSE_Review_Form_num3_Ability_to_Program_Evaluation") @db.VarChar(100)
  mseReviewFormNum3Comments                         String? @map("MSE_Review_Form_num3_Comments") @db.Text()
  mseReviewFormNum3CsseEvaluation                   String? @map("MSE_Review_Form_num3_CSSE_Evaluation") @db.VarChar(100)
  mseReviewFormNum3EnglishComments                  String? @map("MSE_Review_Form_num3_English_Comments") @db.Text()
  mseReviewFormNum3EnglishEvaluation                String? @map("MSE_Review_Form_num3_English_Evaluation") @db.VarChar(100)
  mseReviewFormNum3ExperienceComments               String? @map("MSE_Review_Form_num3_Experience_Comments") @db.Text()
  mseReviewFormNum3ExperienceEvaluation             String? @map("MSE_Review_Form_num3_Experience_Evaluation") @db.VarChar(100)
  mseReviewFormNum3FoundationalKnowledgeComments    String? @map("MSE_Review_Form_num3_Foundational_Knowledge_Comments") @db.Text()
  mseReviewFormNum3FoundationalKnowledgeEvaluation  String? @map("MSE_Review_Form_num3_Foundational_Knowledge_Evaluation") @db.VarChar(100)
  mseReviewFormNum3FromBin                          String? @map("MSE_Review_Form_num3_From_Bin") @db.VarChar(100)
  mseReviewFormNum3IntoBin                          String? @map("MSE_Review_Form_num3_Into_Bin") @db.VarChar(100)
  mseReviewFormNum3MaturityLeadershipEvaluation     String? @map("MSE_Review_Form_num3_Maturity_Leadership_Evaluation") @db.VarChar(100)
  mseReviewFormNum3MaturityLeadershpComments        String? @map("MSE_Review_Form_num3_Maturity_Leadershp_Comments") @db.Text()
  mseReviewFormNum3MitsEvaluation                   String? @map("MSE_Review_Form_num3_MITS_Evaluation") @db.VarChar(100)
  mseReviewFormNum3MseEvaluation                    String? @map("MSE_Review_Form_num3_MSE_Evaluation") @db.VarChar(100)
  mseReviewFormNum3MsitEvaluation                   String? @map("MSE_Review_Form_num3_MSIT_Evaluation") @db.VarChar(100)
  mseReviewFormNum3OtherRiskFactors                 String? @map("MSE_Review_Form_num3_Other_Risk_Factors") @db.VarChar(100)
  mseReviewFormNum3RiskFactors                      String? @map("MSE_Review_Form_num3_Risk_Factors") @db.Text()
  mseReviewFormNum3Started                          String? @map("MSE_Review_Form_num3_Started") @db.VarChar(100)
  mseReviewFormNum3Submitted                        String? @map("MSE_Review_Form_num3_Submitted") @db.VarChar(100)
  mseReviewFormNum3UnderstandingOfProgramComments   String? @map("MSE_Review_Form_num3_Understanding_of_Program_Comments") @db.Text()
  mseReviewFormNum3UnderstandingOfProgramEvaluation String? @map("MSE_Review_Form_num3_Understanding_of_Program_Evaluation") @db.VarChar(100)
  mseReviewFormNum3UserEmail                        String? @map("MSE_Review_Form_num3_User_Email") @db.VarChar(100)
  mseReviewFormNum3UserName                         String? @map("MSE_Review_Form_num3_User_Name") @db.VarChar(100)
  mseReviewFormNum4AbilityToProgramComments         String? @map("MSE_Review_Form_num4_Ability_to_Program_Comments") @db.Text()
  mseReviewFormNum4AbilityToProgramEvaluation       String? @map("MSE_Review_Form_num4_Ability_to_Program_Evaluation") @db.VarChar(100)
  mseReviewFormNum4Comments                         String? @map("MSE_Review_Form_num4_Comments") @db.Text()
  mseReviewFormNum4CsseEvaluation                   String? @map("MSE_Review_Form_num4_CSSE_Evaluation") @db.VarChar(100)
  mseReviewFormNum4EnglishComments                  String? @map("MSE_Review_Form_num4_English_Comments") @db.Text()
  mseReviewFormNum4EnglishEvaluation                String? @map("MSE_Review_Form_num4_English_Evaluation") @db.VarChar(100)
  mseReviewFormNum4ExperienceComments               String? @map("MSE_Review_Form_num4_Experience_Comments") @db.Text()
  mseReviewFormNum4ExperienceEvaluation             String? @map("MSE_Review_Form_num4_Experience_Evaluation") @db.VarChar(100)
  mseReviewFormNum4FoundationalKnowledgeComments    String? @map("MSE_Review_Form_num4_Foundational_Knowledge_Comments") @db.Text()
  mseReviewFormNum4FoundationalKnowledgeEvaluation  String? @map("MSE_Review_Form_num4_Foundational_Knowledge_Evaluation") @db.VarChar(100)
  mseReviewFormNum4FromBin                          String? @map("MSE_Review_Form_num4_From_Bin") @db.VarChar(100)
  mseReviewFormNum4IntoBin                          String? @map("MSE_Review_Form_num4_Into_Bin") @db.VarChar(100)
  mseReviewFormNum4MaturityLeadershipEvaluation     String? @map("MSE_Review_Form_num4_Maturity_Leadership_Evaluation") @db.VarChar(100)
  mseReviewFormNum4MaturityLeadershpComments        String? @map("MSE_Review_Form_num4_Maturity_Leadershp_Comments") @db.Text()
  mseReviewFormNum4MitsEvaluation                   String? @map("MSE_Review_Form_num4_MITS_Evaluation") @db.VarChar(100)
  mseReviewFormNum4MseEvaluation                    String? @map("MSE_Review_Form_num4_MSE_Evaluation") @db.VarChar(100)
  mseReviewFormNum4MsitEvaluation                   String? @map("MSE_Review_Form_num4_MSIT_Evaluation") @db.VarChar(100)
  mseReviewFormNum4OtherRiskFactors                 String? @map("MSE_Review_Form_num4_Other_Risk_Factors") @db.VarChar(100)
  mseReviewFormNum4RiskFactors                      String? @map("MSE_Review_Form_num4_Risk_Factors") @db.Text()
  mseReviewFormNum4Started                          String? @map("MSE_Review_Form_num4_Started") @db.VarChar(100)
  mseReviewFormNum4Submitted                        String? @map("MSE_Review_Form_num4_Submitted") @db.VarChar(100)
  mseReviewFormNum4UnderstandingOfProgramComments   String? @map("MSE_Review_Form_num4_Understanding_of_Program_Comments") @db.Text()
  mseReviewFormNum4UnderstandingOfProgramEvaluation String? @map("MSE_Review_Form_num4_Understanding_of_Program_Evaluation") @db.VarChar(100)
  mseReviewFormNum4UserEmail                        String? @map("MSE_Review_Form_num4_User_Email") @db.VarChar(100)
  mseReviewFormNum4UserName                         String? @map("MSE_Review_Form_num4_User_Name") @db.VarChar(100)
  mseReviewFormNum5AbilityToProgramComments         String? @map("MSE_Review_Form_num5_Ability_to_Program_Comments") @db.Text()
  mseReviewFormNum5AbilityToProgramEvaluation       String? @map("MSE_Review_Form_num5_Ability_to_Program_Evaluation") @db.VarChar(100)
  mseReviewFormNum5Comments                         String? @map("MSE_Review_Form_num5_Comments") @db.Text()
  mseReviewFormNum5CsseEvaluation                   String? @map("MSE_Review_Form_num5_CSSE_Evaluation") @db.VarChar(100)
  mseReviewFormNum5EnglishComments                  String? @map("MSE_Review_Form_num5_English_Comments") @db.Text()
  mseReviewFormNum5EnglishEvaluation                String? @map("MSE_Review_Form_num5_English_Evaluation") @db.VarChar(100)
  mseReviewFormNum5ExperienceComments               String? @map("MSE_Review_Form_num5_Experience_Comments") @db.Text()
  mseReviewFormNum5ExperienceEvaluation             String? @map("MSE_Review_Form_num5_Experience_Evaluation") @db.VarChar(100)
  mseReviewFormNum5FoundationalKnowledgeComments    String? @map("MSE_Review_Form_num5_Foundational_Knowledge_Comments") @db.Text()
  mseReviewFormNum5FoundationalKnowledgeEvaluation  String? @map("MSE_Review_Form_num5_Foundational_Knowledge_Evaluation") @db.VarChar(100)
  mseReviewFormNum5FromBin                          String? @map("MSE_Review_Form_num5_From_Bin") @db.VarChar(100)
  mseReviewFormNum5IntoBin                          String? @map("MSE_Review_Form_num5_Into_Bin") @db.VarChar(100)
  mseReviewFormNum5MaturityLeadershipEvaluation     String? @map("MSE_Review_Form_num5_Maturity_Leadership_Evaluation") @db.VarChar(100)
  mseReviewFormNum5MaturityLeadershpComments        String? @map("MSE_Review_Form_num5_Maturity_Leadershp_Comments") @db.Text()
  mseReviewFormNum5MitsEvaluation                   String? @map("MSE_Review_Form_num5_MITS_Evaluation") @db.VarChar(100)
  mseReviewFormNum5MseEvaluation                    String? @map("MSE_Review_Form_num5_MSE_Evaluation") @db.VarChar(100)
  mseReviewFormNum5MsitEvaluation                   String? @map("MSE_Review_Form_num5_MSIT_Evaluation") @db.VarChar(100)
  mseReviewFormNum5OtherRiskFactors                 String? @map("MSE_Review_Form_num5_Other_Risk_Factors") @db.VarChar(100)
  mseReviewFormNum5RiskFactors                      String? @map("MSE_Review_Form_num5_Risk_Factors") @db.Text()
  mseReviewFormNum5Started                          String? @map("MSE_Review_Form_num5_Started") @db.VarChar(100)
  mseReviewFormNum5Submitted                        String? @map("MSE_Review_Form_num5_Submitted") @db.VarChar(100)
  mseReviewFormNum5UnderstandingOfProgramComments   String? @map("MSE_Review_Form_num5_Understanding_of_Program_Comments") @db.Text()
  mseReviewFormNum5UnderstandingOfProgramEvaluation String? @map("MSE_Review_Form_num5_Understanding_of_Program_Evaluation") @db.VarChar(100)
  mseReviewFormNum5UserEmail                        String? @map("MSE_Review_Form_num5_User_Email") @db.VarChar(100)
  mseReviewFormNum5UserName                         String? @map("MSE_Review_Form_num5_User_Name") @db.VarChar(100)
  prefix                                            String? @map("Prefix") @db.VarChar(100)

  @@map("mits_slate_reviews")
}

model MitsSlateSuppinfo {
  fellowship10Amount      String? @map("Fellowship_10_Amount") @db.VarChar(255)
  fellowship10AppliedDate String? @map("Fellowship_10_Applied_Date") @db.VarChar(255)
  fellowship10AwardedDate String? @map("Fellowship_10_Awarded_Date") @db.VarChar(255)
  fellowship10Duration    String? @map("Fellowship_10_Duration") @db.VarChar(255)
  fellowship10Name        String? @map("Fellowship_10_Name") @db.VarChar(255)
  fellowship10Status      String? @map("Fellowship_10_Status") @db.VarChar(255)
  fellowship1Amount       String? @map("Fellowship_1_Amount") @db.VarChar(255)
  fellowship1AppliedDate  String? @map("Fellowship_1_Applied_Date") @db.VarChar(255)
  fellowship1AwardedDate  String? @map("Fellowship_1_Awarded_Date") @db.VarChar(255)
  fellowship1Duration     String? @map("Fellowship_1_Duration") @db.VarChar(255)
  fellowship1Name         String? @map("Fellowship_1_Name") @db.VarChar(255)
  fellowship1Status       String? @map("Fellowship_1_Status") @db.VarChar(255)
  fellowship2Amount       String? @map("Fellowship_2_Amount") @db.VarChar(255)
  fellowship2AppliedDate  String? @map("Fellowship_2_Applied_Date") @db.VarChar(255)
  fellowship2AwardedDate  String? @map("Fellowship_2_Awarded_Date") @db.VarChar(255)
  fellowship2Duration     String? @map("Fellowship_2_Duration") @db.VarChar(255)
  fellowship2Name         String? @map("Fellowship_2_Name") @db.VarChar(255)
  fellowship2Status       String? @map("Fellowship_2_Status") @db.VarChar(255)
  fellowship3Amount       String? @map("Fellowship_3_Amount") @db.VarChar(255)
  fellowship3AppliedDate  String? @map("Fellowship_3_Applied_Date") @db.VarChar(255)
  fellowship3AwardedDate  String? @map("Fellowship_3_Awarded_Date") @db.VarChar(255)
  fellowship3Duration     String? @map("Fellowship_3_Duration") @db.VarChar(255)
  fellowship3Name         String? @map("Fellowship_3_Name") @db.VarChar(255)
  fellowship3Status       String? @map("Fellowship_3_Status") @db.VarChar(255)
  fellowship4Amount       String? @map("Fellowship_4_Amount") @db.VarChar(255)
  fellowship4AppliedDate  String? @map("Fellowship_4_Applied_Date") @db.VarChar(255)
  fellowship4AwardedDate  String? @map("Fellowship_4_Awarded_Date") @db.VarChar(255)
  fellowship4Duration     String? @map("Fellowship_4_Duration") @db.VarChar(255)
  fellowship4Name         String? @map("Fellowship_4_Name") @db.VarChar(255)
  fellowship4Status       String? @map("Fellowship_4_Status") @db.VarChar(255)
  fellowship5Amount       String? @map("Fellowship_5_Amount") @db.VarChar(255)
  fellowship5AppliedDate  String? @map("Fellowship_5_Applied_Date") @db.VarChar(255)
  fellowship5AwardedDate  String? @map("Fellowship_5_Awarded_Date") @db.VarChar(255)
  fellowship5Duration     String? @map("Fellowship_5_Duration") @db.VarChar(255)
  fellowship5Name         String? @map("Fellowship_5_Name") @db.VarChar(255)
  fellowship5Status       String? @map("Fellowship_5_Status") @db.VarChar(255)
  fellowship6Amount       String? @map("Fellowship_6_Amount") @db.VarChar(255)
  fellowship6AppliedDate  String? @map("Fellowship_6_Applied_Date") @db.VarChar(255)
  fellowship6AwardedDate  String? @map("Fellowship_6_Awarded_Date") @db.VarChar(255)
  fellowship6Duration     String? @map("Fellowship_6_Duration") @db.VarChar(255)
  fellowship6Name         String? @map("Fellowship_6_Name") @db.VarChar(255)
  fellowship6Status       String? @map("Fellowship_6_Status") @db.VarChar(255)
  fellowship7Amount       String? @map("Fellowship_7_Amount") @db.VarChar(255)
  fellowship7AppliedDate  String? @map("Fellowship_7_Applied_Date") @db.VarChar(255)
  fellowship7AwardedDate  String? @map("Fellowship_7_Awarded_Date") @db.VarChar(255)
  fellowship7Duration     String? @map("Fellowship_7_Duration") @db.VarChar(255)
  fellowship7Name         String? @map("Fellowship_7_Name") @db.VarChar(255)
  fellowship7Status       String? @map("Fellowship_7_Status") @db.VarChar(255)
  fellowship8Amount       String? @map("Fellowship_8_Amount") @db.VarChar(255)
  fellowship8AppliedDate  String? @map("Fellowship_8_Applied_Date") @db.VarChar(255)
  fellowship8AwardedDate  String? @map("Fellowship_8_Awarded_Date") @db.VarChar(255)
  fellowship8Duration     String? @map("Fellowship_8_Duration") @db.VarChar(255)
  fellowship8Name         String? @map("Fellowship_8_Name") @db.VarChar(255)
  fellowship8Status       String? @map("Fellowship_8_Status") @db.VarChar(255)
  fellowship9Amount       String? @map("Fellowship_9_Amount") @db.VarChar(255)
  fellowship9AppliedDate  String? @map("Fellowship_9_Applied_Date") @db.VarChar(255)
  fellowship9AwardedDate  String? @map("Fellowship_9_Awarded_Date") @db.VarChar(255)
  fellowship9Duration     String? @map("Fellowship_9_Duration") @db.VarChar(255)
  fellowship9Name         String? @map("Fellowship_9_Name") @db.VarChar(255)
  fellowship9Status       String? @map("Fellowship_9_Status") @db.VarChar(255)
  first                   String? @map("First") @db.VarChar(255)
  hasFellowships          String? @map("Has_Fellowships") @db.VarChar(255)
  id                      String  @id @default(cuid()) @map("Application_Slate_GUID") @db.VarChar(255)
  last                    String? @map("Last") @db.VarChar(255)
  learnAboutOther         String? @map("Learn_About_Other") @db.VarChar(255)
  learnAboutUs            String? @map("Learn_About_Us") @db.VarChar(255)
  middle                  String? @map("Middle") @db.VarChar(255)
  prefix                  String? @map("Prefix") @db.VarChar(255)
  videoEssayAccessCode    String? @map("Video_Essay_Access_Code") @db.VarChar(255)
  videoEssayUrl           String? @map("Video_Essay_URL") @db.VarChar(255)

  @@map("mits_slate_suppinfo")
}

model MitsSlateToefl {
  first                           String? @map("First") @db.VarChar(255)
  id                              String  @id @default(cuid()) @map("Application_Slate_GUID") @db.VarChar(255)
  last                            String? @map("Last") @db.VarChar(255)
  middle                          String? @map("Middle") @db.VarChar(255)
  prefix                          String? @map("Prefix") @db.VarChar(255)
  toeflListening                  String? @map("TOEFL_Listening") @db.VarChar(255)
  toeflReading                    String? @map("TOEFL_Reading") @db.VarChar(255)
  toeflSpeaking                   String? @map("TOEFL_Speaking") @db.VarChar(255)
  toeflStructureWrittenExpression String? @map("TOEFL_Structure_Written_Expression") @db.VarChar(255)
  toeflTotal                      String? @map("TOEFL_Total") @db.VarChar(255)

  @@map("mits_slate_toefl")
}

model MlArea {
  application    Application  @relation(fields: [application_id], references: [id])
  application_id Int
  area           String       @db.Char(100)
  id             Int          @id @default(autoincrement())
  programs       ProgramModel @relation(fields: [program_id], references: [id])
  program_id     Int

  @@index([application_id], map: "application_id")
  @@index([program_id], map: "program_id")
  @@map("ml_area")
}

model MlSupportingCoursework {
  application          Application @relation(fields: [app_id], references: [id])
  app_id               Int
  id                   Int         @id @default(autoincrement())
  introCourse2Grade    String      @map("intro_course2_grade") @db.VarChar(10)
  introCourse2Num      String      @map("intro_course2_num") @db.VarChar(50)
  introCourse2Semester String      @map("intro_course2_semester") @db.VarChar(100)
  introCourseGrade     String      @map("intro_course_grade") @db.VarChar(10)
  introCourseNum       String      @map("intro_course_num") @db.VarChar(50)
  introCourseSemester  String      @map("intro_course_semester") @db.VarChar(100)
  ml1CourseGrade       String      @map("ml1_course_grade") @db.VarChar(10)
  ml1CourseNum         String      @map("ml1_course_num") @db.VarChar(50)
  ml1CourseSemester    String      @map("ml1_course_semester") @db.VarChar(100)
  ml2CourseGrade       String      @map("ml2_course_grade") @db.VarChar(10)
  ml2CourseNum         String      @map("ml2_course_num") @db.VarChar(50)
  ml2CourseSemester    String      @map("ml2_course_semester") @db.VarChar(100)

  @@index([app_id], map: "app_id")
  @@map("ml_supporting_coursework")
}

model MseAqa {
  application           Application @relation(fields: [application_id], references: [id])
  application_id        Int
  englishComments       String?     @map("english_comments") @db.Text()
  englishRating         Int?        @map("english_rating") @db.UnsignedTinyInt()
  experienceComments    String?     @map("experience_comments") @db.Text()
  experienceRating      Int?        @map("experience_rating") @db.UnsignedTinyInt()
  foundationalComments  String?     @map("foundational_comments") @db.Text()
  foundationalRating    Int?        @map("foundational_rating") @db.UnsignedTinyInt()
  id                    Int         @id @default(autoincrement())
  maturityComments      String?     @map("maturity_comments") @db.Text()
  maturityRating        Int?        @map("maturity_rating") @db.UnsignedTinyInt()
  programmingComments   String?     @map("programming_comments") @db.Text()
  programmingRating     Int?        @map("programming_rating") @db.UnsignedTinyInt()
  reviewerId            Int         @default(0) @map("reviewer_id")
  understandingComments String?     @map("understanding_comments") @db.Text()
  understandingRating   Int?        @map("understanding_rating") @db.UnsignedTinyInt()

  @@unique([application_id, reviewerId])
  @@index([id], map: "id")
  @@map("mse_aqa")
}

model MseBridgeCourse {
  applicationId Int    @map("application_id")
  courseId      Int    @default(0) @map("course_id") @db.TinyInt()
  id            String @id @default(cuid())
  reviewerId    Int    @map("reviewer_id")

  @@unique([applicationId, reviewerId])
  @@map("mse_bridge_course")
}

model MseBridgeCourseDecision {
  applicationId Int    @map("application_id")
  courseId      Int    @default(0) @map("course_id") @db.TinyInt()
  id            String @id @default(cuid())
  programId     Int    @map("program_id")

  @@unique([applicationId, programId])
  @@map("mse_bridge_course_decision")
}

model MseCodility {
  academicDegree        String?     @map("academic_degree") @db.VarChar(255)
  application           Application @relation(fields: [application_id], references: [id])
  application_id        Int         @unique
  closeDate             String?     @map("close_date") @db.VarChar(255)
  createDate            String      @map("create_date") @db.VarChar(255)
  email                 String      @db.VarChar(255)
  fieldOfStudy          String?     @map("field_of_study") @db.VarChar(255)
  id                    Int         @id @default(autoincrement())
  ips                   String      @db.VarChar(1024)
  lastName              String      @map("last_name") @db.VarChar(255)
  lastSchoolAttended    String?     @map("last_school_attended") @db.VarChar(255)
  maxScore              String      @map("max_score") @db.VarChar(255)
  nick                  String      @db.VarChar(255)
  percentCorrectness    String      @map("percent_correctness") @db.VarChar(255)
  percentPerformance    String      @map("percent_performance") @db.VarChar(255)
  percentTotalScore     String      @map("percent_total_score") @db.VarChar(255)
  phone                 String?     @db.VarChar(255)
  profileUrl            String?     @map("profile_url") @db.VarChar(255)
  programmingExperience String?     @map("programming_experience") @db.VarChar(255)
  similarityCheck       String?     @map("similarity_check") @db.VarChar(255)
  startDate             String?     @map("start_date") @db.VarChar(255)
  task1Correctness      String      @map("task1_correctness") @db.VarChar(255)
  task1Name             String      @map("task1_name") @db.VarChar(255)
  task1Performance      String      @map("task1_performance") @db.VarChar(255)
  task1Score            String      @map("task1_score") @db.VarChar(255)
  task2Correctness      String      @map("task2_correctness") @db.VarChar(255)
  task2Name             String      @map("task2_name") @db.VarChar(255)
  task2Performance      String      @map("task2_performance") @db.VarChar(255)
  task2Score            String      @map("task2_score") @db.VarChar(255)
  task3Correctness      String      @map("task3_correctness") @db.VarChar(255)
  task3Name             String      @map("task3_name") @db.VarChar(255)
  task3Performance      String      @map("task3_performance") @db.VarChar(255)
  task3Score            String      @map("task3_score") @db.VarChar(255)
  task4Correctness      String      @map("task4_correctness") @db.VarChar(255)
  task4Name             String      @map("task4_name") @db.VarChar(255)
  task4Performance      String      @map("task4_performance") @db.VarChar(255)
  task4Score            String      @map("task4_score") @db.VarChar(255)
  test                  String      @db.VarChar(255)
  testSessionId         String      @map("test_session_id") @db.VarChar(255)
  timeUsed              String      @map("time_used") @db.VarChar(255)
  totalScore            String      @map("total_score") @db.VarChar(255)

  @@map("mse_codility")
}

model MseInterview {
  applicationId      Int      @map("application_id")
  id                 String   @id @default(cuid())
  interviewComments  String   @map("interview_comments") @db.Text()
  interviewDate      DateTime @map("interview_date") @db.Date()
  interviewType      String   @map("interview_type") @db.VarChar(20)
  interviewTypeOther String?  @map("interview_type_other") @db.VarChar(45)
  reviewerId         Int      @map("reviewer_id")

  @@unique([applicationId, reviewerId])
  @@map("mse_interview")
}

model MseLetterRec {
  algortihms     Int    @default(0) @db.TinyInt()
  applicationId  Int    @map("application_id")
  dataStructures Int    @default(0) @map("data_structures") @db.TinyInt()
  discrete       Int    @default(0) @db.TinyInt()
  id             String @id @default(cuid())
  java           Int    @default(0) @db.TinyInt()
  reviewerId     Int    @map("reviewer_id")

  @@unique([applicationId, reviewerId])
  @@map("mse_letter_recs")
}

model MseLetterRecsDecision {
  algorithms     Int    @default(0) @db.TinyInt()
  applicationId  Int    @map("application_id")
  dataStructures Int    @default(0) @map("data_structures") @db.TinyInt()
  discrete       Int    @default(0) @db.TinyInt()
  id             String @id @default(cuid())
  java           Int    @default(0) @db.TinyInt()
  programId      Int    @map("program_id")

  @@unique([applicationId, programId])
  @@map("mse_letter_recs_decision")
}

model MseRiskFactor {
  academic      Int     @default(0) @db.TinyInt()
  applicationId Int     @map("application_id")
  experience    Int     @default(0) @db.TinyInt()
  id            String  @id @default(cuid())
  language      Int     @default(0) @db.TinyInt()
  other         Int     @default(0) @db.TinyInt()
  otherText     String? @map("other_text") @db.VarChar(45)
  reviewerId    Int     @map("reviewer_id")

  @@unique([applicationId, reviewerId])
  @@map("mse_risk_factors")
}

model MseRiskFactorsDecision {
  academic      Int     @default(0) @db.TinyInt()
  applicationId Int     @map("application_id")
  experience    Int     @default(0) @db.TinyInt()
  id            String  @id @default(cuid())
  language      Int     @default(0) @db.TinyInt()
  other         Int     @default(0) @db.TinyInt()
  otherText     String? @map("other_text") @db.VarChar(45)
  programId     Int     @map("program_id")

  @@unique([applicationId, programId])
  @@map("mse_risk_factors_decision")
}

model MseSupportingCoursework {
  algCourseGrade   String @map("alg_course_grade") @db.VarChar(10)
  algCourseName    String @map("alg_course_name") @db.VarChar(100)
  algCourseNum     String @map("alg_course_num") @db.VarChar(50)
  appId            Int    @map("app_id")
  dmCourseGrade    String @map("dm_course_grade") @db.VarChar(10)
  dmCourseName     String @map("dm_course_name") @db.VarChar(100)
  dmCourseNum      String @map("dm_course_num") @db.VarChar(50)
  dsCourseGrade    String @map("ds_course_grade") @db.VarChar(10)
  dsCourseName     String @map("ds_course_name") @db.VarChar(100)
  dsCourseNum      String @map("ds_course_num") @db.VarChar(50)
  id               Int    @id @default(autoincrement())
  prog1CourseGrade String @map("prog1_course_grade") @db.VarChar(10)
  prog1CourseName  String @map("prog1_course_name") @db.VarChar(100)
  prog1CourseNum   String @map("prog1_course_num") @db.VarChar(50)
  prog2CourseGrade String @map("prog2_course_grade") @db.VarChar(10)
  prog2CourseName  String @map("prog2_course_name") @db.VarChar(100)
  prog2CourseNum   String @map("prog2_course_num") @db.VarChar(50)

  @@index([appId], map: "app_id")
  @@map("mse_supporting_coursework")
}

model Multiprogramlockout {
  id         Int @id @default(autoincrement())
  programId1 Int @map("program_id1")
  programId2 Int @map("program_id2")

  @@index([programId1], map: "program_id1")
  @@index([programId2], map: "program_id2")
  @@map("multiprogramlockouts")
}

model ParentInfo {
  appId        Int      @db.UnsignedInt()
  created      DateTime @default(now()) @db.DateTime(0)
  id           Int      @id @default(autoincrement())
  modified     DateTime @db.DateTime(0)
  p1EdLevel    Int?     @db.TinyInt()
  p1Profession String?  @db.Text()
  p2EdLevel    Int?     @db.TinyInt()
  p2Profession String?  @db.Text()

  @@index([appId], map: "appId")
  @@map("parentInfo")
}

model Payment {
  application       Application              @relation(fields: [application_id], references: [id])
  application_id    Int
  id                Int                      @id @default(autoincrement())
  lastModTime       DateTime                 @default(now()) @map("last_mod_time") @db.Timestamp(0)
  lastModUserId     Int                      @map("last_mod_user_id")
  paymentAmount     Decimal                  @map("payment_amount") @db.Decimal(10, 2)
  paymentId         Int                      @unique @map("payment_id")
  paymentIntentDate DateTime                 @map("payment_intent_date") @db.DateTime(0)
  payment_status    EnumPaymentPaymentStatus @default(pending)
  paymentType       Int                      @map("payment_type") @db.TinyInt()
  paymentVoucher    PaymentVoucher?

  @@index([application_id], map: "fk_payment_application")
  @@map("payment")
}

model PaymentAudit {
  applicationId     Int                           @map("application_id")
  id                Int                           @id @default(autoincrement())
  lastModTime       DateTime                      @default(now()) @map("last_mod_time") @db.Timestamp(0)
  lastModUserId     Int                           @map("last_mod_user_id")
  paymentAmount     Decimal                       @map("payment_amount") @db.Decimal(10, 2)
  paymentId         Int                           @map("payment_id")
  paymentIntentDate DateTime                      @map("payment_intent_date") @db.DateTime(0)
  payment_status    EnumPaymentAuditPaymentStatus @default(pending)
  paymentType       Int                           @map("payment_type") @db.TinyInt()
  timeDeleted       DateTime                      @default(now()) @map("time_deleted") @db.DateTime(0)

  @@index([applicationId], map: "fk_payment_application")
  @@index([paymentId], map: "payment_id")
  @@map("payment_audit")
}

model PaymentItem {
  id                Int           @id @default(autoincrement())
  paymentId         Int           @map("payment_id")
  paymentItemAmount Decimal?      @map("payment_item_amount") @db.Decimal(10, 2)
  paymentItemId     Int           @unique @map("payment_item_id")
  programs          ProgramModel? @relation(fields: [program_id], references: [id])
  program_id        Int?

  @@index([paymentId], map: "fk_payment_item_payment")
  @@index([program_id], map: "program_id")
  @@map("payment_item")
}

model PaymentNew {
  applicationId     Int                         @map("application_id")
  id                Int                         @id @default(autoincrement()) @map("payment_id")
  lastModTime       DateTime                    @default(now()) @map("last_mod_time") @db.Timestamp(0)
  lastModUserId     Int                         @map("last_mod_user_id")
  paymentAmount     Decimal                     @map("payment_amount") @db.Decimal(6, 2)
  paymentIntentDate DateTime                    @map("payment_intent_date") @db.DateTime(0)
  payment_status    EnumPaymentNewPaymentStatus @default(pending)
  paymentType       Int                         @map("payment_type") @db.TinyInt()

  @@index([applicationId], map: "fk_payment_application")
  @@map("payment_new")
}

model PaymentVoucher {
  datafileinfoId Int     @map("datafileinfo_id")
  id             Int     @id @default(autoincrement())
  payment        Payment @relation(fields: [payment_id], references: [id])
  payment_id     Int     @unique

  @@map("payment_voucher")
}

model PeSlateApp {
  applicationStatus                String? @map("Application_Status") @db.VarChar(255)
  appSubmittedDate                 String? @map("App_Submitted_Date") @db.VarChar(255)
  birthdate                        String? @map("Birthdate") @db.VarChar(255)
  citizenshipStatus                String? @map("Citizenship_Status") @db.VarChar(255)
  decisionConfirmedExportCode      String? @map("Decision_Confirmed_Export_Code") @db.VarChar(255)
  email                            String? @map("Email") @db.VarChar(255)
  emailAddress                     String? @map("Email_Address") @db.VarChar(255)
  first                            String? @map("First") @db.VarChar(255)
  hispanic                         String? @map("Hispanic") @db.VarChar(255)
  id                               String  @id @default(cuid()) @map("Application_Slate_GUID") @db.VarChar(255)
  ipedsClassification              String? @map("IPEDS_Classification") @db.VarChar(255)
  language                         String? @map("Language") @db.VarChar(255)
  last                             String? @map("Last") @db.VarChar(255)
  mailingAddressCity               String? @map("Mailing_Address_City") @db.VarChar(255)
  mailingAddressCountryFipsCode    String? @map("Mailing_Address_Country_FIPS_Code") @db.VarChar(255)
  mailingAddressCountryIso2Code    String? @map("Mailing_Address_Country_ISO_2_Code") @db.VarChar(255)
  mailingAddressCountryIso3Code    String? @map("Mailing_Address_Country_ISO_3_Code") @db.VarChar(255)
  mailingAddressCountryName        String? @map("Mailing_Address_Country_Name") @db.VarChar(255)
  mailingAddressCountrySisExport   String? @map("Mailing_Address_Country_SIS_Export") @db.VarChar(255)
  mailingAddressGeomarket          String? @map("Mailing_Address_Geomarket") @db.VarChar(255)
  mailingAddressPostalCode         String? @map("Mailing_Address_Postal_Code") @db.VarChar(255)
  mailingAddressRegion             String? @map("Mailing_Address_Region") @db.VarChar(255)
  mailingAddressStreet1            String? @map("Mailing_Address_Street_1") @db.VarChar(255)
  mailingAddressStreet2            String? @map("Mailing_Address_Street_2") @db.VarChar(255)
  mailingAddressStreet3            String? @map("Mailing_Address_Street_3") @db.VarChar(255)
  mailingAddressValidFromDate      String? @map("Mailing_Address_Valid_From_Date") @db.VarChar(255)
  mailingAddressValidToDate        String? @map("Mailing_Address_Valid_To_Date") @db.VarChar(255)
  middle                           String? @map("Middle") @db.VarChar(255)
  mobilePhoneNumber                String? @map("Mobile_Phone_Number") @db.VarChar(255)
  permanentAddressCity             String? @map("Permanent_Address_City") @db.VarChar(255)
  permanentAddressCountry          String? @map("Permanent_Address_Country") @db.VarChar(255)
  permanentAddressCountryFipsCode  String? @map("Permanent_Address_Country_FIPS_Code") @db.VarChar(255)
  permanentAddressCountryIso2Code  String? @map("Permanent_Address_Country_ISO_2_Code") @db.VarChar(255)
  permanentAddressCountryIso3Code  String? @map("Permanent_Address_Country_ISO_3_Code") @db.VarChar(255)
  permanentAddressCountrySisExport String? @map("Permanent_Address_Country_SIS_Export") @db.VarChar(255)
  permanentAddressGeomarket        String? @map("Permanent_Address_Geomarket") @db.VarChar(255)
  permanentAddressPostalCode       String? @map("Permanent_Address_Postal_Code") @db.VarChar(255)
  permanentAddressRegion           String? @map("Permanent_Address_Region") @db.VarChar(255)
  permanentAddressStreet1          String? @map("Permanent_Address_Street_1") @db.VarChar(255)
  permanentAddressStreet2          String? @map("Permanent_Address_Street_2") @db.VarChar(255)
  permanentAddressStreet3          String? @map("Permanent_Address_Street_3") @db.VarChar(255)
  personalWebSite                  String? @map("Personal_Web_Site") @db.VarChar(255)
  phoneNumber                      String? @map("Phone_Number") @db.VarChar(255)
  prefix                           String? @map("Prefix") @db.VarChar(255)
  primaryCitizenship               String? @map("Primary_Citizenship") @db.VarChar(255)
  race                             String? @map("Race") @db.VarChar(255)
  reference1Waiver                 String? @map("Reference_1_Waiver") @db.VarChar(255)
  reference2Waiver                 String? @map("Reference_2_Waiver") @db.VarChar(255)
  reference3Waiver                 String? @map("Reference_3_Waiver") @db.VarChar(255)
  roundExportCode                  String? @map("Round_Export_Code") @db.VarChar(255)
  secondaryCitizenship             String? @map("Secondary_Citizenship") @db.VarChar(255)
  sex                              String? @map("Sex") @db.VarChar(255)
  suffix                           String? @map("Suffix") @db.VarChar(255)

  @@map("pe_slate_apps")
}

model Period {
  aaDepartment      AaDepartment[]
  cohort            Cohort[]
  description       String?             @db.VarChar(45)
  endDate           DateTime?           @map("end_date") @db.DateTime(0)
  id                Int                 @id @default(autoincrement()) @map("period_id")
  parentPeriodId    Int?                @map("parent_period_id")
  periodApplication PeriodApplication[]
  periodTypeId      Int                 @map("period_type_id")
  startDate         DateTime            @map("start_date") @db.DateTime(0)
  unitId            Int                 @map("unit_id")

  @@index([periodTypeId], map: "fk_period_type")
  @@index([unitId], map: "fk_period_unit")
  @@index([parentPeriodId], map: "idx_period_parent_id")
  @@map("period")
}

model PeriodApplication {
  application    Application @relation(fields: [application_id], references: [id])
  application_id Int
  id             Int         @id @default(autoincrement())
  period         Period      @relation(fields: [period_id], references: [id])
  period_id      Int

  @@unique([period_id, application_id])
  @@index([application_id], map: "fk_period_application_application")
  @@index([id], map: "id")
  @@map("period_application")
}

model PeriodProgram {
  id       String @id @default(cuid())
  periodId Int    @map("period_id")
  unitId   Int    @map("unit_id")

  @@unique([periodId, unitId])
  @@index([unitId], map: "fk_period_program_unit")
  @@map("period_program")
}

model PeriodType {
  id         Int    @id @default(autoincrement()) @map("period_type_id")
  periodType String @map("period_type") @db.VarChar(50)

  @@map("period_type")
}

model PeriodUmbrella {
  admissionTerm   String    @map("admission_term") @db.VarChar(20)
  admissionYear   Int       @map("admission_year") @db.Year()
  higherFeeDate   DateTime? @map("higher_fee_date") @db.DateTime(0)
  id              Int       @id @default(autoincrement()) @map("period_id")
  lastPaymentDate DateTime? @map("last_payment_date") @db.DateTime(0)
  umbrellaName    String?   @map("umbrella_name") @db.VarChar(45)

  @@map("period_umbrella")
}

model PhoneScreen {
  applicationId   Int    @map("application_id")
  id              String @id @default(cuid())
  languageScreen  Int    @default(0) @map("language_screen") @db.TinyInt()
  reviewerId      Int    @map("reviewer_id")
  technicalScreen Int    @default(0) @map("technical_screen") @db.TinyInt()

  @@unique([applicationId, reviewerId])
  @@map("phone_screens")
}

model PositiveFactor {
  departmentId     Int    @map("department_id")
  id               Int    @id @default(autoincrement()) @map("positive_factor_index")
  positiveFactor   String @map("positive_factor") @db.VarChar(45)
  positiveFactorId Int    @map("positive_factor_id")

  @@map("positive_factor")
}

model Program {
  id            Int @id @default(autoincrement()) @map("unit_id")
  programTypeId Int @map("program_type_id")

  @@map("program")
}

model ProgramGroup {
  id                      Int     @id @default(autoincrement()) @map("program_group_id")
  periodId                Int     @map("period_id")
  programGroupDescription String? @map("program_group_description") @db.VarChar(45)
  programGroupName        String  @map("program_group_name") @db.VarChar(45)
  programGroupNameShort   String  @map("program_group_name_short") @db.VarChar(20)
  unitId                  Int     @map("unit_id")

  @@index([periodId], map: "fk_progam_group_period")
  @@map("program_group")
}

model ProgramGroupGroupType {
  id                 String @id @default(cuid())
  programGroupId     Int    @map("program_group_id")
  programGroupTypeId Int    @map("program_group_type_id")

  @@unique([programGroupId, programGroupTypeId])
  @@index([programGroupId], map: "fk_program_group_group_type_program_group")
  @@index([programGroupTypeId], map: "fk_program_group_group_type_program_group_type")
  @@map("program_group_group_type")
}

model ProgramGroupProgram {
  id             String @id @default(cuid())
  programGroupId Int    @map("program_group_id")
  unitId         Int    @map("unit_id")

  @@unique([programGroupId, unitId])
  @@index([unitId], map: "fk_program_group_program_program")
  @@index([programGroupId], map: "fk_program_group_program_program_group")
  @@index([unitId], map: "fk_program_group_program_unit")
  @@map("program_group_program")
}

model ProgramGroupRole {
  id             String @id @default(cuid())
  programGroupId Int    @map("program_group_id")
  roleId         Int    @map("role_id")
  usersId        Int    @map("users_id")

  @@unique([programGroupId, usersId, roleId])
  @@index([programGroupId], map: "fk_program_group_role_program_group")
  @@index([roleId], map: "fk_program_group_role_role")
  @@index([usersId], map: "fk_program_group_role_scs_user")
  @@map("program_group_role")
}

model ProgramGroupType {
  id                          Int     @id @default(autoincrement()) @map("program_group_type_id")
  programGroupTypeDescription String? @map("program_group_type_description") @db.VarChar(100)
  programGroupTypeName        String? @map("program_group_type_name") @db.VarChar(20)

  @@map("program_group_type")
}

model ProgramType {
  id          Int    @id @default(autoincrement()) @map("program_type_id")
  programType String @map("program_type") @db.VarChar(20)

  @@map("program_type")
}

model ProgramModel {
  baseprice                Decimal                  @default(75) @db.Decimal(10, 0)
  basepriceLate            Decimal?                 @default(75) @map("baseprice_late") @db.Decimal(10, 0)
  degree                   Degree                   @relation(fields: [degree_id], references: [id])
  degree_id                Int
  description              String?                  @db.Text()
  enabled                  String?                  @default("1") @db.Char(1)
  fieldsofstudy            Fieldsofstudy            @relation(fields: [fieldofstudy_id], references: [id])
  fieldofstudy_id          Int
  id                       Int                      @id @default(autoincrement())
  linkword                 String                   @default("in") @db.VarChar(20)
  luApplicationPrograms    LuApplicationProgram[]
  mlArea                   MlArea[]
  oraclestring             String?                  @db.VarChar(50)
  paymentItem              PaymentItem[]
  prank                    Int                      @default(0)
  programprice             Decimal                  @default(0.00) @db.Decimal(10, 2)
  programpriceLate         Decimal?                 @default(0.00) @map("programprice_late") @db.Decimal(10, 2)
  programsApplicationreqs  ProgramsApplicationreq[]
  registrationoraclestring String?                  @db.VarChar(50)
  url                      String?                  @db.VarChar(255)

  @@index([degree_id], map: "degree_id")
  @@index([fieldofstudy_id], map: "fieldofstudy_id")
  @@map("programs")
}

model ProgramsApplicationreq {
  applicationreqs    Applicationreq @relation(fields: [applicationreqs_id], references: [id])
  applicationreqs_id Int
  id                 Int            @id @default(autoincrement())
  programs           ProgramModel   @relation(fields: [programs_id], references: [id])
  programs_id        Int

  @@index([applicationreqs_id], map: "applicationreqs_id")
  @@index([programs_id], map: "programs_id")
  @@map("programs_applicationreqs")
}

model ProgramsUnit {
  id         String @id @default(cuid())
  programsId Int    @map("programs_id")
  unitId     Int    @map("unit_id")

  @@unique([programsId, unitId])
  @@map("programs_unit")
}

model PromotionHistory {
  application      Application                         @relation(fields: [application_id], references: [id])
  application_id   Int
  id               String                              @id @default(cuid())
  programId        Int                                 @map("program_id")
  promotion_method EnumPromotionHistoryPromotionMethod @default(default)
  round            Int                                 @default(0)
  statusTime       DateTime                            @default(now()) @map("status_time") @db.Timestamp(0)
  usersId          Int?                                @map("users_id")

  @@unique([application_id, programId, statusTime])
  @@map("promotion_history")
}

model PromotionHistoryCopy {
  applicationId    Int                                     @map("application_id")
  id               String                                  @id @default(cuid())
  programId        Int                                     @map("program_id")
  promotion_method EnumPromotionHistoryCopyPromotionMethod @default(default)
  round            Int                                     @default(0)
  statusTime       DateTime                                @default(now()) @map("status_time") @db.Timestamp(0)
  usersId          Int?                                    @map("users_id")

  @@unique([applicationId, programId, statusTime])
  @@map("promotion_history_copy")
}

model PromotionStatus {
  applicationId Int      @map("application_id")
  departmentId  Int      @map("department_id")
  id            String   @id @default(cuid())
  round         Int      @default(0)
  statusTime    DateTime @default(now()) @map("status_time") @db.Timestamp(0)

  @@unique([applicationId, departmentId])
  @@map("promotion_status")
}

model Publication {
  application    Application @relation(fields: [application_id], references: [id])
  application_id Int
  author         String?     @db.VarChar(250)
  citation       String?     @db.Text()
  datafileId     Int?        @map("datafile_id")
  forum          String?     @db.VarChar(300)
  id             Int         @id @default(autoincrement())
  status         String?     @db.VarChar(50)
  title          String?     @db.VarChar(200)
  typeField      String?     @map("type") @db.VarChar(15)
  typeOther      String?     @map("type_other") @db.VarChar(50)
  url            String?     @db.VarChar(255)

  @@index([application_id], map: "application_id")
  @@map("publication")
}

model Reclog {
  created DateTime @default(now()) @db.DateTime(0)
  id      Int      @id @default(autoincrement())
  ip      String?  @db.VarChar(50)
  message String?  @db.VarChar(255)

  @@index([ip], map: "ip")
  @@map("reclog")
}

model Recommend {
  application       Application @relation(fields: [application_id], references: [id])
  application_id    Int
  buckleyatupload   Int?        @db.TinyInt()
  cmuAffiliation    Int?        @map("cmu_affiliation")
  content           String?     @db.Text()
  datafileId        Int?        @map("datafile_id")
  id                Int         @id @default(autoincrement())
  lastReminderSent  DateTime?   @map("last_reminder_sent") @db.Date()
  recommendtype     Int         @default(0)
  recUserId         Int         @default(0) @map("rec_user_id")
  reminderSentCount Int         @default(0) @map("reminder_sent_count")
  submitted         Boolean     @default(false)

  @@index([application_id], map: "application_id")
  @@index([datafileId], map: "datafile_id")
  @@index([recUserId], map: "rec_user_id")
  @@index([recommendtype], map: "recommendtype")
  @@map("recommend")
}

model Recommendationtype {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(50)

  @@map("recommendationtypes")
}

model RecommenderInfo {
  affiliation             String  @db.VarChar(250)
  id                      Int     @id @default(autoincrement()) @map("recommend_id")
  phone                   String  @db.VarChar(20)
  recUserId               Int     @map("rec_user_id")
  relationshipToApplicant String? @map("relationship_to_applicant") @db.VarChar(255)
  title                   String  @db.VarChar(100)

  @@index([recUserId], map: "rec_user_id")
  @@map("recommender_info")
}

model Recommendform {
  formId      Int     @map("form_id")
  id          Int     @id @default(autoincrement())
  questionId  Int     @map("question_id")
  questionKey Int?    @map("question_key")
  recommendId Int     @map("recommend_id")
  response    String? @db.Text()

  @@index([recommendId], map: "recommend_id")
  @@map("recommendforms")
}

model RecyclableSelection {
  applicationId      Int @map("application_id")
  departmentId       Int @map("department_id")
  id                 Int @id @default(autoincrement())
  luUsersUsertypesId Int @map("lu_users_usertypes_id")
  periodId           Int @map("period_id")
  usersId            Int @map("users_id")

  @@map("recyclable_selection")
}

model RegistrationFeePayment {
  application       Application                             @relation(fields: [application_id], references: [id])
  application_id    Int
  departmentId      Int                                     @map("department_id")
  id                Int                                     @id @default(autoincrement())
  lastModTime       DateTime                                @default(now()) @map("last_mod_time") @db.Timestamp(0)
  lastModUserId     Int                                     @map("last_mod_user_id")
  paymentAmount     Decimal                                 @map("payment_amount") @db.Decimal(6, 2)
  paymentIntentDate DateTime                                @map("payment_intent_date") @db.DateTime(0)
  payment_status    EnumRegistrationFeePaymentPaymentStatus @default(pending)
  paymentType       Int                                     @map("payment_type") @db.TinyInt()

  @@index([application_id, departmentId], map: "application_id")
  @@index([departmentId], map: "department_id")
  @@map("registration_fee_payment")
}

model RegistrationFeeStatus {
  amount         Decimal     @db.Decimal(10, 2)
  application    Application @relation(fields: [application_id], references: [id])
  application_id Int
  departmentId   Int         @map("department_id")
  id             Int         @id @default(autoincrement())
  paid           Boolean     @default(false)
  waived         Boolean     @default(false)

  @@unique([application_id, departmentId], map: "application_id")
  @@index([departmentId], map: "department_id")
  @@map("registration_fee_status")
}

model RejectionWaiver {
  id                      String @id @default(cuid())
  luApplicationProgramsId Int    @default(0) @map("lu_application_programs_id")
  permittedProgramId      Int    @default(0) @map("permitted_program_id")
  waived                  Int?

  @@unique([luApplicationProgramsId, permittedProgramId])
  @@map("rejection_waivers")
}

model RequestsAccess {
  createdDate DateTime @default(now()) @db.DateTime(0)
  id          Int      @id @default(autoincrement())
  user        String?  @db.VarChar(200)

  @@map("requestsAccess")
}

model Revgroup {
  departmentId Int    @map("department_id")
  groupType    Int    @default(1) @map("group_type")
  id           Int    @id @default(autoincrement())
  name         String @db.VarChar(50)

  @@index([departmentId], map: "department_id")
  @@map("revgroup")
}

model Review {
  admitVote          String?     @map("admit_vote") @db.VarChar(25)
  adviseTime         String      @default("") @map("advise_time") @db.VarChar(255)
  application        Application @relation(fields: [application_id], references: [id])
  application_id     Int
  background         String?     @db.Text()
  brilliance         String?     @db.Text()
  comments           String?     @db.Text()
  commitMoney        String      @default("") @map("commit_money") @db.VarChar(255)
  committeeVote      String?     @map("committee_vote") @db.Char(1)
  departmentId       Int?        @map("department_id") @db.UnsignedTinyInt()
  facVote            String?     @default("0") @map("fac_vote") @db.Char(1)
  fundSource         String      @default("") @map("fund_source") @db.VarChar(255)
  grades             String?     @db.Text()
  gradName           String      @map("grad_name") @db.VarChar(255)
  id                 Int         @id @default(autoincrement())
  impressed          String?     @db.Text()
  interview          String?     @db.VarChar(255)
  mseExperienceLen   String?     @map("mse_experience_len") @db.VarChar(50)
  otherInterest      String?     @map("other_interest") @db.Text()
  pertinentInfo      String      @map("pertinent_info") @db.Text()
  point              Decimal?    @db.Decimal(5, 3)
  point2             Decimal?    @db.Decimal(5, 3)
  point2Certainty    Decimal?    @map("point2_certainty") @db.Decimal(5, 3)
  pointCertainty     Decimal?    @map("point_certainty") @db.Decimal(5, 3)
  privateComments    String?     @map("private_comments") @db.Text()
  publications       String?     @db.Text()
  recommendations    String?     @db.Text()
  recruited          Boolean?
  reviewerId         Int         @default(0) @map("reviewer_id")
  round              Int?        @default(1) @db.UnsignedInt()
  round2             Int?
  round3             Int?
  rrank              String?     @db.Char(1)
  statement          String?     @db.Text()
  supplementalReview Int?        @map("supplemental_review")
  touched            String      @default("0") @db.Char(1)
  updated            DateTime?   @default(now()) @db.DateTime(0)

  @@index([application_id], map: "application_id")
  @@index([reviewerId], map: "reviewer_id")
  @@index([round], map: "round")
  @@map("review")
}

model ReviewIni {
  academicComments        String  @map("academic_comments") @db.Text()
  academicProgramComments String  @map("academic_program_comments") @db.Text()
  academicRating          Int     @map("academic_rating") @db.UnsignedTinyInt()
  additionalComments      String? @map("additional_comments") @db.Text()
  alternativeProgram      Int?    @map("alternative_program") @db.UnsignedTinyInt()
  applicationId           Int     @default(0) @map("application_id")
  departmentId            Int     @map("department_id")
  id                      Int     @id @default(autoincrement())
  leadershipComments      String? @map("leadership_comments") @db.Text()
  leadershipRating        Int?    @map("leadership_rating") @db.UnsignedTinyInt()
  overallRating           Int     @map("overall_rating") @db.UnsignedTinyInt()
  researchComments        String? @map("research_comments") @db.Text()
  researchRating          Int?    @map("research_rating") @db.UnsignedTinyInt()
  reviewerId              Int     @default(0) @map("reviewer_id")
  round                   Int?    @db.UnsignedTinyInt()
  technicalComments       String  @map("technical_comments") @db.Text()
  technicalRating         Int     @map("technical_rating") @db.UnsignedTinyInt()
  ugProgramComments       String? @map("ug_program_comments") @db.Text()
  workExperienceComments  String? @map("work_experience_comments") @db.Text()
  workExperienceRating    Int?    @map("work_experience_rating") @db.UnsignedTinyInt()

  @@index([applicationId], map: "application_id")
  @@index([reviewerId], map: "reviewer_id")
  @@index([alternativeProgram], map: "round")
  @@map("review_ini")
}

model ReviewIniAdmin {
  applicationId Int    @default(0) @map("application_id")
  comments      String @db.Text()
  departmentId  Int    @map("department_id")
  id            Int    @id @default(autoincrement())
  reviewerId    Int    @default(0) @map("reviewer_id")
  round         Int?   @db.UnsignedTinyInt()

  @@index([applicationId], map: "application_id")
  @@index([reviewerId], map: "reviewer_id")
  @@map("review_ini_admin")
}

model ReviewIniAlternativeProgram {
  id    Int    @id @default(autoincrement()) @db.UnsignedTinyInt()
  value String @db.VarChar(100)

  @@map("review_ini_alternative_program")
  @@ignore()
}

model ReviewIniExperienceScale {
  id    Int    @id @default(autoincrement()) @db.UnsignedTinyInt()
  value String @db.VarChar(100)

  @@map("review_ini_experience_scale")
  @@ignore()
}

model ReviewIniOverallScale {
  id    Int    @id @default(autoincrement()) @db.UnsignedTinyInt()
  value String @db.VarChar(100)

  @@map("review_ini_overall_scale")
  @@ignore()
}

model ReviewPositiveFactor {
  id               String @id @default(cuid())
  positiveFactorId Int    @map("positive_factor_id")
  reviewId         Int    @map("review_id")

  @@unique([reviewId, positiveFactorId])
  @@index([positiveFactorId], map: "risk_factor_id")
  @@map("review_positive_factor")
}

model ReviewPositiveFactorOther {
  id                  Int    @id @default(autoincrement()) @map("review_id")
  positiveFactorOther String @map("positive_factor_other") @db.VarChar(45)

  @@map("review_positive_factor_other")
}

model ReviewRiskFactor {
  id           String @id @default(cuid())
  reviewId     Int    @map("review_id")
  riskFactorId Int    @map("risk_factor_id")

  @@unique([reviewId, riskFactorId])
  @@index([riskFactorId], map: "risk_factor_id")
  @@map("review_risk_factor")
}

model ReviewRiskFactorOther {
  id              Int    @id @default(autoincrement()) @map("review_id")
  riskFactorOther String @map("risk_factor_other") @db.VarChar(45)

  @@map("review_risk_factor_other")
}

model ReviewerPreference {
  id       Int  @id @default(autoincrement()) @map("reviewerId")
  viewMode Int? @db.TinyInt()

  @@map("reviewer_preference")
}

model RiskFactor {
  arrayIndex   Int?   @map("array_index")
  departmentId Int?   @map("department_id")
  id           Int    @id @default(autoincrement()) @map("risk_factor_id")
  riskFactor   String @map("risk_factor") @db.VarChar(45)

  @@map("risk_factor")
}

model RissFunding {
  application     Application @relation(fields: [application_id], references: [id])
  application_id  Int
  directFunding   Boolean     @default(false) @map("direct_funding")
  externalAmount  String?     @map("external_amount") @db.VarChar(255)
  externalFunding Boolean     @default(false) @map("external_funding")
  externalSource  String?     @map("external_source") @db.VarChar(255)
  id              Int         @id @default(autoincrement())
  reuScholarship  Boolean     @default(false) @map("reu_scholarship")

  @@index([application_id], map: "application_id")
  @@map("riss_funding")
}

model RissMcnair {
  application Application? @relation(fields: [appId], references: [id])
  appId       Int?
  contact     String?      @db.Text()
  id          Int          @id @default(autoincrement())
  site        String?      @db.Text()

  @@index([appId], map: "appId")
  @@map("riss_mcnair")
}

model School {
  id   Int    @id @default(autoincrement())
  name String @default("") @db.VarChar(100)

  @@map("schools")
}

model ScsUser {
  andrewId String? @map("andrew_id") @db.VarChar(45)
  cmuGuid  String? @map("cmu_guid") @db.VarChar(45)
  csId     String? @map("cs_id") @db.VarChar(45)
  eceId    String? @map("ece_id") @db.VarChar(45)
  id       Int     @id @default(autoincrement()) @map("scs_user_id")
  qatarId  String? @map("qatar_id") @db.VarChar(45)
  usersId  Int     @unique @map("users_id")

  @@map("scs_user")
}

model ScsUserWebiso {
  id        String @id @default(cuid())
  scsUserId Int    @map("scs_user_id")
  webiso    String @db.VarChar(100)

  @@unique([scsUserId, webiso])
  @@index([webiso], map: "webiso")
  @@map("scs_user_webiso")
}

model SearchTextTest {
  applicationId   String  @default("0") @map("application_id") @db.VarChar(50)
  applicationText String? @map("application_text") @db.LongText()
  guid            Int
  id              String  @id @default(cuid())

  @@index([applicationId], map: "application_id")
  @@index([applicationText(length: 1000)], map: "application_text")
  @@map("searchText_test")
  @@ignore()
}

model SelfGender {
  genderIndex Int?
  id          Int  @id @default(autoincrement())
  userId      Int

  @@index([userId], map: "userId")
  @@map("selfGender")
}

model SemPreviousCourse {
  applicationId Int    @map("application_id")
  courseName    String @map("course_name") @db.VarChar(255)
  courseYear    Int    @map("course_year")
  id            Int    @id @default(autoincrement()) @map("sem_previous_course_id")

  @@map("sem_previous_course")
}

model SlateAppSchool {
  first                                String? @map("First") @db.VarChar(100)
  id                                   String  @id @default(cuid()) @map("Application_Slate_GUID") @db.VarChar(100)
  last                                 String? @map("Last") @db.VarChar(100)
  middle                               String? @map("Middle") @db.VarChar(100)
  prefix                               String? @map("Prefix") @db.VarChar(100)
  school1Awards                        String? @map("School_1_Awards") @db.VarChar(100)
  school1City                          String? @map("School_1_City") @db.VarChar(100)
  school1ClassRankNumeric              String? @map("School_1_Class_Rank_Numeric") @db.VarChar(100)
  school1ClassRankXOutOfY              String? @map("School_1_Class_Rank_X_out_of_Y") @db.VarChar(100)
  school1ClassSizeNumeric              String? @map("School_1_Class_Size_Numeric") @db.VarChar(100)
  school1Code                          String? @map("School_1_Code") @db.VarChar(100)
  school1Confirmed                     String? @map("School_1_Confirmed") @db.VarChar(100)
  school1Country                       String? @map("School_1_Country") @db.VarChar(100)
  school1Created                       String? @map("School_1_Created") @db.VarChar(100)
  school1Degree                        String? @map("School_1_Degree") @db.VarChar(100)
  school1DegreeConferred               String? @map("School_1_Degree_Conferred") @db.VarChar(100)
  school1Field                         String? @map("School_1_Field") @db.VarChar(100)
  school1From                          String? @map("School_1_From") @db.VarChar(100)
  school1Gpa                           String? @map("School_1_GPA") @db.VarChar(100)
  school1GpaConverted                  String? @map("School_1_GPA_Converted") @db.VarChar(100)
  school1GpaRecalculated               String? @map("School_1_GPA_Recalculated") @db.VarChar(100)
  school1GpaScale                      String? @map("School_1_GPA_Scale") @db.VarChar(100)
  school1Honors                        String? @map("School_1_Honors") @db.VarChar(100)
  school1Hours                         String? @map("School_1_Hours") @db.VarChar(100)
  school1Institution                   String? @map("School_1_Institution") @db.VarChar(100)
  school1Language                      String? @map("School_1_Language") @db.VarChar(100)
  school1Major                         String? @map("School_1_Major") @db.VarChar(100)
  school1Major1                        String? @map("School_1_Major_1") @db.VarChar(100)
  school1Major2                        String? @map("School_1_Major_2") @db.VarChar(100)
  school1Minor                         String? @map("School_1_Minor") @db.VarChar(100)
  school1Region                        String? @map("School_1_Region") @db.VarChar(100)
  school1To                            String? @map("School_1_To") @db.VarChar(100)
  school1Type                          String? @map("School_1_Type") @db.VarChar(100)
  school1Updated                       String? @map("School_1_Updated") @db.VarChar(100)
  school1Website                       String? @map("School_1_Website") @db.VarChar(100)
  school2Awards                        String? @map("School_2_Awards") @db.VarChar(100)
  school2City                          String? @map("School_2_City") @db.VarChar(100)
  school2ClassRankNumeric              String? @map("School_2_Class_Rank_Numeric") @db.VarChar(100)
  school2ClassRankXOutOfY              String? @map("School_2_Class_Rank_X_out_of_Y") @db.VarChar(100)
  school2ClassSizeNumeric              String? @map("School_2_Class_Size_Numeric") @db.VarChar(100)
  school2Code                          String? @map("School_2_Code") @db.VarChar(100)
  school2Confirmed                     String? @map("School_2_Confirmed") @db.VarChar(100)
  school2Country                       String? @map("School_2_Country") @db.VarChar(100)
  school2Created                       String? @map("School_2_Created") @db.VarChar(100)
  school2Degree                        String? @map("School_2_Degree") @db.VarChar(100)
  school2DegreeConferred               String? @map("School_2_Degree_Conferred") @db.VarChar(100)
  school2Field                         String? @map("School_2_Field") @db.VarChar(100)
  school2From                          String? @map("School_2_From") @db.VarChar(100)
  school2Gpa                           String? @map("School_2_GPA") @db.VarChar(100)
  school2GpaConverted                  String? @map("School_2_GPA_Converted") @db.VarChar(100)
  school2GpaRecalculated               String? @map("School_2_GPA_Recalculated") @db.VarChar(100)
  school2GpaScale                      String? @map("School_2_GPA_Scale") @db.VarChar(100)
  school2Honors                        String? @map("School_2_Honors") @db.VarChar(100)
  school2Hours                         String? @map("School_2_Hours") @db.VarChar(100)
  school2Institution                   String? @map("School_2_Institution") @db.VarChar(100)
  school2Language                      String? @map("School_2_Language") @db.VarChar(100)
  school2Major                         String? @map("School_2_Major") @db.VarChar(100)
  school2Major1                        String? @map("School_2_Major_1") @db.VarChar(100)
  school2Major2                        String? @map("School_2_Major_2") @db.VarChar(100)
  school2Minor                         String? @map("School_2_Minor") @db.VarChar(100)
  school2Region                        String? @map("School_2_Region") @db.VarChar(100)
  school2To                            String? @map("School_2_To") @db.VarChar(100)
  school2Type                          String? @map("School_2_Type") @db.VarChar(100)
  school2Updated                       String? @map("School_2_Updated") @db.VarChar(100)
  school2Website                       String? @map("School_2_Website") @db.VarChar(100)
  school3Awards                        String? @map("School_3_Awards") @db.VarChar(100)
  school3City                          String? @map("School_3_City") @db.VarChar(100)
  school3ClassRankNumeric              String? @map("School_3_Class_Rank_Numeric") @db.VarChar(100)
  school3ClassRankXOutOfY              String? @map("School_3_Class_Rank_X_out_of_Y") @db.VarChar(100)
  school3ClassSizeNumeric              String? @map("School_3_Class_Size_Numeric") @db.VarChar(100)
  school3Code                          String? @map("School_3_Code") @db.VarChar(100)
  school3Confirmed                     String? @map("School_3_Confirmed") @db.VarChar(100)
  school3Country                       String? @map("School_3_Country") @db.VarChar(100)
  school3Created                       String? @map("School_3_Created") @db.VarChar(100)
  school3Degree                        String? @map("School_3_Degree") @db.VarChar(100)
  school3DegreeConferred               String? @map("School_3_Degree_Conferred") @db.VarChar(100)
  school3Field                         String? @map("School_3_Field") @db.VarChar(100)
  school3From                          String? @map("School_3_From") @db.VarChar(100)
  school3Gpa                           String? @map("School_3_GPA") @db.VarChar(100)
  school3GpaConverted                  String? @map("School_3_GPA_Converted") @db.VarChar(100)
  school3GpaRecalculated               String? @map("School_3_GPA_Recalculated") @db.VarChar(100)
  school3GpaScale                      String? @map("School_3_GPA_Scale") @db.VarChar(100)
  school3Honors                        String? @map("School_3_Honors") @db.VarChar(100)
  school3Hours                         String? @map("School_3_Hours") @db.VarChar(100)
  school3Institution                   String? @map("School_3_Institution") @db.VarChar(100)
  school3Language                      String? @map("School_3_Language") @db.VarChar(100)
  school3Major                         String? @map("School_3_Major") @db.VarChar(100)
  school3Major1                        String? @map("School_3_Major_1") @db.VarChar(100)
  school3Major2                        String? @map("School_3_Major_2") @db.VarChar(100)
  school3Minor                         String? @map("School_3_Minor") @db.VarChar(100)
  school3Region                        String? @map("School_3_Region") @db.VarChar(100)
  school3To                            String? @map("School_3_To") @db.VarChar(100)
  school3Type                          String? @map("School_3_Type") @db.VarChar(100)
  school3Updated                       String? @map("School_3_Updated") @db.VarChar(100)
  school3Website                       String? @map("School_3_Website") @db.VarChar(100)
  school4Awards                        String? @map("School_4_Awards") @db.VarChar(100)
  school4City                          String? @map("School_4_City") @db.VarChar(100)
  school4ClassRankNumeric              String? @map("School_4_Class_Rank_Numeric") @db.VarChar(100)
  school4ClassRankXOutOfY              String? @map("School_4_Class_Rank_X_out_of_Y") @db.VarChar(100)
  school4ClassSizeNumeric              String? @map("School_4_Class_Size_Numeric") @db.VarChar(100)
  school4Code                          String? @map("School_4_Code") @db.VarChar(100)
  school4Confirmed                     String? @map("School_4_Confirmed") @db.VarChar(100)
  school4Country                       String? @map("School_4_Country") @db.VarChar(100)
  school4Created                       String? @map("School_4_Created") @db.VarChar(100)
  school4Degree                        String? @map("School_4_Degree") @db.VarChar(100)
  school4DegreeConferred               String? @map("School_4_Degree_Conferred") @db.VarChar(100)
  school4Field                         String? @map("School_4_Field") @db.VarChar(100)
  school4From                          String? @map("School_4_From") @db.VarChar(100)
  school4Gpa                           String? @map("School_4_GPA") @db.VarChar(100)
  school4GpaConverted                  String? @map("School_4_GPA_Converted") @db.VarChar(100)
  school4GpaRecalculated               String? @map("School_4_GPA_Recalculated") @db.VarChar(100)
  school4GpaScale                      String? @map("School_4_GPA_Scale") @db.VarChar(100)
  school4Honors                        String? @map("School_4_Honors") @db.VarChar(100)
  school4Hours                         String? @map("School_4_Hours") @db.VarChar(100)
  school4Institution                   String? @map("School_4_Institution") @db.VarChar(100)
  school4Language                      String? @map("School_4_Language") @db.VarChar(100)
  school4Major                         String? @map("School_4_Major") @db.VarChar(100)
  school4Major1                        String? @map("School_4_Major_1") @db.VarChar(100)
  school4Major2                        String? @map("School_4_Major_2") @db.VarChar(100)
  school4Minor                         String? @map("School_4_Minor") @db.VarChar(100)
  school4Region                        String? @map("School_4_Region") @db.VarChar(100)
  school4To                            String? @map("School_4_To") @db.VarChar(100)
  school4Type                          String? @map("School_4_Type") @db.VarChar(100)
  school4Updated                       String? @map("School_4_Updated") @db.VarChar(100)
  school4Website                       String? @map("School_4_Website") @db.VarChar(100)
  school5Awards                        String? @map("School_5_Awards") @db.VarChar(100)
  school5City                          String? @map("School_5_City") @db.VarChar(100)
  school5ClassRankNumeric              String? @map("School_5_Class_Rank_Numeric") @db.VarChar(100)
  school5ClassRankXOutOfY              String? @map("School_5_Class_Rank_X_out_of_Y") @db.VarChar(100)
  school5ClassSizeNumeric              String? @map("School_5_Class_Size_Numeric") @db.VarChar(100)
  school5Code                          String? @map("School_5_Code") @db.VarChar(100)
  school5Confirmed                     String? @map("School_5_Confirmed") @db.VarChar(100)
  school5Country                       String? @map("School_5_Country") @db.VarChar(100)
  school5Created                       String? @map("School_5_Created") @db.VarChar(100)
  school5Degree                        String? @map("School_5_Degree") @db.VarChar(100)
  school5DegreeConferred               String? @map("School_5_Degree_Conferred") @db.VarChar(100)
  school5Field                         String? @map("School_5_Field") @db.VarChar(100)
  school5From                          String? @map("School_5_From") @db.VarChar(100)
  school5Gpa                           String? @map("School_5_GPA") @db.VarChar(100)
  school5GpaConverted                  String? @map("School_5_GPA_Converted") @db.VarChar(100)
  school5GpaRecalculated               String? @map("School_5_GPA_Recalculated") @db.VarChar(100)
  school5GpaScale                      String? @map("School_5_GPA_Scale") @db.VarChar(100)
  school5Honors                        String? @map("School_5_Honors") @db.VarChar(100)
  school5Hours                         String? @map("School_5_Hours") @db.VarChar(100)
  school5Institution                   String? @map("School_5_Institution") @db.VarChar(100)
  school5Language                      String? @map("School_5_Language") @db.VarChar(100)
  school5Major                         String? @map("School_5_Major") @db.VarChar(100)
  school5Major1                        String? @map("School_5_Major_1") @db.VarChar(100)
  school5Major2                        String? @map("School_5_Major_2") @db.VarChar(100)
  school5Minor                         String? @map("School_5_Minor") @db.VarChar(100)
  school5Region                        String? @map("School_5_Region") @db.VarChar(100)
  school5To                            String? @map("School_5_To") @db.VarChar(100)
  school5Type                          String? @map("School_5_Type") @db.VarChar(100)
  school5Updated                       String? @map("School_5_Updated") @db.VarChar(100)
  school5Website                       String? @map("School_5_Website") @db.VarChar(100)
  schoolNum1NumberOfActiveApplications String? @map("School_num1_Number_of_Active_Applications") @db.VarChar(100)
  schoolNum1Priority                   String? @map("School_num1_Priority") @db.VarChar(100)
  schoolNum2Priority                   String? @map("School_num2_Priority") @db.VarChar(100)
  schoolNum3Priority                   String? @map("School_num3_Priority") @db.VarChar(100)
  schoolNum4Priority                   String? @map("School_num4_Priority") @db.VarChar(100)
  schoolNum5Priority                   String? @map("School_num5_Priority") @db.VarChar(100)

  @@map("slate_app_schools")
}

model SlateApp {
  applicationStatus                String? @map("Application_Status") @db.VarChar(255)
  appSubmittedDate                 String? @map("App_Submitted_Date") @db.VarChar(255)
  birthdate                        String? @map("Birthdate") @db.VarChar(255)
  citizenshipStatus                String? @map("Citizenship_Status") @db.VarChar(255)
  decisionConfirmedExportCode      String? @map("Decision_Confirmed_Export_Code") @db.VarChar(255)
  email                            String? @map("Email") @db.VarChar(255)
  emailAddress                     String? @map("Email_Address") @db.VarChar(255)
  first                            String? @map("First") @db.VarChar(255)
  hispanic                         String? @map("Hispanic") @db.VarChar(255)
  id                               String  @id @default(cuid()) @map("Application_Slate_GUID") @db.VarChar(255)
  ipedsClassification              String? @map("IPEDS_Classification") @db.VarChar(255)
  language                         String? @map("Language") @db.VarChar(255)
  last                             String? @map("Last") @db.VarChar(255)
  mailingAddressCity               String? @map("Mailing_Address_City") @db.VarChar(255)
  mailingAddressCountryFipsCode    String? @map("Mailing_Address_Country_FIPS_Code") @db.VarChar(255)
  mailingAddressCountryIso2Code    String? @map("Mailing_Address_Country_ISO_2_Code") @db.VarChar(255)
  mailingAddressCountryIso3Code    String? @map("Mailing_Address_Country_ISO_3_Code") @db.VarChar(255)
  mailingAddressCountryName        String? @map("Mailing_Address_Country_Name") @db.VarChar(255)
  mailingAddressCountrySisExport   String? @map("Mailing_Address_Country_SIS_Export") @db.VarChar(255)
  mailingAddressGeomarket          String? @map("Mailing_Address_Geomarket") @db.VarChar(255)
  mailingAddressPostalCode         String? @map("Mailing_Address_Postal_Code") @db.VarChar(255)
  mailingAddressRegion             String? @map("Mailing_Address_Region") @db.VarChar(255)
  mailingAddressStreet1            String? @map("Mailing_Address_Street_1") @db.VarChar(255)
  mailingAddressStreet2            String? @map("Mailing_Address_Street_2") @db.VarChar(255)
  mailingAddressStreet3            String? @map("Mailing_Address_Street_3") @db.VarChar(255)
  mailingAddressValidFromDate      String? @map("Mailing_Address_Valid_From_Date") @db.VarChar(255)
  mailingAddressValidToDate        String? @map("Mailing_Address_Valid_To_Date") @db.VarChar(255)
  middle                           String? @map("Middle") @db.VarChar(255)
  mobilePhoneNumber                String? @map("Mobile_Phone_Number") @db.VarChar(255)
  permanentAddressCity             String? @map("Permanent_Address_City") @db.VarChar(255)
  permanentAddressCountry          String? @map("Permanent_Address_Country") @db.VarChar(255)
  permanentAddressCountryFipsCode  String? @map("Permanent_Address_Country_FIPS_Code") @db.VarChar(255)
  permanentAddressCountryIso2Code  String? @map("Permanent_Address_Country_ISO_2_Code") @db.VarChar(255)
  permanentAddressCountryIso3Code  String? @map("Permanent_Address_Country_ISO_3_Code") @db.VarChar(255)
  permanentAddressCountrySisExport String? @map("Permanent_Address_Country_SIS_Export") @db.VarChar(255)
  permanentAddressGeomarket        String? @map("Permanent_Address_Geomarket") @db.VarChar(255)
  permanentAddressPostalCode       String? @map("Permanent_Address_Postal_Code") @db.VarChar(255)
  permanentAddressRegion           String? @map("Permanent_Address_Region") @db.VarChar(255)
  permanentAddressStreet1          String? @map("Permanent_Address_Street_1") @db.VarChar(255)
  permanentAddressStreet2          String? @map("Permanent_Address_Street_2") @db.VarChar(255)
  permanentAddressStreet3          String? @map("Permanent_Address_Street_3") @db.VarChar(255)
  personalWebSite                  String? @map("Personal_Web_Site") @db.VarChar(255)
  phoneNumber                      String? @map("Phone_Number") @db.VarChar(255)
  prefix                           String? @map("Prefix") @db.VarChar(255)
  primaryCitizenship               String? @map("Primary_Citizenship") @db.VarChar(255)
  race                             String? @map("Race") @db.VarChar(255)
  reference1Waiver                 String? @map("Reference_1_Waiver") @db.VarChar(255)
  reference2Waiver                 String? @map("Reference_2_Waiver") @db.VarChar(255)
  reference3Waiver                 String? @map("Reference_3_Waiver") @db.VarChar(255)
  roundExportCode                  String? @map("Round_Export_Code") @db.VarChar(255)
  secondaryCitizenship             String? @map("Secondary_Citizenship") @db.VarChar(255)
  sex                              String? @map("Sex") @db.VarChar(255)
  suffix                           String? @map("Suffix") @db.VarChar(255)

  @@map("slate_apps")
}

model SlateAppsMseReviewed {
  applicationStatus                String? @map("Application_Status") @db.VarChar(255)
  appSubmittedDate                 String? @map("App_Submitted_Date") @db.VarChar(255)
  birthdate                        String? @map("Birthdate") @db.VarChar(255)
  citizenshipStatus                String? @map("Citizenship_Status") @db.VarChar(255)
  decisionConfirmedExportCode      String? @map("Decision_Confirmed_Export_Code") @db.VarChar(255)
  email                            String? @map("Email") @db.VarChar(255)
  emailAddress                     String? @map("Email_Address") @db.VarChar(255)
  first                            String? @map("First") @db.VarChar(255)
  hispanic                         String? @map("Hispanic") @db.VarChar(255)
  id                               String  @id @default(cuid()) @map("Application_Slate_GUID") @db.VarChar(255)
  ipedsClassification              String? @map("IPEDS_Classification") @db.VarChar(255)
  language                         String? @map("Language") @db.VarChar(255)
  last                             String? @map("Last") @db.VarChar(255)
  mailingAddressCity               String? @map("Mailing_Address_City") @db.VarChar(255)
  mailingAddressCountryFipsCode    String? @map("Mailing_Address_Country_FIPS_Code") @db.VarChar(255)
  mailingAddressCountryIso2Code    String? @map("Mailing_Address_Country_ISO_2_Code") @db.VarChar(255)
  mailingAddressCountryIso3Code    String? @map("Mailing_Address_Country_ISO_3_Code") @db.VarChar(255)
  mailingAddressCountryName        String? @map("Mailing_Address_Country_Name") @db.VarChar(255)
  mailingAddressCountrySisExport   String? @map("Mailing_Address_Country_SIS_Export") @db.VarChar(255)
  mailingAddressGeomarket          String? @map("Mailing_Address_Geomarket") @db.VarChar(255)
  mailingAddressPostalCode         String? @map("Mailing_Address_Postal_Code") @db.VarChar(255)
  mailingAddressRegion             String? @map("Mailing_Address_Region") @db.VarChar(255)
  mailingAddressStreet1            String? @map("Mailing_Address_Street_1") @db.VarChar(255)
  mailingAddressStreet2            String? @map("Mailing_Address_Street_2") @db.VarChar(255)
  mailingAddressStreet3            String? @map("Mailing_Address_Street_3") @db.VarChar(255)
  mailingAddressValidFromDate      String? @map("Mailing_Address_Valid_From_Date") @db.VarChar(255)
  mailingAddressValidToDate        String? @map("Mailing_Address_Valid_To_Date") @db.VarChar(255)
  middle                           String? @map("Middle") @db.VarChar(255)
  mobilePhoneNumber                String? @map("Mobile_Phone_Number") @db.VarChar(255)
  permanentAddressCity             String? @map("Permanent_Address_City") @db.VarChar(255)
  permanentAddressCountry          String? @map("Permanent_Address_Country") @db.VarChar(255)
  permanentAddressCountryFipsCode  String? @map("Permanent_Address_Country_FIPS_Code") @db.VarChar(255)
  permanentAddressCountryIso2Code  String? @map("Permanent_Address_Country_ISO_2_Code") @db.VarChar(255)
  permanentAddressCountryIso3Code  String? @map("Permanent_Address_Country_ISO_3_Code") @db.VarChar(255)
  permanentAddressCountrySisExport String? @map("Permanent_Address_Country_SIS_Export") @db.VarChar(255)
  permanentAddressGeomarket        String? @map("Permanent_Address_Geomarket") @db.VarChar(255)
  permanentAddressPostalCode       String? @map("Permanent_Address_Postal_Code") @db.VarChar(255)
  permanentAddressRegion           String? @map("Permanent_Address_Region") @db.VarChar(255)
  permanentAddressStreet1          String? @map("Permanent_Address_Street_1") @db.VarChar(255)
  permanentAddressStreet2          String? @map("Permanent_Address_Street_2") @db.VarChar(255)
  permanentAddressStreet3          String? @map("Permanent_Address_Street_3") @db.VarChar(255)
  personalWebSite                  String? @map("Personal_Web_Site") @db.VarChar(255)
  phoneNumber                      String? @map("Phone_Number") @db.VarChar(255)
  prefix                           String? @map("Prefix") @db.VarChar(255)
  primaryCitizenship               String? @map("Primary_Citizenship") @db.VarChar(255)
  race                             String? @map("Race") @db.VarChar(255)
  reference1Waiver                 String? @map("Reference_1_Waiver") @db.VarChar(255)
  reference2Waiver                 String? @map("Reference_2_Waiver") @db.VarChar(255)
  reference3Waiver                 String? @map("Reference_3_Waiver") @db.VarChar(255)
  roundExportCode                  String? @map("Round_Export_Code") @db.VarChar(255)
  secondaryCitizenship             String? @map("Secondary_Citizenship") @db.VarChar(255)
  sex                              String? @map("Sex") @db.VarChar(255)
  suffix                           String? @map("Suffix") @db.VarChar(255)

  @@map("slate_apps_mse_reviewed")
}

model SlateAwAppId {
  awAppId String @map("aw_app_id") @db.VarChar(255)
  id      String @id @default(cuid()) @map("Application_Slate_GUID") @db.VarChar(255)

  @@index([awAppId], map: "aw_app_id")
  @@map("slate_aw_app_id")
}

model SlateCodility {
  codilityCloseDate          String? @map("Codility_Close_Date") @db.VarChar(255)
  codilityCreateDate         String? @map("Codility_Create_Date") @db.VarChar(255)
  codilityIpAddresses        String? @map("Codility_IP_Addresses") @db.VarChar(255)
  codilityMaxScore           String? @map("Codility_Max_Score") @db.VarChar(255)
  codilityPercentCorrectness String? @map("Codility_Percent_Correctness") @db.VarChar(255)
  codilityPercentPerformance String? @map("Codility_Percent_Performance") @db.VarChar(255)
  codilityPercentTotalScore  String? @map("Codility_Percent_Total_Score") @db.VarChar(255)
  codilityScore              String? @map("Codility_Score") @db.VarChar(255)
  codilitySimilarity         String? @map("Codility_Similarity") @db.VarChar(255)
  codilityStartDate          String? @map("Codility_Start_Date") @db.VarChar(255)
  codilityTask1Correctness   String? @map("Codility_Task_1_Correctness") @db.VarChar(255)
  codilityTask1Difficulty    String? @map("Codility_Task_1_Difficulty") @db.VarChar(255)
  codilityTask1Language      String? @map("Codility_Task_1_language") @db.VarChar(255)
  codilityTask1Name          String? @map("Codility_Task_1_Name") @db.VarChar(255)
  codilityTask1Performance   String? @map("Codility_Task_1_Performance") @db.VarChar(255)
  codilityTask1Score         String? @map("Codility_Task_1_Score") @db.VarChar(255)
  codilityTask2Correctness   String? @map("Codility_Task_2_Correctness") @db.VarChar(255)
  codilityTask2Difficulty    String? @map("Codility_Task_2_Difficulty") @db.VarChar(255)
  codilityTask2Language      String? @map("Codility_Task_2_language") @db.VarChar(255)
  codilityTask2Name          String? @map("Codility_Task_2_Name") @db.VarChar(255)
  codilityTask2Performance   String? @map("Codility_Task_2_Performance") @db.VarChar(255)
  codilityTask2Score         String? @map("Codility_Task_2_Score") @db.VarChar(255)
  codilityTask3Correctness   String? @map("Codility_Task_3_Correctness") @db.VarChar(255)
  codilityTask3Difficulty    String? @map("Codility_Task_3_Difficulty") @db.VarChar(255)
  codilityTask3Language      String? @map("Codility_Task_3_language") @db.VarChar(255)
  codilityTask3Name          String? @map("Codility_Task_3_Name") @db.VarChar(255)
  codilityTask3Performance   String? @map("Codility_Task_3_Performance") @db.VarChar(255)
  codilityTask3Score         String? @map("Codility_Task_3_Score") @db.VarChar(255)
  codilityTask4Correctness   String? @map("Codility_Task_4_Correctness") @db.VarChar(255)
  codilityTask4Difficulty    String? @map("Codility_Task_4_Difficulty") @db.VarChar(255)
  codilityTask4Language      String? @map("Codility_Task_4_language") @db.VarChar(255)
  codilityTask4Name          String? @map("Codility_Task_4_Name") @db.VarChar(255)
  codilityTask4Performance   String? @map("Codility_Task_4_Performance") @db.VarChar(255)
  codilityTask4Score         String? @map("Codility_Task_4_Score") @db.VarChar(255)
  codilityTestName           String? @map("Codility_Test_Name") @db.VarChar(255)
  codilityTestSession        String? @map("Codility_Test_Session") @db.VarChar(255)
  first                      String? @map("First") @db.VarChar(255)
  id                         String  @id @default(cuid()) @map("Application_Slate_GUID") @db.VarChar(255)
  last                       String? @map("Last") @db.VarChar(255)
  middle                     String? @map("Middle") @db.VarChar(255)
  prefix                     String? @map("Prefix") @db.VarChar(255)

  @@map("slate_codility")
}

model SlateEmail2AwUser {
  awLuuUserId Int?    @map("aw_luu_user_id")
  id          Int     @id @default(autoincrement())
  slateEmail  String? @map("slate_email") @db.VarChar(100)

  @@index([awLuuUserId], map: "aw_luu_user_id")
  @@index([slateEmail], map: "slate_email")
  @@map("slate_email2aw_user")
}

model SlateEmploy {
  first                    String? @map("First") @db.VarChar(255)
  id                       String  @id @default(cuid()) @map("Application_Slate_GUID") @db.VarChar(255)
  job1From                 String? @map("Job_1_From") @db.VarChar(255)
  job1Organization         String? @map("Job_1_Organization") @db.VarChar(255)
  job1To                   String? @map("Job_1_To") @db.VarChar(255)
  job2From                 String? @map("Job_2_From") @db.VarChar(255)
  job2Organization         String? @map("Job_2_Organization") @db.VarChar(255)
  job2To                   String? @map("Job_2_To") @db.VarChar(255)
  job3From                 String? @map("Job_3_From") @db.VarChar(255)
  job3Organization         String? @map("Job_3_Organization") @db.VarChar(255)
  job3To                   String? @map("Job_3_To") @db.VarChar(255)
  jobNum1YearsOfExperience String? @map("Job_num1_Years_of_Experience") @db.VarChar(255)
  jobNum2YearsOfExperience String? @map("Job_num2_Years_of_Experience") @db.VarChar(255)
  jobNum3YearsOfExperience String? @map("Job_num3_Years_of_Experience") @db.VarChar(255)
  last                     String? @map("Last") @db.VarChar(255)
  middle                   String? @map("Middle") @db.VarChar(255)
  prefix                   String? @map("Prefix") @db.VarChar(255)

  @@map("slate_employ")
}

model SlateIelt {
  first                 String? @map("First") @db.VarChar(255)
  id                    String  @id @default(cuid()) @map("Application_Slate_GUID") @db.VarChar(255)
  ieltsListening        String? @map("IELTS_Listening") @db.VarChar(255)
  ieltsOverallBandScore String? @map("IELTS_Overall_Band_Score") @db.VarChar(255)
  ieltsReading          String? @map("IELTS_Reading") @db.VarChar(255)
  ieltsSpeaking         String? @map("IELTS_Speaking") @db.VarChar(255)
  ieltsWriting          String? @map("IELTS_Writing") @db.VarChar(255)
  last                  String? @map("Last") @db.VarChar(255)
  middle                String? @map("Middle") @db.VarChar(255)
  prefix                String? @map("Prefix") @db.VarChar(255)

  @@map("slate_ielts")
}

model SlateLangCode {
  id       String  @id @default(cuid()) @map("ISO_639_1_Code") @db.VarChar(255)
  language String? @map("Language") @db.VarChar(255)

  @@map("slate_lang_codes")
}

model SlateMaterial {
  applicationSlateGuid String  @map("Application_Slate_GUID") @db.VarChar(255)
  email                String? @map("Email") @db.VarChar(255)
  fileName             String? @map("File_name") @db.VarChar(255)
  id                   Int     @id @default(autoincrement()) @map("Id")
  materialExport1      String? @map("Material_Export_1") @db.VarChar(255)
  materialName         String? @map("Material_Name") @db.VarChar(255)
  name                 String? @map("Name") @db.VarChar(255)

  @@map("slate_materials")
}

model SlateOrg {
  category                                     String? @map("Category") @db.VarChar(255)
  city                                         String? @map("City") @db.VarChar(255)
  country                                      String? @map("Country") @db.VarChar(255)
  id                                           String  @id @default(cuid()) @map("Code") @db.VarChar(255)
  localName                                    String? @map("Local_Name") @db.VarChar(255)
  numActiveApplicationsWithSchoolKeyInDatabase String? @map("Num_Active_Applications_with_School_Key_in_Database") @db.VarChar(255)
  numRecordsWithSchoolKeyInDatabase            String? @map("Num_Records_with_School_Key_in_Database") @db.VarChar(255)
  orgType                                      String? @map("OrgType") @db.VarChar(255)
  postal                                       String? @map("Postal") @db.VarChar(255)
  region                                       String? @map("Region") @db.VarChar(255)
  sharedName                                   String? @map("Shared_Name") @db.VarChar(255)
  status                                       String? @map("Status") @db.VarChar(255)
  street                                       String? @map("Street") @db.VarChar(255)

  @@map("slate_orgs")
}

model SlateOrgsAll {
  awId           String? @map("aw_id") @db.VarChar(255)
  awName         String? @map("aw_name") @db.VarChar(255)
  id             String  @id @default(cuid()) @map("CODE") @db.VarChar(255)
  localName      String? @map("Local_Name") @db.VarChar(255)
  name           String? @db.VarChar(255)
  sharedName     String? @map("Shared_Name") @db.VarChar(255)
  slateOrgsAllId String? @map("id") @db.VarChar(255)

  @@map("slate_orgs_all")
}

model SlateProgram {
  first       String? @map("First") @db.VarChar(255)
  id          String  @id @default(cuid()) @map("Application_Slate_GUID") @db.VarChar(255)
  last        String? @map("Last") @db.VarChar(255)
  middle      String? @map("Middle") @db.VarChar(255)
  mseProgram1 String? @map("MSE_Program_1") @db.VarChar(255)
  mseProgram2 String? @map("MSE_Program_2") @db.VarChar(255)
  mseProgram3 String? @map("MSE_Program_3") @db.VarChar(255)
  prefix      String? @map("Prefix") @db.VarChar(255)

  @@map("slate_programs")
}

model SlateProgramsMseReviewed {
  first       String? @map("First") @db.VarChar(255)
  id          String  @id @default(cuid()) @map("Application_Slate_GUID") @db.VarChar(255)
  last        String? @map("Last") @db.VarChar(255)
  middle      String? @map("Middle") @db.VarChar(255)
  mseProgram1 String? @map("MSE_Program_1") @db.VarChar(255)
  mseProgram2 String? @map("MSE_Program_2") @db.VarChar(255)
  mseProgram3 String? @map("MSE_Program_3") @db.VarChar(255)
  prefix      String? @map("Prefix") @db.VarChar(255)

  @@map("slate_programs_mse_reviewed")
}

model SlatePub {
  authorsPub1             String? @map("Authors_Pub_1") @db.VarChar(255)
  authorsPub2             String? @map("Authors_Pub_2") @db.VarChar(255)
  authorsPub3             String? @map("Authors_Pub_3") @db.VarChar(255)
  authorsPub4             String? @map("Authors_Pub_4") @db.VarChar(255)
  authorsPub5             String? @map("Authors_Pub_5") @db.VarChar(255)
  authorsPub6             String? @map("Authors_Pub_6") @db.VarChar(255)
  citationPub1            String? @map("Citation_Pub_1") @db.VarChar(255)
  citationPub2            String? @map("Citation_Pub_2") @db.VarChar(255)
  citationPub3            String? @map("Citation_Pub_3") @db.VarChar(255)
  citationPub4            String? @map("Citation_Pub_4") @db.VarChar(255)
  citationPub5            String? @map("Citation_Pub_5") @db.VarChar(255)
  citationPub6            String? @map("Citation_Pub_6") @db.VarChar(255)
  destinationPub1         String? @map("Destination_Pub_1") @db.VarChar(255)
  destinationPub2         String? @map("Destination_Pub_2") @db.VarChar(255)
  destinationPub3         String? @map("Destination_Pub_3") @db.VarChar(255)
  destinationPub4         String? @map("Destination_Pub_4") @db.VarChar(255)
  destinationPub5         String? @map("Destination_Pub_5") @db.VarChar(255)
  destinationPub6         String? @map("Destination_Pub_6") @db.VarChar(255)
  first                   String? @map("First") @db.VarChar(255)
  hasPublications         String? @map("Has_Publications") @db.VarChar(255)
  id                      String  @id @default(cuid()) @map("Application_Slate_GUID") @db.VarChar(255)
  last                    String? @map("Last") @db.VarChar(255)
  middle                  String? @map("Middle") @db.VarChar(255)
  otherTypeOfPublication1 String? @map("Other_Type_of_publication_1") @db.VarChar(255)
  otherTypeOfPublication2 String? @map("Other_Type_of_publication_2") @db.VarChar(255)
  otherTypeOfPublication3 String? @map("Other_Type_of_publication_3") @db.VarChar(255)
  otherTypeOfPublication4 String? @map("Other_Type_of_publication_4") @db.VarChar(255)
  otherTypeOfPublication5 String? @map("Other_Type_of_publication_5") @db.VarChar(255)
  otherTypeOfPublication6 String? @map("Other_Type_of_publication_6") @db.VarChar(255)
  prefix                  String? @map("Prefix") @db.VarChar(255)
  statusOfPublication1    String? @map("Status_of_publication_1") @db.VarChar(255)
  statusOfPublication2    String? @map("Status_of_publication_2") @db.VarChar(255)
  statusOfPublication3    String? @map("Status_of_publication_3") @db.VarChar(255)
  statusOfPublication4    String? @map("Status_of_publication_4") @db.VarChar(255)
  statusOfPublication5    String? @map("Status_of_publication_5") @db.VarChar(255)
  statusOfPublication6    String? @map("Status_of_publication_6") @db.VarChar(255)
  titlePub1               String? @map("Title_Pub_1") @db.VarChar(255)
  titlePub2               String? @map("Title_Pub_2") @db.VarChar(255)
  titlePub3               String? @map("Title_Pub_3") @db.VarChar(255)
  titlePub4               String? @map("Title_Pub_4") @db.VarChar(255)
  titlePub5               String? @map("Title_Pub_5") @db.VarChar(255)
  titlePub6               String? @map("Title_Pub_6") @db.VarChar(255)
  typeOfPublication1      String? @map("Type_of_publication_1") @db.VarChar(255)
  typeOfPublication2      String? @map("Type_of_publication_2") @db.VarChar(255)
  typeOfPublication3      String? @map("Type_of_publication_3") @db.VarChar(255)
  typeOfPublication4      String? @map("Type_of_publication_4") @db.VarChar(255)
  typeOfPublication5      String? @map("Type_of_publication_5") @db.VarChar(255)
  typeOfPublication6      String? @map("Type_of_publication_6") @db.VarChar(255)
  urlPub1                 String? @map("URL_Pub_1") @db.VarChar(255)
  urlPub2                 String? @map("URL_Pub_2") @db.VarChar(255)
  urlPub3                 String? @map("URL_Pub_3") @db.VarChar(255)
  urlPub4                 String? @map("URL_Pub_4") @db.VarChar(255)
  urlPub5                 String? @map("URL_Pub_5") @db.VarChar(255)
  urlPub6                 String? @map("URL_Pub_6") @db.VarChar(255)

  @@map("slate_pubs")
}

model SlateRecommend {
  applicationSlateGuid                             String  @map("Application_Slate_GUID") @db.VarChar(255)
  first                                            String? @map("First") @db.VarChar(255)
  id                                               Int     @id @default(autoincrement()) @map("Id")
  last                                             String? @map("Last") @db.VarChar(255)
  middle                                           String? @map("Middle") @db.VarChar(255)
  prefix                                           String? @map("Prefix") @db.VarChar(255)
  reference1Email                                  String? @map("Reference_1_Email") @db.VarChar(255)
  reference1First                                  String? @map("Reference_1_First") @db.VarChar(255)
  reference1Industry                               String? @map("Reference_1_Industry") @db.VarChar(255)
  reference1Last                                   String? @map("Reference_1_Last") @db.VarChar(255)
  reference1Organization                           String? @map("Reference_1_Organization") @db.VarChar(255)
  reference1Phone                                  String? @map("Reference_1_Phone") @db.VarChar(255)
  reference1Submitted                              String? @map("Reference_1_Submitted") @db.VarChar(255)
  reference1Title                                  String? @map("Reference_1_Title") @db.VarChar(255)
  reference1Type                                   String? @map("Reference_1_Type") @db.VarChar(255)
  referenceNum1IsrmsRecommenderScore1              String? @map("Reference_num1_ISRMS_Recommender_Score_1") @db.VarChar(255)
  referenceNum1IsrmsRecommenderScore10             String? @map("Reference_num1_ISRMS_Recommender_Score_10") @db.VarChar(255)
  referenceNum1IsrmsRecommenderScore11             String? @map("Reference_num1_ISRMS_Recommender_Score_11") @db.VarChar(255)
  referenceNum1IsrmsRecommenderScore12             String? @map("Reference_num1_ISRMS_Recommender_Score_12") @db.VarChar(255)
  referenceNum1IsrmsRecommenderScore13             String? @map("Reference_num1_ISRMS_Recommender_Score_13") @db.VarChar(255)
  referenceNum1IsrmsRecommenderScore14             String? @map("Reference_num1_ISRMS_Recommender_Score_14") @db.VarChar(255)
  referenceNum1IsrmsRecommenderScore15             String? @map("Reference_num1_ISRMS_Recommender_Score_15") @db.VarChar(255)
  referenceNum1IsrmsRecommenderScore2              String? @map("Reference_num1_ISRMS_Recommender_Score_2") @db.VarChar(255)
  referenceNum1IsrmsRecommenderScore3              String? @map("Reference_num1_ISRMS_Recommender_Score_3") @db.VarChar(255)
  referenceNum1IsrmsRecommenderScore4              String? @map("Reference_num1_ISRMS_Recommender_Score_4") @db.VarChar(255)
  referenceNum1IsrmsRecommenderScore5              String? @map("Reference_num1_ISRMS_Recommender_Score_5") @db.VarChar(255)
  referenceNum1IsrmsRecommenderScore6              String? @map("Reference_num1_ISRMS_Recommender_Score_6") @db.VarChar(255)
  referenceNum1IsrmsRecommenderScore7              String? @map("Reference_num1_ISRMS_Recommender_Score_7") @db.VarChar(255)
  referenceNum1IsrmsRecommenderScore8              String? @map("Reference_num1_ISRMS_Recommender_Score_8") @db.VarChar(255)
  referenceNum1IsrmsRecommenderScore9              String? @map("Reference_num1_ISRMS_Recommender_Score_9") @db.VarChar(255)
  referenceNum1MseRecommendationAdditional         String? @map("Reference_num1_MSE_Recommendation_Additional") @db.VarChar(255)
  referenceNum1MseRecommendationComparison         String? @map("Reference_num1_MSE_Recommendation_Comparison") @db.VarChar(255)
  referenceNum1MseRecommendationHowKnown           String? @map("Reference_num1_MSE_Recommendation_How_Known") @db.VarChar(255)
  referenceNum1MseRecommendationProjectPerformance String? @map("Reference_num1_MSE_Recommendation_Project_Performance") @db.VarChar(255)
  referenceNum1MseRecommendationStrengthsWeakness  String? @map("Reference_num1_MSE_Recommendation_Strengths_Weakness") @db.VarChar(255)
  referenceNum1RecommenderScore1                   String? @map("Reference_num1_Recommender_Score_1") @db.VarChar(255)
  referenceNum1RecommenderScore2                   String? @map("Reference_num1_Recommender_Score_2") @db.VarChar(255)
  referenceNum1RecommenderScore3                   String? @map("Reference_num1_Recommender_Score_3") @db.VarChar(255)
  referenceNum1RecommenderScore4                   String? @map("Reference_num1_Recommender_Score_4") @db.VarChar(255)
  referenceNum1RecommenderScore5                   String? @map("Reference_num1_Recommender_Score_5") @db.VarChar(255)
  referenceNum1RecommenderScore6                   String? @map("Reference_num1_Recommender_Score_6") @db.VarChar(255)
  referenceNum1RecommenderScore7                   String? @map("Reference_num1_Recommender_Score_7") @db.VarChar(255)
  referenceNum1RecommenderScore8                   String? @map("Reference_num1_Recommender_Score_8") @db.VarChar(255)

  @@map("slate_recommend")
}

model SlateRecommend1 {
  first                                            String? @map("First") @db.VarChar(255)
  id                                               String  @id @default(cuid()) @map("Application_Slate_GUID") @db.VarChar(255)
  last                                             String? @map("Last") @db.VarChar(255)
  middle                                           String? @map("Middle") @db.VarChar(255)
  prefix                                           String? @map("Prefix") @db.VarChar(255)
  reference1Email                                  String? @map("Reference_1_Email") @db.VarChar(255)
  reference1First                                  String? @map("Reference_1_First") @db.VarChar(255)
  reference1Industry                               String? @map("Reference_1_Industry") @db.VarChar(255)
  reference1Last                                   String? @map("Reference_1_Last") @db.VarChar(255)
  reference1Organization                           String? @map("Reference_1_Organization") @db.VarChar(255)
  reference1Phone                                  String? @map("Reference_1_Phone") @db.VarChar(255)
  reference1Submitted                              String? @map("Reference_1_Submitted") @db.VarChar(255)
  reference1Title                                  String? @map("Reference_1_Title") @db.VarChar(255)
  reference1Type                                   String? @map("Reference_1_Type") @db.VarChar(255)
  referenceNum1IsrmsRecommenderScore1              String? @map("Reference_num1_ISRMS_Recommender_Score_1") @db.VarChar(255)
  referenceNum1IsrmsRecommenderScore10             String? @map("Reference_num1_ISRMS_Recommender_Score_10") @db.VarChar(255)
  referenceNum1IsrmsRecommenderScore11             String? @map("Reference_num1_ISRMS_Recommender_Score_11") @db.VarChar(255)
  referenceNum1IsrmsRecommenderScore12             String? @map("Reference_num1_ISRMS_Recommender_Score_12") @db.VarChar(255)
  referenceNum1IsrmsRecommenderScore13             String? @map("Reference_num1_ISRMS_Recommender_Score_13") @db.VarChar(255)
  referenceNum1IsrmsRecommenderScore14             String? @map("Reference_num1_ISRMS_Recommender_Score_14") @db.VarChar(255)
  referenceNum1IsrmsRecommenderScore15             String? @map("Reference_num1_ISRMS_Recommender_Score_15") @db.VarChar(255)
  referenceNum1IsrmsRecommenderScore2              String? @map("Reference_num1_ISRMS_Recommender_Score_2") @db.VarChar(255)
  referenceNum1IsrmsRecommenderScore3              String? @map("Reference_num1_ISRMS_Recommender_Score_3") @db.VarChar(255)
  referenceNum1IsrmsRecommenderScore4              String? @map("Reference_num1_ISRMS_Recommender_Score_4") @db.VarChar(255)
  referenceNum1IsrmsRecommenderScore5              String? @map("Reference_num1_ISRMS_Recommender_Score_5") @db.VarChar(255)
  referenceNum1IsrmsRecommenderScore6              String? @map("Reference_num1_ISRMS_Recommender_Score_6") @db.VarChar(255)
  referenceNum1IsrmsRecommenderScore7              String? @map("Reference_num1_ISRMS_Recommender_Score_7") @db.VarChar(255)
  referenceNum1IsrmsRecommenderScore8              String? @map("Reference_num1_ISRMS_Recommender_Score_8") @db.VarChar(255)
  referenceNum1IsrmsRecommenderScore9              String? @map("Reference_num1_ISRMS_Recommender_Score_9") @db.VarChar(255)
  referenceNum1MseRecommendationAdditional         String? @map("Reference_num1_MSE_Recommendation_Additional") @db.VarChar(255)
  referenceNum1MseRecommendationComparison         String? @map("Reference_num1_MSE_Recommendation_Comparison") @db.VarChar(255)
  referenceNum1MseRecommendationHowKnown           String? @map("Reference_num1_MSE_Recommendation_How_Known") @db.VarChar(255)
  referenceNum1MseRecommendationProjectPerformance String? @map("Reference_num1_MSE_Recommendation_Project_Performance") @db.VarChar(255)
  referenceNum1MseRecommendationStrengthsWeakness  String? @map("Reference_num1_MSE_Recommendation_Strengths_Weakness") @db.VarChar(255)
  referenceNum1RecommenderScore1                   String? @map("Reference_num1_Recommender_Score_1") @db.VarChar(255)
  referenceNum1RecommenderScore2                   String? @map("Reference_num1_Recommender_Score_2") @db.VarChar(255)
  referenceNum1RecommenderScore3                   String? @map("Reference_num1_Recommender_Score_3") @db.VarChar(255)
  referenceNum1RecommenderScore4                   String? @map("Reference_num1_Recommender_Score_4") @db.VarChar(255)
  referenceNum1RecommenderScore5                   String? @map("Reference_num1_Recommender_Score_5") @db.VarChar(255)
  referenceNum1RecommenderScore6                   String? @map("Reference_num1_Recommender_Score_6") @db.VarChar(255)
  referenceNum1RecommenderScore7                   String? @map("Reference_num1_Recommender_Score_7") @db.VarChar(255)
  referenceNum1RecommenderScore8                   String? @map("Reference_num1_Recommender_Score_8") @db.VarChar(255)

  @@map("slate_recommend1")
}

model SlateRecommend2 {
  first                                            String? @map("First") @db.VarChar(255)
  id                                               String  @id @default(cuid()) @map("Application_Slate_GUID") @db.VarChar(255)
  last                                             String? @map("Last") @db.VarChar(255)
  middle                                           String? @map("Middle") @db.VarChar(255)
  prefix                                           String? @map("Prefix") @db.VarChar(255)
  reference2Email                                  String? @map("Reference_2_Email") @db.VarChar(255)
  reference2First                                  String? @map("Reference_2_First") @db.VarChar(255)
  reference2Industry                               String? @map("Reference_2_Industry") @db.VarChar(255)
  reference2Last                                   String? @map("Reference_2_Last") @db.VarChar(255)
  reference2Organization                           String? @map("Reference_2_Organization") @db.VarChar(255)
  reference2Phone                                  String? @map("Reference_2_Phone") @db.VarChar(255)
  reference2Submitted                              String? @map("Reference_2_Submitted") @db.VarChar(255)
  reference2Title                                  String? @map("Reference_2_Title") @db.VarChar(255)
  reference2Type                                   String? @map("Reference_2_Type") @db.VarChar(255)
  referenceNum2IsrmsRecommenderScore1              String? @map("Reference_num2_ISRMS_Recommender_Score_1") @db.VarChar(255)
  referenceNum2IsrmsRecommenderScore10             String? @map("Reference_num2_ISRMS_Recommender_Score_10") @db.VarChar(255)
  referenceNum2IsrmsRecommenderScore11             String? @map("Reference_num2_ISRMS_Recommender_Score_11") @db.VarChar(255)
  referenceNum2IsrmsRecommenderScore12             String? @map("Reference_num2_ISRMS_Recommender_Score_12") @db.VarChar(255)
  referenceNum2IsrmsRecommenderScore13             String? @map("Reference_num2_ISRMS_Recommender_Score_13") @db.VarChar(255)
  referenceNum2IsrmsRecommenderScore14             String? @map("Reference_num2_ISRMS_Recommender_Score_14") @db.VarChar(255)
  referenceNum2IsrmsRecommenderScore15             String? @map("Reference_num2_ISRMS_Recommender_Score_15") @db.VarChar(255)
  referenceNum2IsrmsRecommenderScore2              String? @map("Reference_num2_ISRMS_Recommender_Score_2") @db.VarChar(255)
  referenceNum2IsrmsRecommenderScore3              String? @map("Reference_num2_ISRMS_Recommender_Score_3") @db.VarChar(255)
  referenceNum2IsrmsRecommenderScore4              String? @map("Reference_num2_ISRMS_Recommender_Score_4") @db.VarChar(255)
  referenceNum2IsrmsRecommenderScore5              String? @map("Reference_num2_ISRMS_Recommender_Score_5") @db.VarChar(255)
  referenceNum2IsrmsRecommenderScore6              String? @map("Reference_num2_ISRMS_Recommender_Score_6") @db.VarChar(255)
  referenceNum2IsrmsRecommenderScore7              String? @map("Reference_num2_ISRMS_Recommender_Score_7") @db.VarChar(255)
  referenceNum2IsrmsRecommenderScore8              String? @map("Reference_num2_ISRMS_Recommender_Score_8") @db.VarChar(255)
  referenceNum2IsrmsRecommenderScore9              String? @map("Reference_num2_ISRMS_Recommender_Score_9") @db.VarChar(255)
  referenceNum2MseRecommendationAdditional         String? @map("Reference_num2_MSE_Recommendation_Additional") @db.VarChar(255)
  referenceNum2MseRecommendationComparison         String? @map("Reference_num2_MSE_Recommendation_Comparison") @db.VarChar(255)
  referenceNum2MseRecommendationHowKnown           String? @map("Reference_num2_MSE_Recommendation_How_Known") @db.VarChar(255)
  referenceNum2MseRecommendationProjectPerformance String? @map("Reference_num2_MSE_Recommendation_Project_Performance") @db.VarChar(255)
  referenceNum2MseRecommendationStrengthsWeakness  String? @map("Reference_num2_MSE_Recommendation_Strengths_Weakness") @db.VarChar(255)
  referenceNum2RecommenderScore1                   String? @map("Reference_num2_Recommender_Score_1") @db.VarChar(255)
  referenceNum2RecommenderScore2                   String? @map("Reference_num2_Recommender_Score_2") @db.VarChar(255)
  referenceNum2RecommenderScore3                   String? @map("Reference_num2_Recommender_Score_3") @db.VarChar(255)
  referenceNum2RecommenderScore4                   String? @map("Reference_num2_Recommender_Score_4") @db.VarChar(255)
  referenceNum2RecommenderScore5                   String? @map("Reference_num2_Recommender_Score_5") @db.VarChar(255)
  referenceNum2RecommenderScore6                   String? @map("Reference_num2_Recommender_Score_6") @db.VarChar(255)
  referenceNum2RecommenderScore7                   String? @map("Reference_num2_Recommender_Score_7") @db.VarChar(255)
  referenceNum2RecommenderScore8                   String? @map("Reference_num2_Recommender_Score_8") @db.VarChar(255)

  @@map("slate_recommend2")
}

model SlateRecommend3 {
  first                                            String? @map("First") @db.VarChar(255)
  id                                               String  @id @default(cuid()) @map("Application_Slate_GUID") @db.VarChar(255)
  last                                             String? @map("Last") @db.VarChar(255)
  middle                                           String? @map("Middle") @db.VarChar(255)
  prefix                                           String? @map("Prefix") @db.VarChar(255)
  reference3Email                                  String? @map("Reference_3_Email") @db.VarChar(255)
  reference3First                                  String? @map("Reference_3_First") @db.VarChar(255)
  reference3Industry                               String? @map("Reference_3_Industry") @db.VarChar(255)
  reference3Last                                   String? @map("Reference_3_Last") @db.VarChar(255)
  reference3Organization                           String? @map("Reference_3_Organization") @db.VarChar(255)
  reference3Phone                                  String? @map("Reference_3_Phone") @db.VarChar(255)
  reference3Submitted                              String? @map("Reference_3_Submitted") @db.VarChar(255)
  reference3Title                                  String? @map("Reference_3_Title") @db.VarChar(255)
  reference3Type                                   String? @map("Reference_3_Type") @db.VarChar(255)
  referenceNum3IsrmsRecommenderScore1              String? @map("Reference_num3_ISRMS_Recommender_Score_1") @db.VarChar(255)
  referenceNum3IsrmsRecommenderScore10             String? @map("Reference_num3_ISRMS_Recommender_Score_10") @db.VarChar(255)
  referenceNum3IsrmsRecommenderScore11             String? @map("Reference_num3_ISRMS_Recommender_Score_11") @db.VarChar(255)
  referenceNum3IsrmsRecommenderScore12             String? @map("Reference_num3_ISRMS_Recommender_Score_12") @db.VarChar(255)
  referenceNum3IsrmsRecommenderScore13             String? @map("Reference_num3_ISRMS_Recommender_Score_13") @db.VarChar(255)
  referenceNum3IsrmsRecommenderScore14             String? @map("Reference_num3_ISRMS_Recommender_Score_14") @db.VarChar(255)
  referenceNum3IsrmsRecommenderScore15             String? @map("Reference_num3_ISRMS_Recommender_Score_15") @db.VarChar(255)
  referenceNum3IsrmsRecommenderScore2              String? @map("Reference_num3_ISRMS_Recommender_Score_2") @db.VarChar(255)
  referenceNum3IsrmsRecommenderScore3              String? @map("Reference_num3_ISRMS_Recommender_Score_3") @db.VarChar(255)
  referenceNum3IsrmsRecommenderScore4              String? @map("Reference_num3_ISRMS_Recommender_Score_4") @db.VarChar(255)
  referenceNum3IsrmsRecommenderScore5              String? @map("Reference_num3_ISRMS_Recommender_Score_5") @db.VarChar(255)
  referenceNum3IsrmsRecommenderScore6              String? @map("Reference_num3_ISRMS_Recommender_Score_6") @db.VarChar(255)
  referenceNum3IsrmsRecommenderScore7              String? @map("Reference_num3_ISRMS_Recommender_Score_7") @db.VarChar(255)
  referenceNum3IsrmsRecommenderScore8              String? @map("Reference_num3_ISRMS_Recommender_Score_8") @db.VarChar(255)
  referenceNum3IsrmsRecommenderScore9              String? @map("Reference_num3_ISRMS_Recommender_Score_9") @db.VarChar(255)
  referenceNum3MseRecommendationAdditional         String? @map("Reference_num3_MSE_Recommendation_Additional") @db.VarChar(255)
  referenceNum3MseRecommendationComparison         String? @map("Reference_num3_MSE_Recommendation_Comparison") @db.VarChar(255)
  referenceNum3MseRecommendationHowKnown           String? @map("Reference_num3_MSE_Recommendation_How_Known") @db.VarChar(255)
  referenceNum3MseRecommendationProjectPerformance String? @map("Reference_num3_MSE_Recommendation_Project_Performance") @db.VarChar(255)
  referenceNum3MseRecommendationStrengthsWeakness  String? @map("Reference_num3_MSE_Recommendation_Strengths_Weakness") @db.VarChar(255)
  referenceNum3RecommenderScore1                   String? @map("Reference_num3_Recommender_Score_1") @db.VarChar(255)
  referenceNum3RecommenderScore2                   String? @map("Reference_num3_Recommender_Score_2") @db.VarChar(255)
  referenceNum3RecommenderScore3                   String? @map("Reference_num3_Recommender_Score_3") @db.VarChar(255)
  referenceNum3RecommenderScore4                   String? @map("Reference_num3_Recommender_Score_4") @db.VarChar(255)
  referenceNum3RecommenderScore5                   String? @map("Reference_num3_Recommender_Score_5") @db.VarChar(255)
  referenceNum3RecommenderScore6                   String? @map("Reference_num3_Recommender_Score_6") @db.VarChar(255)
  referenceNum3RecommenderScore7                   String? @map("Reference_num3_Recommender_Score_7") @db.VarChar(255)
  referenceNum3RecommenderScore8                   String? @map("Reference_num3_Recommender_Score_8") @db.VarChar(255)

  @@map("slate_recommend3")
}

model SlateReview {
  first                                             String? @map("First") @db.VarChar(100)
  id                                                String  @id @default(cuid()) @map("Application_Slate_GUID") @db.VarChar(100)
  last                                              String? @map("Last") @db.VarChar(100)
  middle                                            String? @map("Middle") @db.VarChar(100)
  mseReviewFormNum1AbilityToProgramComments         String? @map("MSE_Review_Form_num1_Ability_to_Program_Comments") @db.VarChar(100)
  mseReviewFormNum1AbilityToProgramEvaluation       String? @map("MSE_Review_Form_num1_Ability_to_Program_Evaluation") @db.VarChar(100)
  mseReviewFormNum1Comments                         String? @map("MSE_Review_Form_num1_Comments") @db.VarChar(100)
  mseReviewFormNum1CsseEvaluation                   String? @map("MSE_Review_Form_num1_CSSE_Evaluation") @db.VarChar(100)
  mseReviewFormNum1EnglishComments                  String? @map("MSE_Review_Form_num1_English_Comments") @db.VarChar(100)
  mseReviewFormNum1EnglishEvaluation                String? @map("MSE_Review_Form_num1_English_Evaluation") @db.VarChar(100)
  mseReviewFormNum1ExperienceComments               String? @map("MSE_Review_Form_num1_Experience_Comments") @db.VarChar(100)
  mseReviewFormNum1ExperienceEvaluation             String? @map("MSE_Review_Form_num1_Experience_Evaluation") @db.VarChar(100)
  mseReviewFormNum1FoundationalKnowledgeComments    String? @map("MSE_Review_Form_num1_Foundational_Knowledge_Comments") @db.VarChar(100)
  mseReviewFormNum1FoundationalKnowledgeEvaluation  String? @map("MSE_Review_Form_num1_Foundational_Knowledge_Evaluation") @db.VarChar(100)
  mseReviewFormNum1FromBin                          String? @map("MSE_Review_Form_num1_From_Bin") @db.VarChar(100)
  mseReviewFormNum1IntoBin                          String? @map("MSE_Review_Form_num1_Into_Bin") @db.VarChar(100)
  mseReviewFormNum1MaturityLeadershipEvaluation     String? @map("MSE_Review_Form_num1_Maturity_Leadership_Evaluation") @db.VarChar(100)
  mseReviewFormNum1MaturityLeadershpComments        String? @map("MSE_Review_Form_num1_Maturity_Leadershp_Comments") @db.VarChar(100)
  mseReviewFormNum1MseEvaluation                    String? @map("MSE_Review_Form_num1_MSE_Evaluation") @db.VarChar(100)
  mseReviewFormNum1MsitEvaluation                   String? @map("MSE_Review_Form_num1_MSIT_Evaluation") @db.VarChar(100)
  mseReviewFormNum1OtherRiskFactors                 String? @map("MSE_Review_Form_num1_Other_Risk_Factors") @db.VarChar(100)
  mseReviewFormNum1RiskFactors                      String? @map("MSE_Review_Form_num1_Risk_Factors") @db.VarChar(100)
  mseReviewFormNum1Started                          String? @map("MSE_Review_Form_num1_Started") @db.VarChar(100)
  mseReviewFormNum1Submitted                        String? @map("MSE_Review_Form_num1_Submitted") @db.VarChar(100)
  mseReviewFormNum1UnderstandingOfProgramComments   String? @map("MSE_Review_Form_num1_Understanding_of_Program_Comments") @db.VarChar(100)
  mseReviewFormNum1UnderstandingOfProgramEvaluation String? @map("MSE_Review_Form_num1_Understanding_of_Program_Evaluation") @db.VarChar(100)
  mseReviewFormNum1UserEmail                        String? @map("MSE_Review_Form_num1_User_Email") @db.VarChar(100)
  mseReviewFormNum1UserName                         String? @map("MSE_Review_Form_num1_User_Name") @db.VarChar(100)
  mseReviewFormNum2AbilityToProgramComments         String? @map("MSE_Review_Form_num2_Ability_to_Program_Comments") @db.VarChar(100)
  mseReviewFormNum2AbilityToProgramEvaluation       String? @map("MSE_Review_Form_num2_Ability_to_Program_Evaluation") @db.VarChar(100)
  mseReviewFormNum2Comments                         String? @map("MSE_Review_Form_num2_Comments") @db.VarChar(100)
  mseReviewFormNum2CsseEvaluation                   String? @map("MSE_Review_Form_num2_CSSE_Evaluation") @db.VarChar(100)
  mseReviewFormNum2EnglishComments                  String? @map("MSE_Review_Form_num2_English_Comments") @db.VarChar(100)
  mseReviewFormNum2EnglishEvaluation                String? @map("MSE_Review_Form_num2_English_Evaluation") @db.VarChar(100)
  mseReviewFormNum2ExperienceComments               String? @map("MSE_Review_Form_num2_Experience_Comments") @db.VarChar(100)
  mseReviewFormNum2ExperienceEvaluation             String? @map("MSE_Review_Form_num2_Experience_Evaluation") @db.VarChar(100)
  mseReviewFormNum2FoundationalKnowledgeComments    String? @map("MSE_Review_Form_num2_Foundational_Knowledge_Comments") @db.VarChar(100)
  mseReviewFormNum2FoundationalKnowledgeEvaluation  String? @map("MSE_Review_Form_num2_Foundational_Knowledge_Evaluation") @db.VarChar(100)
  mseReviewFormNum2FromBin                          String? @map("MSE_Review_Form_num2_From_Bin") @db.VarChar(100)
  mseReviewFormNum2IntoBin                          String? @map("MSE_Review_Form_num2_Into_Bin") @db.VarChar(100)
  mseReviewFormNum2MaturityLeadershipEvaluation     String? @map("MSE_Review_Form_num2_Maturity_Leadership_Evaluation") @db.VarChar(100)
  mseReviewFormNum2MaturityLeadershpComments        String? @map("MSE_Review_Form_num2_Maturity_Leadershp_Comments") @db.VarChar(100)
  mseReviewFormNum2MseEvaluation                    String? @map("MSE_Review_Form_num2_MSE_Evaluation") @db.VarChar(100)
  mseReviewFormNum2MsitEvaluation                   String? @map("MSE_Review_Form_num2_MSIT_Evaluation") @db.VarChar(100)
  mseReviewFormNum2OtherRiskFactors                 String? @map("MSE_Review_Form_num2_Other_Risk_Factors") @db.VarChar(100)
  mseReviewFormNum2RiskFactors                      String? @map("MSE_Review_Form_num2_Risk_Factors") @db.VarChar(100)
  mseReviewFormNum2Started                          String? @map("MSE_Review_Form_num2_Started") @db.VarChar(100)
  mseReviewFormNum2Submitted                        String? @map("MSE_Review_Form_num2_Submitted") @db.VarChar(100)
  mseReviewFormNum2UnderstandingOfProgramComments   String? @map("MSE_Review_Form_num2_Understanding_of_Program_Comments") @db.VarChar(100)
  mseReviewFormNum2UnderstandingOfProgramEvaluation String? @map("MSE_Review_Form_num2_Understanding_of_Program_Evaluation") @db.VarChar(100)
  mseReviewFormNum2UserEmail                        String? @map("MSE_Review_Form_num2_User_Email") @db.VarChar(100)
  mseReviewFormNum2UserName                         String? @map("MSE_Review_Form_num2_User_Name") @db.VarChar(100)
  mseReviewFormNum3AbilityToProgramComments         String? @map("MSE_Review_Form_num3_Ability_to_Program_Comments") @db.VarChar(100)
  mseReviewFormNum3AbilityToProgramEvaluation       String? @map("MSE_Review_Form_num3_Ability_to_Program_Evaluation") @db.VarChar(100)
  mseReviewFormNum3Comments                         String? @map("MSE_Review_Form_num3_Comments") @db.VarChar(100)
  mseReviewFormNum3CsseEvaluation                   String? @map("MSE_Review_Form_num3_CSSE_Evaluation") @db.VarChar(100)
  mseReviewFormNum3EnglishComments                  String? @map("MSE_Review_Form_num3_English_Comments") @db.VarChar(100)
  mseReviewFormNum3EnglishEvaluation                String? @map("MSE_Review_Form_num3_English_Evaluation") @db.VarChar(100)
  mseReviewFormNum3ExperienceComments               String? @map("MSE_Review_Form_num3_Experience_Comments") @db.VarChar(100)
  mseReviewFormNum3ExperienceEvaluation             String? @map("MSE_Review_Form_num3_Experience_Evaluation") @db.VarChar(100)
  mseReviewFormNum3FoundationalKnowledgeComments    String? @map("MSE_Review_Form_num3_Foundational_Knowledge_Comments") @db.VarChar(100)
  mseReviewFormNum3FoundationalKnowledgeEvaluation  String? @map("MSE_Review_Form_num3_Foundational_Knowledge_Evaluation") @db.VarChar(100)
  mseReviewFormNum3FromBin                          String? @map("MSE_Review_Form_num3_From_Bin") @db.VarChar(100)
  mseReviewFormNum3IntoBin                          String? @map("MSE_Review_Form_num3_Into_Bin") @db.VarChar(100)
  mseReviewFormNum3MaturityLeadershipEvaluation     String? @map("MSE_Review_Form_num3_Maturity_Leadership_Evaluation") @db.VarChar(100)
  mseReviewFormNum3MaturityLeadershpComments        String? @map("MSE_Review_Form_num3_Maturity_Leadershp_Comments") @db.VarChar(100)
  mseReviewFormNum3MseEvaluation                    String? @map("MSE_Review_Form_num3_MSE_Evaluation") @db.VarChar(100)
  mseReviewFormNum3MsitEvaluation                   String? @map("MSE_Review_Form_num3_MSIT_Evaluation") @db.VarChar(100)
  mseReviewFormNum3OtherRiskFactors                 String? @map("MSE_Review_Form_num3_Other_Risk_Factors") @db.VarChar(100)
  mseReviewFormNum3RiskFactors                      String? @map("MSE_Review_Form_num3_Risk_Factors") @db.VarChar(100)
  mseReviewFormNum3Started                          String? @map("MSE_Review_Form_num3_Started") @db.VarChar(100)
  mseReviewFormNum3Submitted                        String? @map("MSE_Review_Form_num3_Submitted") @db.VarChar(100)
  mseReviewFormNum3UnderstandingOfProgramComments   String? @map("MSE_Review_Form_num3_Understanding_of_Program_Comments") @db.VarChar(100)
  mseReviewFormNum3UnderstandingOfProgramEvaluation String? @map("MSE_Review_Form_num3_Understanding_of_Program_Evaluation") @db.VarChar(100)
  mseReviewFormNum3UserEmail                        String? @map("MSE_Review_Form_num3_User_Email") @db.VarChar(100)
  mseReviewFormNum3UserName                         String? @map("MSE_Review_Form_num3_User_Name") @db.VarChar(100)
  mseReviewFormNum4AbilityToProgramComments         String? @map("MSE_Review_Form_num4_Ability_to_Program_Comments") @db.VarChar(100)
  mseReviewFormNum4AbilityToProgramEvaluation       String? @map("MSE_Review_Form_num4_Ability_to_Program_Evaluation") @db.VarChar(100)
  mseReviewFormNum4Comments                         String? @map("MSE_Review_Form_num4_Comments") @db.VarChar(100)
  mseReviewFormNum4CsseEvaluation                   String? @map("MSE_Review_Form_num4_CSSE_Evaluation") @db.VarChar(100)
  mseReviewFormNum4EnglishComments                  String? @map("MSE_Review_Form_num4_English_Comments") @db.VarChar(100)
  mseReviewFormNum4EnglishEvaluation                String? @map("MSE_Review_Form_num4_English_Evaluation") @db.VarChar(100)
  mseReviewFormNum4ExperienceComments               String? @map("MSE_Review_Form_num4_Experience_Comments") @db.VarChar(100)
  mseReviewFormNum4ExperienceEvaluation             String? @map("MSE_Review_Form_num4_Experience_Evaluation") @db.VarChar(100)
  mseReviewFormNum4FoundationalKnowledgeComments    String? @map("MSE_Review_Form_num4_Foundational_Knowledge_Comments") @db.VarChar(100)
  mseReviewFormNum4FoundationalKnowledgeEvaluation  String? @map("MSE_Review_Form_num4_Foundational_Knowledge_Evaluation") @db.VarChar(100)
  mseReviewFormNum4FromBin                          String? @map("MSE_Review_Form_num4_From_Bin") @db.VarChar(100)
  mseReviewFormNum4IntoBin                          String? @map("MSE_Review_Form_num4_Into_Bin") @db.VarChar(100)
  mseReviewFormNum4MaturityLeadershipEvaluation     String? @map("MSE_Review_Form_num4_Maturity_Leadership_Evaluation") @db.VarChar(100)
  mseReviewFormNum4MaturityLeadershpComments        String? @map("MSE_Review_Form_num4_Maturity_Leadershp_Comments") @db.VarChar(100)
  mseReviewFormNum4MseEvaluation                    String? @map("MSE_Review_Form_num4_MSE_Evaluation") @db.VarChar(100)
  mseReviewFormNum4MsitEvaluation                   String? @map("MSE_Review_Form_num4_MSIT_Evaluation") @db.VarChar(100)
  mseReviewFormNum4OtherRiskFactors                 String? @map("MSE_Review_Form_num4_Other_Risk_Factors") @db.VarChar(100)
  mseReviewFormNum4RiskFactors                      String? @map("MSE_Review_Form_num4_Risk_Factors") @db.VarChar(100)
  mseReviewFormNum4Started                          String? @map("MSE_Review_Form_num4_Started") @db.VarChar(100)
  mseReviewFormNum4Submitted                        String? @map("MSE_Review_Form_num4_Submitted") @db.VarChar(100)
  mseReviewFormNum4UnderstandingOfProgramComments   String? @map("MSE_Review_Form_num4_Understanding_of_Program_Comments") @db.VarChar(100)
  mseReviewFormNum4UnderstandingOfProgramEvaluation String? @map("MSE_Review_Form_num4_Understanding_of_Program_Evaluation") @db.VarChar(100)
  mseReviewFormNum4UserEmail                        String? @map("MSE_Review_Form_num4_User_Email") @db.VarChar(100)
  mseReviewFormNum4UserName                         String? @map("MSE_Review_Form_num4_User_Name") @db.VarChar(100)
  mseReviewFormNum5AbilityToProgramComments         String? @map("MSE_Review_Form_num5_Ability_to_Program_Comments") @db.VarChar(100)
  mseReviewFormNum5AbilityToProgramEvaluation       String? @map("MSE_Review_Form_num5_Ability_to_Program_Evaluation") @db.VarChar(100)
  mseReviewFormNum5Comments                         String? @map("MSE_Review_Form_num5_Comments") @db.VarChar(100)
  mseReviewFormNum5CsseEvaluation                   String? @map("MSE_Review_Form_num5_CSSE_Evaluation") @db.VarChar(100)
  mseReviewFormNum5EnglishComments                  String? @map("MSE_Review_Form_num5_English_Comments") @db.VarChar(100)
  mseReviewFormNum5EnglishEvaluation                String? @map("MSE_Review_Form_num5_English_Evaluation") @db.VarChar(100)
  mseReviewFormNum5ExperienceComments               String? @map("MSE_Review_Form_num5_Experience_Comments") @db.VarChar(100)
  mseReviewFormNum5ExperienceEvaluation             String? @map("MSE_Review_Form_num5_Experience_Evaluation") @db.VarChar(100)
  mseReviewFormNum5FoundationalKnowledgeComments    String? @map("MSE_Review_Form_num5_Foundational_Knowledge_Comments") @db.VarChar(100)
  mseReviewFormNum5FoundationalKnowledgeEvaluation  String? @map("MSE_Review_Form_num5_Foundational_Knowledge_Evaluation") @db.VarChar(100)
  mseReviewFormNum5FromBin                          String? @map("MSE_Review_Form_num5_From_Bin") @db.VarChar(100)
  mseReviewFormNum5IntoBin                          String? @map("MSE_Review_Form_num5_Into_Bin") @db.VarChar(100)
  mseReviewFormNum5MaturityLeadershipEvaluation     String? @map("MSE_Review_Form_num5_Maturity_Leadership_Evaluation") @db.VarChar(100)
  mseReviewFormNum5MaturityLeadershpComments        String? @map("MSE_Review_Form_num5_Maturity_Leadershp_Comments") @db.VarChar(100)
  mseReviewFormNum5MseEvaluation                    String? @map("MSE_Review_Form_num5_MSE_Evaluation") @db.VarChar(100)
  mseReviewFormNum5MsitEvaluation                   String? @map("MSE_Review_Form_num5_MSIT_Evaluation") @db.VarChar(100)
  mseReviewFormNum5OtherRiskFactors                 String? @map("MSE_Review_Form_num5_Other_Risk_Factors") @db.VarChar(100)
  mseReviewFormNum5RiskFactors                      String? @map("MSE_Review_Form_num5_Risk_Factors") @db.VarChar(100)
  mseReviewFormNum5Started                          String? @map("MSE_Review_Form_num5_Started") @db.VarChar(100)
  mseReviewFormNum5Submitted                        String? @map("MSE_Review_Form_num5_Submitted") @db.VarChar(100)
  mseReviewFormNum5UnderstandingOfProgramComments   String? @map("MSE_Review_Form_num5_Understanding_of_Program_Comments") @db.VarChar(100)
  mseReviewFormNum5UnderstandingOfProgramEvaluation String? @map("MSE_Review_Form_num5_Understanding_of_Program_Evaluation") @db.VarChar(100)
  mseReviewFormNum5UserEmail                        String? @map("MSE_Review_Form_num5_User_Email") @db.VarChar(100)
  mseReviewFormNum5UserName                         String? @map("MSE_Review_Form_num5_User_Name") @db.VarChar(100)
  prefix                                            String? @map("Prefix") @db.VarChar(100)

  @@map("slate_reviews")
}

model SlateSuppinfo {
  fellowship10Amount      String? @map("Fellowship_10_Amount") @db.VarChar(255)
  fellowship10AppliedDate String? @map("Fellowship_10_Applied_Date") @db.VarChar(255)
  fellowship10AwardedDate String? @map("Fellowship_10_Awarded_Date") @db.VarChar(255)
  fellowship10Duration    String? @map("Fellowship_10_Duration") @db.VarChar(255)
  fellowship10Name        String? @map("Fellowship_10_Name") @db.VarChar(255)
  fellowship10Status      String? @map("Fellowship_10_Status") @db.VarChar(255)
  fellowship1Amount       String? @map("Fellowship_1_Amount") @db.VarChar(255)
  fellowship1AppliedDate  String? @map("Fellowship_1_Applied_Date") @db.VarChar(255)
  fellowship1AwardedDate  String? @map("Fellowship_1_Awarded_Date") @db.VarChar(255)
  fellowship1Duration     String? @map("Fellowship_1_Duration") @db.VarChar(255)
  fellowship1Name         String? @map("Fellowship_1_Name") @db.VarChar(255)
  fellowship1Status       String? @map("Fellowship_1_Status") @db.VarChar(255)
  fellowship2Amount       String? @map("Fellowship_2_Amount") @db.VarChar(255)
  fellowship2AppliedDate  String? @map("Fellowship_2_Applied_Date") @db.VarChar(255)
  fellowship2AwardedDate  String? @map("Fellowship_2_Awarded_Date") @db.VarChar(255)
  fellowship2Duration     String? @map("Fellowship_2_Duration") @db.VarChar(255)
  fellowship2Name         String? @map("Fellowship_2_Name") @db.VarChar(255)
  fellowship2Status       String? @map("Fellowship_2_Status") @db.VarChar(255)
  fellowship3Amount       String? @map("Fellowship_3_Amount") @db.VarChar(255)
  fellowship3AppliedDate  String? @map("Fellowship_3_Applied_Date") @db.VarChar(255)
  fellowship3AwardedDate  String? @map("Fellowship_3_Awarded_Date") @db.VarChar(255)
  fellowship3Duration     String? @map("Fellowship_3_Duration") @db.VarChar(255)
  fellowship3Name         String? @map("Fellowship_3_Name") @db.VarChar(255)
  fellowship3Status       String? @map("Fellowship_3_Status") @db.VarChar(255)
  fellowship4Amount       String? @map("Fellowship_4_Amount") @db.VarChar(255)
  fellowship4AppliedDate  String? @map("Fellowship_4_Applied_Date") @db.VarChar(255)
  fellowship4AwardedDate  String? @map("Fellowship_4_Awarded_Date") @db.VarChar(255)
  fellowship4Duration     String? @map("Fellowship_4_Duration") @db.VarChar(255)
  fellowship4Name         String? @map("Fellowship_4_Name") @db.VarChar(255)
  fellowship4Status       String? @map("Fellowship_4_Status") @db.VarChar(255)
  fellowship5Amount       String? @map("Fellowship_5_Amount") @db.VarChar(255)
  fellowship5AppliedDate  String? @map("Fellowship_5_Applied_Date") @db.VarChar(255)
  fellowship5AwardedDate  String? @map("Fellowship_5_Awarded_Date") @db.VarChar(255)
  fellowship5Duration     String? @map("Fellowship_5_Duration") @db.VarChar(255)
  fellowship5Name         String? @map("Fellowship_5_Name") @db.VarChar(255)
  fellowship5Status       String? @map("Fellowship_5_Status") @db.VarChar(255)
  fellowship6Amount       String? @map("Fellowship_6_Amount") @db.VarChar(255)
  fellowship6AppliedDate  String? @map("Fellowship_6_Applied_Date") @db.VarChar(255)
  fellowship6AwardedDate  String? @map("Fellowship_6_Awarded_Date") @db.VarChar(255)
  fellowship6Duration     String? @map("Fellowship_6_Duration") @db.VarChar(255)
  fellowship6Name         String? @map("Fellowship_6_Name") @db.VarChar(255)
  fellowship6Status       String? @map("Fellowship_6_Status") @db.VarChar(255)
  fellowship7Amount       String? @map("Fellowship_7_Amount") @db.VarChar(255)
  fellowship7AppliedDate  String? @map("Fellowship_7_Applied_Date") @db.VarChar(255)
  fellowship7AwardedDate  String? @map("Fellowship_7_Awarded_Date") @db.VarChar(255)
  fellowship7Duration     String? @map("Fellowship_7_Duration") @db.VarChar(255)
  fellowship7Name         String? @map("Fellowship_7_Name") @db.VarChar(255)
  fellowship7Status       String? @map("Fellowship_7_Status") @db.VarChar(255)
  fellowship8Amount       String? @map("Fellowship_8_Amount") @db.VarChar(255)
  fellowship8AppliedDate  String? @map("Fellowship_8_Applied_Date") @db.VarChar(255)
  fellowship8AwardedDate  String? @map("Fellowship_8_Awarded_Date") @db.VarChar(255)
  fellowship8Duration     String? @map("Fellowship_8_Duration") @db.VarChar(255)
  fellowship8Name         String? @map("Fellowship_8_Name") @db.VarChar(255)
  fellowship8Status       String? @map("Fellowship_8_Status") @db.VarChar(255)
  fellowship9Amount       String? @map("Fellowship_9_Amount") @db.VarChar(255)
  fellowship9AppliedDate  String? @map("Fellowship_9_Applied_Date") @db.VarChar(255)
  fellowship9AwardedDate  String? @map("Fellowship_9_Awarded_Date") @db.VarChar(255)
  fellowship9Duration     String? @map("Fellowship_9_Duration") @db.VarChar(255)
  fellowship9Name         String? @map("Fellowship_9_Name") @db.VarChar(255)
  fellowship9Status       String? @map("Fellowship_9_Status") @db.VarChar(255)
  first                   String? @map("First") @db.VarChar(255)
  hasFellowships          String? @map("Has_Fellowships") @db.VarChar(255)
  id                      String  @id @default(cuid()) @map("Application_Slate_GUID") @db.VarChar(255)
  last                    String? @map("Last") @db.VarChar(255)
  learnAboutOther         String? @map("Learn_About_Other") @db.VarChar(255)
  learnAboutUs            String? @map("Learn_About_Us") @db.VarChar(255)
  middle                  String? @map("Middle") @db.VarChar(255)
  prefix                  String? @map("Prefix") @db.VarChar(255)
  videoEssayAccessCode    String? @map("Video_Essay_Access_Code") @db.VarChar(255)
  videoEssayUrl           String? @map("Video_Essay_URL") @db.VarChar(255)

  @@map("slate_suppinfo")
}

model SlateTestScore {
  first                   String? @map("First") @db.VarChar(255)
  greAnalyticalWriting    String? @map("GRE_Analytical_Writing") @db.VarChar(255)
  greAnalyticalWritingPct String? @map("GRE_Analytical_Writing_pct") @db.VarChar(255)
  greQuantitative         String? @map("GRE_Quantitative") @db.VarChar(255)
  greQuantitativePct      String? @map("GRE_Quantitative_pct") @db.VarChar(255)
  greVerbal               String? @map("GRE_Verbal") @db.VarChar(255)
  greVerbalPct            String? @map("GRE_Verbal_pct") @db.VarChar(255)
  id                      String  @id @default(cuid()) @map("Application_Slate_GUID") @db.VarChar(255)
  last                    String? @map("Last") @db.VarChar(255)
  middle                  String? @map("Middle") @db.VarChar(255)
  prefix                  String? @map("Prefix") @db.VarChar(255)

  @@map("slate_test_scores")
}

model SlateToefl {
  first                           String? @map("First") @db.VarChar(255)
  id                              String  @id @default(cuid()) @map("Application_Slate_GUID") @db.VarChar(255)
  last                            String? @map("Last") @db.VarChar(255)
  middle                          String? @map("Middle") @db.VarChar(255)
  prefix                          String? @map("Prefix") @db.VarChar(255)
  toeflListening                  String? @map("TOEFL_Listening") @db.VarChar(255)
  toeflReading                    String? @map("TOEFL_Reading") @db.VarChar(255)
  toeflSpeaking                   String? @map("TOEFL_Speaking") @db.VarChar(255)
  toeflStructureWrittenExpression String? @map("TOEFL_Structure_Written_Expression") @db.VarChar(255)
  toeflTotal                      String? @map("TOEFL_Total") @db.VarChar(255)

  @@map("slate_toefl")
}

model SpecialConsideration {
  application          Application @relation(fields: [application_id], references: [id])
  application_id       Int
  id                   String      @id @default(cuid())
  reviewerId           Int         @map("reviewer_id")
  specialConsideration Int         @default(0) @map("special_consideration") @db.TinyInt()

  @@unique([application_id, reviewerId])
  @@map("special_consideration")
}

model State {
  abbrev    String? @db.VarChar(8)
  countryId Int?    @map("country_id")
  id        Int     @id @default(autoincrement())
  name      String? @db.VarChar(100)

  @@index([countryId], map: "country_id")
  @@map("states")
}

model StudentDecision {
  acceptReasons        String?                      @map("accept_reasons") @db.Text()
  admin                Int?                         @db.MediumInt()
  affiliatedCmu        Boolean?                     @map("affiliated_cmu")
  affiliatedCmutxt     String?                      @map("affiliated_cmutxt") @db.TinyText()
  application          Application                  @relation(fields: [application_id], references: [id])
  application_id       Int
  asian                Int?                         @db.TinyInt()
  attendAcc            String?                      @map("attend_acc") @db.VarChar(10)
  black                Int?                         @db.TinyInt()
  cau                  Int?                         @db.TinyInt()
  citCountry           String?                      @db.VarChar(255)
  cityP                String?                      @db.VarChar(255)
  countryP             String?                      @db.VarChar(255)
  decision             EnumStudentDecisionDecision?
  decisionReasons      String?                      @map("decision_reasons") @db.Text()
  deferralReasons      String?                      @map("deferral_reasons") @db.Text()
  deferralSemester     String?                      @map("deferral_semester") @db.VarChar(12)
  deferralYear         String?                      @map("deferral_year") @db.VarChar(4)
  dob                  DateTime?                    @db.Date()
  doneDiff             String?                      @db.Text()
  errors               String?                      @db.Text()
  gender               String?                      @db.VarChar(255)
  genderOther          String?                      @map("gender_other") @db.VarChar(255)
  hispanic             Int?                         @db.TinyInt()
  hpi                  Int?                         @db.TinyInt()
  id                   String                       @id @default(cuid())
  legalName            String?                      @db.VarChar(255)
  maritalOther         String?                      @map("marital_other") @db.VarChar(255)
  maritalStatus        String?                      @map("marital_status") @db.VarChar(255)
  natAm                Int?                         @db.TinyInt()
  optComm              Int?                         @db.TinyInt()
  otherChoice          String?                      @map("other_choice") @db.Text()
  otherChoiceLocation  String?                      @map("other_choice_location") @db.VarChar(255)
  otherSchoolsAccepted String?                      @map("other_schools_accepted") @db.Text()
  otherSchoolsApplied  String?                      @map("other_schools_applied") @db.Text()
  postalP              String?                      @db.VarChar(255)
  prefEmail            String?                      @db.VarChar(255)
  prefName             String?                      @db.VarChar(255)
  progLength           String?                      @map("prog_length") @db.VarChar(10)
  programId            Int                          @map("program_id")
  pronoun              String?                      @db.VarChar(50)
  pronounOther         String?                      @map("pronoun_other") @db.VarChar(50)
  stateP               String?                      @db.VarChar(255)
  streetP1             String?                      @db.VarChar(255)
  streetP2             String?                      @db.VarChar(255)
  streetP3             String?                      @db.VarChar(255)
  streetP4             String?                      @db.VarChar(255)
  submitted            Boolean?
  submittedDate        DateTime                     @default(now()) @map("submitted_date") @db.DateTime(0)
  telMobile            String?                      @db.VarChar(25)
  visit                Boolean?
  visitComments        String?                      @map("visit_comments") @db.Text()
  visitHelpful         Boolean?                     @map("visit_helpful")

  @@unique([application_id, programId])
  @@map("student_decision")
}

model StudentDecisionHistory {
  application      Application? @relation(fields: [application_id], references: [id])
  application_id   Int?
  decision         String?      @db.VarChar(50)
  deferralSemester String?      @map("deferral_semester") @db.VarChar(12)
  deferralYear     String?      @map("deferral_year") @db.VarChar(4)
  id               Int          @id @default(autoincrement())
  insertDate       DateTime     @default(now()) @map("insert_date") @db.DateTime(0)
  programId        Int?         @map("program_id")

  @@index([application_id, programId], map: "application_id_program_id")
  @@map("student_decision_history")
}

model StudentDecisionUniversity {
  accepted      Boolean?
  applicationId Int      @map("application_id")
  id            Int      @id @default(autoincrement())
  name          String   @db.VarChar(100)
  programId     Int      @map("program_id")

  @@index([applicationId, programId], map: "Index 1")
  @@map("student_decision_universities")
}

model Systemenv {
  appbaseprice Decimal  @default(50.00) @db.Decimal(5, 2)
  coorduserId  Int      @map("coorduser_id")
  domainId     Int      @map("domain_id")
  expdate      DateTime @db.DateTime(0)
  expdate2     DateTime @db.DateTime(0)
  id           Int      @id @default(autoincrement())
  sysemail     String   @db.VarChar(255)

  @@index([coorduserId], map: "coorduser_id")
  @@index([domainId], map: "domain_id")
  @@map("systemenv")
}

model Tag {
  category  String?        @db.TinyText()
  id        Int            @id @default(autoincrement())
  name      String?        @db.Text()
  parent    String?        @db.TinyText()
  sticky    EnumTagSticky?
  typeField String?        @map("type") @db.TinyText()

  @@map("tag")
}

model TagMember {
  application   Application? @relation(fields: [appId], references: [id])
  appId         Int?
  id            Int          @id @default(autoincrement())
  tagInstanceId Int?

  @@unique([tagInstanceId, appId], map: "tagInstanceId_appId")
  @@index([appId], map: "appId")
  @@map("tagMembers")
}

model TagInstance {
  department Int?
  id         Int                    @id @default(autoincrement())
  owner      Int?
  period     Int?
  status     EnumTagInstanceStatus?
  tagId      Int?

  @@map("tag_instance")
}

model TeachingExperience {
  address       String?   @db.VarChar(255)
  applicationId Int       @map("application_id")
  coursesTaught String?   @map("courses_taught") @db.VarChar(255)
  endDate       String?   @map("end_date") @db.VarChar(20)
  id            Int       @id @default(autoincrement())
  institution   String?   @db.VarChar(50)
  orderEntered  Int?      @map("order_entered") @db.UnsignedTinyInt()
  startDate     DateTime? @map("start_date") @db.Date()

  @@index([applicationId], map: "application_id")
  @@map("teaching_experience")
}

model TesttableforBanshee {
  id Int @id @default(autoincrement()) @map("FieldName") @db.UnsignedTinyInt()

  @@map("testtablefor banshee")
}

model TestusersInfo {
  additionalinfo       String?   @db.VarChar(255)
  addressCurCity       String?   @map("address_cur_city") @db.VarChar(50)
  addressCurCountry    Int?      @map("address_cur_country")
  addressCurPcode      String?   @map("address_cur_pcode") @db.VarChar(10)
  addressCurState      Int?      @map("address_cur_state")
  addressCurStreet1    String?   @map("address_cur_street1") @db.VarChar(100)
  addressCurStreet2    String?   @map("address_cur_street2") @db.VarChar(100)
  addressCurStreet3    String?   @map("address_cur_street3") @db.VarChar(100)
  addressCurStreet4    String?   @map("address_cur_street4") @db.VarChar(100)
  addressCurTel        String?   @map("address_cur_tel") @db.VarChar(20)
  addressCurTelMobile  String?   @map("address_cur_tel_mobile") @db.VarChar(20)
  addressCurTelWork    String?   @map("address_cur_tel_work") @db.VarChar(20)
  addressPermCity      String?   @map("address_perm_city") @db.VarChar(50)
  addressPermCountry   Int?      @map("address_perm_country")
  addressPermPcode     String?   @map("address_perm_pcode") @db.VarChar(10)
  addressPermState     Int?      @map("address_perm_state")
  addressPermStreet1   String?   @map("address_perm_street1") @db.VarChar(100)
  addressPermStreet2   String?   @map("address_perm_street2") @db.VarChar(100)
  addressPermStreet3   String?   @map("address_perm_street3") @db.VarChar(100)
  addressPermStreet4   String?   @map("address_perm_street4") @db.VarChar(100)
  addressPermTel       String?   @map("address_perm_tel") @db.VarChar(20)
  addressPermTelMobile String?   @map("address_perm_tel_mobile") @db.VarChar(20)
  addressPermTelWork   String?   @map("address_perm_tel_work") @db.VarChar(20)
  buckleyWaive         Boolean?  @map("buckley_waive")
  citCountry           Int?      @map("cit_country")
  company              String?   @db.VarChar(250)
  curPaRes             String?   @map("cur_pa_res") @db.Char(1)
  dob                  DateTime? @db.Date()
  ethnicity            Int?
  ethtest              Int?      @db.UnsignedInt()
  gender               String?   @db.Char(1)
  homepage             String?   @db.VarChar(255)
  id                   Int       @id @default(autoincrement())
  userId               Int       @map("user_id")
  visastatus           Int?

  @@map("testusers_info")
  @@ignore()
}

model Toefl {
  applicationId   Int       @map("application_id")
  datafileId      Int?      @map("datafile_id")
  essay           Decimal?  @db.Decimal(3, 1)
  essaymb         Int?
  id              Int       @id @default(autoincrement())
  scorereceived   Boolean?
  section1        Int?
  section1mb      Int?
  section2        Int?
  section2mb      Int?
  section3        Int?
  section3mb      Int?
  testdate        DateTime? @db.Date()
  toeflEmail      String?   @db.VarChar(250)
  toeflPaperEmail String?   @db.VarChar(250)
  total           Int?
  totalmb         Int?
  typeField       String?   @map("type") @db.VarChar(3)

  @@index([applicationId], map: "application_id")
  @@index([datafileId], map: "datafile_id")
  @@map("toefl")
}

model ToeflEssential {
  applicationId    Int       @map("application_id")
  datafileId       Int?      @map("datafile_id")
  id               Int       @id @default(autoincrement())
  listeningscore   Int?      @db.UnsignedTinyInt()
  listeningscoremb Int?      @db.UnsignedTinyInt()
  overallscore     Float?
  overallscoremb   Float?
  readingscore     Int?      @db.UnsignedTinyInt()
  readingscoremb   Int?      @db.UnsignedTinyInt()
  scorereceived    Int?      @default(0) @db.TinyInt()
  speakingscore    Int?      @db.UnsignedTinyInt()
  speakingscoremb  Int?      @db.UnsignedTinyInt()
  testdate         DateTime? @default(dbgenerated()) @db.Date()
  testEmail        String?   @db.VarChar(250)
  url              String?   @db.Text()
  writingscore     Int?      @db.UnsignedTinyInt()
  writingscoremb   Int?      @db.UnsignedTinyInt()

  @@index([applicationId], map: "idx_ieltsscore_application_id")
  @@map("toeflEssentials")
}

model ToeflItpPlus {
  applicationId  Int       @map("application_id")
  datafileId     Int?      @map("datafile_id")
  id             Int       @id @default(autoincrement())
  listeningscore Int?      @db.UnsignedTinyInt()
  overallscore   Int?
  readingscore   Int?      @db.UnsignedTinyInt()
  scorereceived  Int?      @default(0) @db.TinyInt()
  testdate       DateTime? @default(dbgenerated()) @db.Date()
  testEmail      String?   @db.VarChar(250)
  url            String?   @db.Text()
  writingscore   Int?      @db.UnsignedTinyInt()

  @@index([applicationId], map: "idx_ieltsscore_application_id")
  @@map("toeflItpPlus")
}

model Unit {
  applicationBasePrice    Decimal?     @map("application_base_price") @db.Decimal(5, 2)
  applicationProgramPrice Decimal?     @map("application_program_price") @db.Decimal(5, 2)
  domainUnit              DomainUnit[]
  id                      Int          @id @default(autoincrement()) @map("unit_id")
  parentUnitId            Int?         @map("parent_unit_id")
  unitCcEmail             String?      @map("unit_cc_email") @db.VarChar(100)
  unitDescription         String?      @map("unit_description") @db.VarChar(255)
  unitName                String       @map("unit_name") @db.VarChar(100)
  unitNameShort           String       @map("unit_name_short") @db.VarChar(20)
  unitOracleString        String?      @map("unit_oracle_string") @db.VarChar(50)
  unitSystemEmail         String?      @map("unit_system_email") @db.VarChar(100)
  unitUrl                 String?      @map("unit_url") @db.VarChar(255)

  @@map("unit")
}

model UnitPeriod {
  id       String @id @default(cuid())
  periodId Int    @map("period_id")
  unitId   Int    @map("unit_id")

  @@unique([unitId, periodId])
  @@index([periodId], map: "fk_unit_period_period")
  @@map("unit_period")
}

model UnitRole {
  id                 String @id @default(cuid())
  luUsersUsertypesId Int    @map("lu_users_usertypes_id")
  roleId             Int    @map("role_id")
  unitId             Int    @map("unit_id")
  usersId            Int    @map("users_id")

  @@unique([unitId, usersId, roleId])
  @@index([roleId], map: "fk_unit_role_role")
  @@index([usersId], map: "fk_unit_role_users")
  @@map("unit_role")
}

model UsHsStatus {
  anyUsHs        Int? @db.TinyInt()
  appId          Int
  firstGen       Int? @db.TinyInt()
  firstGenGrad   Int? @db.TinyInt()
  id             Int  @id @default(autoincrement())
  pell           Int? @db.TinyInt()
  permZipGrad    Int? @db.UnsignedInt()
  ugFedWorkStudy Int? @db.TinyInt()
  usHSGrad       Int? @db.TinyInt()

  @@index([appId], map: "appId")
  @@map("usHSStatus")
}

model User {
  applicationAdminNote ApplicationAdminNote[]
  email                String                 @db.VarChar(150)
  firstname            String                 @db.VarChar(40)
  firstNamePref        String?                @db.VarChar(50)
  guid                 String                 @db.VarChar(100)
  id                   Int                    @id @default(autoincrement())
  initials             String?                @db.VarChar(4)
  lastname             String                 @db.VarChar(40)
  luUsersUsertypes     LuUsersUsertype[]
  middlename           String?                @db.VarChar(20)
  signupDate           DateTime               @map("signup_date") @db.Date()
  suffix               String?                @db.VarChar(40)
  title                String?                @db.VarChar(50)
  verified             Boolean                @default(false)

  @@index([email], map: "email")
  @@index([firstname, lastname], map: "firstname")
  @@index([firstname, lastname], map: "fullname")
  @@index([lastname, firstname], map: "lastname")
  @@map("users")
}

model UsersInfo {
  additionalinfo               String?   @db.VarChar(255)
  addressCurCity               String?   @map("address_cur_city") @db.VarChar(50)
  addressCurCountry            Int?      @map("address_cur_country")
  addressCurPcode              String?   @map("address_cur_pcode") @db.VarChar(10)
  addressCurState              Int?      @map("address_cur_state")
  addressCurStreet1            String?   @map("address_cur_street1") @db.VarChar(100)
  addressCurStreet2            String?   @map("address_cur_street2") @db.VarChar(100)
  addressCurStreet3            String?   @map("address_cur_street3") @db.VarChar(100)
  addressCurStreet4            String?   @map("address_cur_street4") @db.VarChar(100)
  addressCurTel                String?   @map("address_cur_tel") @db.VarChar(20)
  addressCurTelMobile          String?   @map("address_cur_tel_mobile") @db.VarChar(20)
  addressCurTelWork            String?   @map("address_cur_tel_work") @db.VarChar(20)
  addressPermCity              String?   @map("address_perm_city") @db.VarChar(50)
  addressPermCountry           Int?      @map("address_perm_country")
  addressPermPcode             String?   @map("address_perm_pcode") @db.VarChar(10)
  addressPermState             Int?      @map("address_perm_state")
  addressPermStreet1           String?   @map("address_perm_street1") @db.VarChar(100)
  addressPermStreet2           String?   @map("address_perm_street2") @db.VarChar(100)
  addressPermStreet3           String?   @map("address_perm_street3") @db.VarChar(100)
  addressPermStreet4           String?   @map("address_perm_street4") @db.VarChar(100)
  addressPermTel               String?   @map("address_perm_tel") @db.VarChar(20)
  addressPermTelMobile         String?   @map("address_perm_tel_mobile") @db.VarChar(20)
  addressPermTelWork           String?   @map("address_perm_tel_work") @db.VarChar(20)
  buckleyWaive                 Boolean?  @map("buckley_waive")
  citCountry                   Int?      @map("cit_country")
  citCountrySecond             Int?      @map("cit_country_second")
  company                      String?   @db.VarChar(250)
  curPaRes                     String?   @map("cur_pa_res") @db.Char(1)
  dob                          DateTime? @db.Date()
  ethnicity                    Int?
  firstGenGrad                 Boolean?
  firstGenUgrad                Boolean?
  gender                       String?   @db.Char(1)
  homepage                     String?   @db.VarChar(255)
  id                           Int       @id @default(autoincrement())
  nativeTongue                 String?   @map("native_tongue") @db.VarChar(50)
  qqNumber                     String?   @map("qq_number") @db.VarChar(255)
  selfGender                   String?   @db.VarChar(50)
  selfGenderOther              String?   @db.VarChar(50)
  usCitizenOrPermanentResident Int?      @map("us_citizen_or_permanent_resident") @db.TinyInt()
  userId                       Int       @map("user_id")
  usPerm                       Int?
  visastatus                   Int?

  @@index([addressCurCountry], map: "address_cur_country")
  @@index([addressPermCountry], map: "address_perm_country")
  @@index([citCountry], map: "cit_country")
  @@index([userId], map: "user_id")
  @@map("users_info")
}

model UsersOrig {
  email      String    @default("") @db.VarChar(150)
  firstname  String    @default("") @db.VarChar(40)
  guid       String?   @db.VarChar(150)
  id         Int       @id @default(autoincrement())
  initials   String?   @db.VarChar(4)
  lastname   String    @default("") @db.VarChar(40)
  middlename String?   @db.VarChar(20)
  password   String    @default("") @db.VarChar(50)
  signupDate DateTime? @map("signup_date") @db.Date()
  title      String?   @db.VarChar(21)
  username   String?   @db.VarChar(150)
  verified   Boolean   @default(false)

  @@index([email(length: 25)], map: "email")
  @@index([firstname], map: "firstname")
  @@index([firstname, lastname], map: "fullname")
  @@index([lastname], map: "lastname")
  @@map("users_orig")
}

model UsersRemoteAuthString {
  id               String @id @default(cuid())
  remoteAuthString String @map("remote_auth_string") @db.VarChar(100)
  usersId          Int    @map("users_id")

  @@unique([usersId, remoteAuthString])
  @@index([remoteAuthString], map: "remote_auth_string")
  @@map("users_remote_auth_string")
}

model Usersinst {
  applicationId       Int?      @map("application_id")
  classRank           String?   @map("class_rank") @db.VarChar(50)
  collegeName         String?   @map("college_name") @db.VarChar(255)
  convertedGpa        String?   @map("converted_gpa") @db.VarChar(10)
  datafileId          Int?      @map("datafile_id")
  dateEntered         DateTime? @map("date_entered") @db.Date()
  dateGrad            DateTime? @map("date_grad") @db.Date()
  dateLeft            DateTime? @map("date_left") @db.Date()
  degree              String?   @db.VarChar(50)
  degreeLevel         Int?
  degreeLevelOther    String?   @db.VarChar(50)
  educationtype       Int
  gpa                 String?   @db.VarChar(5)
  gpaMajor            String?   @map("gpa_major") @db.VarChar(5)
  gpaScale            Int?      @map("gpa_scale")
  id                  Int       @id @default(autoincrement())
  instituteId         Int?      @map("institute_id")
  joint               Int?      @db.TinyInt()
  jointInstituteId    Int?
  major1              String?   @db.VarChar(120)
  major2              String?   @db.VarChar(120)
  major3              String?   @db.VarChar(120)
  minor1              String?   @db.VarChar(120)
  minor2              String?   @db.VarChar(120)
  transscriptreceived Boolean?
  userId              Int       @map("user_id")

  @@index([datafileId], map: "datafile_id")
  @@index([educationtype], map: "educationtype")
  @@index([applicationId], map: "fk_usersinst_application")
  @@index([instituteId], map: "institute_id")
  @@index([userId], map: "user_id")
  @@map("usersinst")
}

model Usertype {
  description String? @db.VarChar(200)
  id          Int     @id @default(autoincrement())
  name        String  @db.VarChar(50)

  @@map("usertypes")
}

model VeteranInfo {
  branch       String?   @db.VarChar(50)
  discharge    String?   @db.VarChar(4)
  enddate      DateTime? @db.Date()
  id           Int       @id @default(autoincrement())
  startdate    DateTime? @db.Date()
  status       String?   @db.VarChar(50)
  statusEnroll String?   @map("status_enroll") @db.VarChar(50)
  userId       Int       @map("user_id")

  @@map("veteran_info")
}

model VideoEssay {
  accessCode    String? @map("access_code") @db.VarChar(50)
  applicationId Int     @unique @map("application_id")
  id            Int     @id @default(autoincrement())
  url           String  @db.VarChar(255)

  @@map("video_essay")
}

model Visatype {
  addedFor    String? @db.Text()
  description String? @db.Text()
  id          Int     @id @default(autoincrement())
  name        String  @db.VarChar(50)
  short       String  @db.VarChar(10)

  @@map("visatypes")
}

model Voucher {
  active        Boolean @default(false)
  allowMultiple Boolean @default(false)
  code          String  @db.Char(255)
  id            Int     @id @default(autoincrement())
  prettyCode    String? @db.Char(255)
  prog          String? @db.Char(255)

  @@map("voucher")
}

model VoucherApplication {
  appId     Int
  dateUsed  DateTime @db.DateTime(0)
  id        Int      @id @default(autoincrement())
  voucherId Int

  @@index([appId], map: "appId")
  @@map("voucherApplication")
}

model VoucherApplicationError {
  allowMultiple Int?    @db.TinyInt()
  appId         Int
  code          String  @db.VarChar(50)
  errMsg        String? @db.TinyText()
  id            Int     @id @default(autoincrement())
  vaId          Int?

  @@map("voucherApplicationError")
}

model VoucherProgram {
  id        Int @id @default(autoincrement())
  programId Int
  voucherId Int

  @@map("voucherProgram")
}

model VoucherType {
  description String @db.Char(255)
  id          Int    @id @default(autoincrement())
  prefix      String @db.Char(2)

  @@map("voucherType")
}

model WaiverApplication {
  applicationId Int
  createDate    DateTime? @default(now()) @db.DateTime(0)
  datafileId    Int?      @map("datafile_id")
  id            Int       @id @default(autoincrement())
  orgId         Int
  updateDate    DateTime? @default(now()) @db.DateTime(0)

  @@map("waiver_application")
}

model WaiverOrg {
  active Int?    @default(1) @db.TinyInt()
  id     Int     @id @default(autoincrement())
  name   String? @db.Char(255)

  @@index([name], map: "name")
  @@map("waiver_org")
}

enum EnumMhciPrereqPrereqType {
  design
  programming
  statistics
}

enum EnumMhciPrereqStatus2 {
  Student_Saved
  Not_Submitted
  Student_Submitted
  Student_Edited
  Reviewer_Responded
}

enum EnumMhciPrereqStudentAssessment {
  fulfilledTrue
  fulfilledFalse
}

enum EnumMhciPrereqsCourseCourseType {
  Design
  Programming
  Multi_way_ANOVA
  Single_way_ANOVA
  Multi_factor_regression
  Single_factor_regression
}

enum EnumMhciPrereqsReferenceAnovaKnowledge {
  No_knowledge
  Not_confident
  Direct_knowledge
}

enum EnumMhciPrereqsReferenceRegressionKnowledge {
  No_knowledge
  Not_confident
  Direct_knowledge
}

enum EnumMhciPrereqsStatusReviewerStatus {
  Not_Submitted
  Submitted
  In_progress
  Approved_plan_
  Fulfilled__undergraduate_degree
  Fulfilled_
}

enum EnumMhciPrereqsStatusStatus3 {
  Saved_Not_Submitted
  Student_Submitted
  Student_Edited
  Reviewer_Responded
}

enum EnumPaymentPaymentStatus {
  pending
  paid
  refunded
  void
}

enum EnumPaymentAuditPaymentStatus {
  pending
  paid
  refunded
  void
}

enum EnumPaymentNewPaymentStatus {
  pending
  paid
  refunded
  void
}

enum EnumPromotionHistoryPromotionMethod {
  default
  voting
  promotion
  demotion
}

enum EnumPromotionHistoryCopyPromotionMethod {
  default
  voting
  promotion
  demotion
}

enum EnumRegistrationFeePaymentPaymentStatus {
  pending
  paid
  refunded
  void
}

enum EnumStudentDecisionDecision {
  accept
  decline
  defer
  matriculate
}

enum EnumTagSticky {
  static
  dynamic
}

enum EnumTagInstanceStatus {
  open
  closed
}
