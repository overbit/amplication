/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, SlateTestScore as PrismaSlateTestScore } from "@prisma/client";

export class SlateTestScoreServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.SlateTestScoreCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.SlateTestScoreCountArgs>
  ): Promise<number> {
    return this.prisma.slateTestScore.count(args);
  }

  async slateTestScores<T extends Prisma.SlateTestScoreFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.SlateTestScoreFindManyArgs>
  ): Promise<PrismaSlateTestScore[]> {
    return this.prisma.slateTestScore.findMany(args);
  }
  async slateTestScore<T extends Prisma.SlateTestScoreFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.SlateTestScoreFindUniqueArgs>
  ): Promise<PrismaSlateTestScore | null> {
    return this.prisma.slateTestScore.findUnique(args);
  }
  async createSlateTestScore<T extends Prisma.SlateTestScoreCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.SlateTestScoreCreateArgs>
  ): Promise<PrismaSlateTestScore> {
    return this.prisma.slateTestScore.create<T>(args);
  }
  async updateSlateTestScore<T extends Prisma.SlateTestScoreUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.SlateTestScoreUpdateArgs>
  ): Promise<PrismaSlateTestScore> {
    return this.prisma.slateTestScore.update<T>(args);
  }
  async deleteSlateTestScore<T extends Prisma.SlateTestScoreDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.SlateTestScoreDeleteArgs>
  ): Promise<PrismaSlateTestScore> {
    return this.prisma.slateTestScore.delete(args);
  }
}
