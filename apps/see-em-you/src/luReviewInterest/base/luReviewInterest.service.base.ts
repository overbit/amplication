/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  LuReviewInterest as PrismaLuReviewInterest,
} from "@prisma/client";

export class LuReviewInterestServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.LuReviewInterestCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.LuReviewInterestCountArgs>
  ): Promise<number> {
    return this.prisma.luReviewInterest.count(args);
  }

  async luReviewInterests<T extends Prisma.LuReviewInterestFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.LuReviewInterestFindManyArgs>
  ): Promise<PrismaLuReviewInterest[]> {
    return this.prisma.luReviewInterest.findMany(args);
  }
  async luReviewInterest<T extends Prisma.LuReviewInterestFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.LuReviewInterestFindUniqueArgs>
  ): Promise<PrismaLuReviewInterest | null> {
    return this.prisma.luReviewInterest.findUnique(args);
  }
  async createLuReviewInterest<T extends Prisma.LuReviewInterestCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.LuReviewInterestCreateArgs>
  ): Promise<PrismaLuReviewInterest> {
    return this.prisma.luReviewInterest.create<T>(args);
  }
  async updateLuReviewInterest<T extends Prisma.LuReviewInterestUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.LuReviewInterestUpdateArgs>
  ): Promise<PrismaLuReviewInterest> {
    return this.prisma.luReviewInterest.update<T>(args);
  }
  async deleteLuReviewInterest<T extends Prisma.LuReviewInterestDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.LuReviewInterestDeleteArgs>
  ): Promise<PrismaLuReviewInterest> {
    return this.prisma.luReviewInterest.delete(args);
  }
}
