/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, DecisionRank as PrismaDecisionRank } from "@prisma/client";

export class DecisionRankServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.DecisionRankCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.DecisionRankCountArgs>
  ): Promise<number> {
    return this.prisma.decisionRank.count(args);
  }

  async decisionRanks<T extends Prisma.DecisionRankFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.DecisionRankFindManyArgs>
  ): Promise<PrismaDecisionRank[]> {
    return this.prisma.decisionRank.findMany(args);
  }
  async decisionRank<T extends Prisma.DecisionRankFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.DecisionRankFindUniqueArgs>
  ): Promise<PrismaDecisionRank | null> {
    return this.prisma.decisionRank.findUnique(args);
  }
  async createDecisionRank<T extends Prisma.DecisionRankCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.DecisionRankCreateArgs>
  ): Promise<PrismaDecisionRank> {
    return this.prisma.decisionRank.create<T>(args);
  }
  async updateDecisionRank<T extends Prisma.DecisionRankUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.DecisionRankUpdateArgs>
  ): Promise<PrismaDecisionRank> {
    return this.prisma.decisionRank.update<T>(args);
  }
  async deleteDecisionRank<T extends Prisma.DecisionRankDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.DecisionRankDeleteArgs>
  ): Promise<PrismaDecisionRank> {
    return this.prisma.decisionRank.delete(args);
  }
}
