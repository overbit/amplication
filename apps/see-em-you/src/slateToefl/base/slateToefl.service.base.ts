/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, SlateToefl as PrismaSlateToefl } from "@prisma/client";

export class SlateToeflServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.SlateToeflCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.SlateToeflCountArgs>
  ): Promise<number> {
    return this.prisma.slateToefl.count(args);
  }

  async slateToefls<T extends Prisma.SlateToeflFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.SlateToeflFindManyArgs>
  ): Promise<PrismaSlateToefl[]> {
    return this.prisma.slateToefl.findMany(args);
  }
  async slateToefl<T extends Prisma.SlateToeflFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.SlateToeflFindUniqueArgs>
  ): Promise<PrismaSlateToefl | null> {
    return this.prisma.slateToefl.findUnique(args);
  }
  async createSlateToefl<T extends Prisma.SlateToeflCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.SlateToeflCreateArgs>
  ): Promise<PrismaSlateToefl> {
    return this.prisma.slateToefl.create<T>(args);
  }
  async updateSlateToefl<T extends Prisma.SlateToeflUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.SlateToeflUpdateArgs>
  ): Promise<PrismaSlateToefl> {
    return this.prisma.slateToefl.update<T>(args);
  }
  async deleteSlateToefl<T extends Prisma.SlateToeflDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.SlateToeflDeleteArgs>
  ): Promise<PrismaSlateToefl> {
    return this.prisma.slateToefl.delete(args);
  }
}
