/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, SlatePub as PrismaSlatePub } from "@prisma/client";

export class SlatePubServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.SlatePubCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.SlatePubCountArgs>
  ): Promise<number> {
    return this.prisma.slatePub.count(args);
  }

  async slatePubs<T extends Prisma.SlatePubFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.SlatePubFindManyArgs>
  ): Promise<PrismaSlatePub[]> {
    return this.prisma.slatePub.findMany(args);
  }
  async slatePub<T extends Prisma.SlatePubFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.SlatePubFindUniqueArgs>
  ): Promise<PrismaSlatePub | null> {
    return this.prisma.slatePub.findUnique(args);
  }
  async createSlatePub<T extends Prisma.SlatePubCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.SlatePubCreateArgs>
  ): Promise<PrismaSlatePub> {
    return this.prisma.slatePub.create<T>(args);
  }
  async updateSlatePub<T extends Prisma.SlatePubUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.SlatePubUpdateArgs>
  ): Promise<PrismaSlatePub> {
    return this.prisma.slatePub.update<T>(args);
  }
  async deleteSlatePub<T extends Prisma.SlatePubDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.SlatePubDeleteArgs>
  ): Promise<PrismaSlatePub> {
    return this.prisma.slatePub.delete(args);
  }
}
