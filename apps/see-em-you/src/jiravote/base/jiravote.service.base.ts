/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Jiravote } from "@prisma/client";

export class JiravoteServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.JiravoteCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.JiravoteCountArgs>
  ): Promise<number> {
    return this.prisma.jiravote.count(args);
  }

  async jiravotes<T extends Prisma.JiravoteFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.JiravoteFindManyArgs>
  ): Promise<Jiravote[]> {
    return this.prisma.jiravote.findMany(args);
  }
  async jiravote<T extends Prisma.JiravoteFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.JiravoteFindUniqueArgs>
  ): Promise<Jiravote | null> {
    return this.prisma.jiravote.findUnique(args);
  }
  async createJiravote<T extends Prisma.JiravoteCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.JiravoteCreateArgs>
  ): Promise<Jiravote> {
    return this.prisma.jiravote.create<T>(args);
  }
  async updateJiravote<T extends Prisma.JiravoteUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.JiravoteUpdateArgs>
  ): Promise<Jiravote> {
    return this.prisma.jiravote.update<T>(args);
  }
  async deleteJiravote<T extends Prisma.JiravoteDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.JiravoteDeleteArgs>
  ): Promise<Jiravote> {
    return this.prisma.jiravote.delete(args);
  }
}
