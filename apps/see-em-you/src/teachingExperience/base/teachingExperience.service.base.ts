/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  TeachingExperience as PrismaTeachingExperience,
} from "@prisma/client";

export class TeachingExperienceServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.TeachingExperienceCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.TeachingExperienceCountArgs>
  ): Promise<number> {
    return this.prisma.teachingExperience.count(args);
  }

  async teachingExperiences<T extends Prisma.TeachingExperienceFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.TeachingExperienceFindManyArgs>
  ): Promise<PrismaTeachingExperience[]> {
    return this.prisma.teachingExperience.findMany(args);
  }
  async teachingExperience<T extends Prisma.TeachingExperienceFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.TeachingExperienceFindUniqueArgs>
  ): Promise<PrismaTeachingExperience | null> {
    return this.prisma.teachingExperience.findUnique(args);
  }
  async createTeachingExperience<T extends Prisma.TeachingExperienceCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.TeachingExperienceCreateArgs>
  ): Promise<PrismaTeachingExperience> {
    return this.prisma.teachingExperience.create<T>(args);
  }
  async updateTeachingExperience<T extends Prisma.TeachingExperienceUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.TeachingExperienceUpdateArgs>
  ): Promise<PrismaTeachingExperience> {
    return this.prisma.teachingExperience.update<T>(args);
  }
  async deleteTeachingExperience<T extends Prisma.TeachingExperienceDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.TeachingExperienceDeleteArgs>
  ): Promise<PrismaTeachingExperience> {
    return this.prisma.teachingExperience.delete(args);
  }
}
