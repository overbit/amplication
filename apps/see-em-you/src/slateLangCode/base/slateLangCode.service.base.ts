/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, SlateLangCode as PrismaSlateLangCode } from "@prisma/client";

export class SlateLangCodeServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.SlateLangCodeCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.SlateLangCodeCountArgs>
  ): Promise<number> {
    return this.prisma.slateLangCode.count(args);
  }

  async slateLangCodes<T extends Prisma.SlateLangCodeFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.SlateLangCodeFindManyArgs>
  ): Promise<PrismaSlateLangCode[]> {
    return this.prisma.slateLangCode.findMany(args);
  }
  async slateLangCode<T extends Prisma.SlateLangCodeFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.SlateLangCodeFindUniqueArgs>
  ): Promise<PrismaSlateLangCode | null> {
    return this.prisma.slateLangCode.findUnique(args);
  }
  async createSlateLangCode<T extends Prisma.SlateLangCodeCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.SlateLangCodeCreateArgs>
  ): Promise<PrismaSlateLangCode> {
    return this.prisma.slateLangCode.create<T>(args);
  }
  async updateSlateLangCode<T extends Prisma.SlateLangCodeUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.SlateLangCodeUpdateArgs>
  ): Promise<PrismaSlateLangCode> {
    return this.prisma.slateLangCode.update<T>(args);
  }
  async deleteSlateLangCode<T extends Prisma.SlateLangCodeDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.SlateLangCodeDeleteArgs>
  ): Promise<PrismaSlateLangCode> {
    return this.prisma.slateLangCode.delete(args);
  }
}
