/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, SlateProgram as PrismaSlateProgram } from "@prisma/client";

export class SlateProgramServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.SlateProgramCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.SlateProgramCountArgs>
  ): Promise<number> {
    return this.prisma.slateProgram.count(args);
  }

  async slatePrograms<T extends Prisma.SlateProgramFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.SlateProgramFindManyArgs>
  ): Promise<PrismaSlateProgram[]> {
    return this.prisma.slateProgram.findMany(args);
  }
  async slateProgram<T extends Prisma.SlateProgramFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.SlateProgramFindUniqueArgs>
  ): Promise<PrismaSlateProgram | null> {
    return this.prisma.slateProgram.findUnique(args);
  }
  async createSlateProgram<T extends Prisma.SlateProgramCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.SlateProgramCreateArgs>
  ): Promise<PrismaSlateProgram> {
    return this.prisma.slateProgram.create<T>(args);
  }
  async updateSlateProgram<T extends Prisma.SlateProgramUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.SlateProgramUpdateArgs>
  ): Promise<PrismaSlateProgram> {
    return this.prisma.slateProgram.update<T>(args);
  }
  async deleteSlateProgram<T extends Prisma.SlateProgramDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.SlateProgramDeleteArgs>
  ): Promise<PrismaSlateProgram> {
    return this.prisma.slateProgram.delete(args);
  }
}
