/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, ToeflEssential as PrismaToeflEssential } from "@prisma/client";

export class ToeflEssentialServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.ToeflEssentialCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.ToeflEssentialCountArgs>
  ): Promise<number> {
    return this.prisma.toeflEssential.count(args);
  }

  async toeflEssentials<T extends Prisma.ToeflEssentialFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.ToeflEssentialFindManyArgs>
  ): Promise<PrismaToeflEssential[]> {
    return this.prisma.toeflEssential.findMany(args);
  }
  async toeflEssential<T extends Prisma.ToeflEssentialFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.ToeflEssentialFindUniqueArgs>
  ): Promise<PrismaToeflEssential | null> {
    return this.prisma.toeflEssential.findUnique(args);
  }
  async createToeflEssential<T extends Prisma.ToeflEssentialCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.ToeflEssentialCreateArgs>
  ): Promise<PrismaToeflEssential> {
    return this.prisma.toeflEssential.create<T>(args);
  }
  async updateToeflEssential<T extends Prisma.ToeflEssentialUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.ToeflEssentialUpdateArgs>
  ): Promise<PrismaToeflEssential> {
    return this.prisma.toeflEssential.update<T>(args);
  }
  async deleteToeflEssential<T extends Prisma.ToeflEssentialDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.ToeflEssentialDeleteArgs>
  ): Promise<PrismaToeflEssential> {
    return this.prisma.toeflEssential.delete(args);
  }
}
