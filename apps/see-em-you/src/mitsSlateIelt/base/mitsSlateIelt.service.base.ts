/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, MitsSlateIelt } from "@prisma/client";

export class MitsSlateIeltServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.MitsSlateIeltCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.MitsSlateIeltCountArgs>
  ): Promise<number> {
    return this.prisma.mitsSlateIelt.count(args);
  }

  async mitsSlateIelts<T extends Prisma.MitsSlateIeltFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.MitsSlateIeltFindManyArgs>
  ): Promise<MitsSlateIelt[]> {
    return this.prisma.mitsSlateIelt.findMany(args);
  }
  async mitsSlateIelt<T extends Prisma.MitsSlateIeltFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.MitsSlateIeltFindUniqueArgs>
  ): Promise<MitsSlateIelt | null> {
    return this.prisma.mitsSlateIelt.findUnique(args);
  }
  async createMitsSlateIelt<T extends Prisma.MitsSlateIeltCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.MitsSlateIeltCreateArgs>
  ): Promise<MitsSlateIelt> {
    return this.prisma.mitsSlateIelt.create<T>(args);
  }
  async updateMitsSlateIelt<T extends Prisma.MitsSlateIeltUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.MitsSlateIeltUpdateArgs>
  ): Promise<MitsSlateIelt> {
    return this.prisma.mitsSlateIelt.update<T>(args);
  }
  async deleteMitsSlateIelt<T extends Prisma.MitsSlateIeltDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.MitsSlateIeltDeleteArgs>
  ): Promise<MitsSlateIelt> {
    return this.prisma.mitsSlateIelt.delete(args);
  }
}
