/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  LuApplicationEtsgre as PrismaLuApplicationEtsgre,
} from "@prisma/client";

export class LuApplicationEtsgreServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.LuApplicationEtsgreCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.LuApplicationEtsgreCountArgs>
  ): Promise<number> {
    return this.prisma.luApplicationEtsgre.count(args);
  }

  async luApplicationEtsgres<T extends Prisma.LuApplicationEtsgreFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.LuApplicationEtsgreFindManyArgs>
  ): Promise<PrismaLuApplicationEtsgre[]> {
    return this.prisma.luApplicationEtsgre.findMany(args);
  }
  async luApplicationEtsgre<T extends Prisma.LuApplicationEtsgreFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.LuApplicationEtsgreFindUniqueArgs>
  ): Promise<PrismaLuApplicationEtsgre | null> {
    return this.prisma.luApplicationEtsgre.findUnique(args);
  }
  async createLuApplicationEtsgre<
    T extends Prisma.LuApplicationEtsgreCreateArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.LuApplicationEtsgreCreateArgs>
  ): Promise<PrismaLuApplicationEtsgre> {
    return this.prisma.luApplicationEtsgre.create<T>(args);
  }
  async updateLuApplicationEtsgre<
    T extends Prisma.LuApplicationEtsgreUpdateArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.LuApplicationEtsgreUpdateArgs>
  ): Promise<PrismaLuApplicationEtsgre> {
    return this.prisma.luApplicationEtsgre.update<T>(args);
  }
  async deleteLuApplicationEtsgre<
    T extends Prisma.LuApplicationEtsgreDeleteArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.LuApplicationEtsgreDeleteArgs>
  ): Promise<PrismaLuApplicationEtsgre> {
    return this.prisma.luApplicationEtsgre.delete(args);
  }
}
