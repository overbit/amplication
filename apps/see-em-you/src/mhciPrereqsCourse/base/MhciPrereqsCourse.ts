/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { Application } from "../../application/base/Application";
import {
  ValidateNested,
  IsEnum,
  IsInt,
  IsOptional,
  IsString,
} from "class-validator";
import { Type } from "class-transformer";
import { EnumMhciPrereqsCourseCourseType } from "./EnumMhciPrereqsCourseCourseType";
import { LuUsersUsertype } from "../../luUsersUsertype/base/LuUsersUsertype";
import { MhciPrereqsCourseDatafile } from "../../mhciPrereqsCourseDatafile/base/MhciPrereqsCourseDatafile";

@ObjectType()
class MhciPrereqsCourse {
  @ApiProperty({
    required: true,
    type: () => Application,
  })
  @ValidateNested()
  @Type(() => Application)
  application?: Application;

  @ApiProperty({
    required: true,
    enum: EnumMhciPrereqsCourseCourseType,
  })
  @IsEnum(EnumMhciPrereqsCourseCourseType)
  @Field(() => EnumMhciPrereqsCourseCourseType, {
    nullable: true,
  })
  course_type?:
    | "Design"
    | "Programming"
    | "Multi_way_ANOVA"
    | "Single_way_ANOVA"
    | "Multi_factor_regression"
    | "Single_factor_regression";

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Field(() => Number)
  id!: number;

  @ApiProperty({
    required: true,
    type: () => LuUsersUsertype,
  })
  @ValidateNested()
  @Type(() => LuUsersUsertype)
  luUsersUsertypes?: LuUsersUsertype;

  @ApiProperty({
    required: false,
    type: () => [MhciPrereqsCourseDatafile],
  })
  @ValidateNested()
  @Type(() => MhciPrereqsCourseDatafile)
  @IsOptional()
  mhciPrereqsCourseDatafiles?: Array<MhciPrereqsCourseDatafile>;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  periodId!: number | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  programId!: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  studentCourseGrade!: string | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  studentCourseInstitution!: string;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  studentCourseName!: string;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  studentCourseTime!: string;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Field(() => Number)
  submittedToReviewer!: number;
}

export { MhciPrereqsCourse as MhciPrereqsCourse };
