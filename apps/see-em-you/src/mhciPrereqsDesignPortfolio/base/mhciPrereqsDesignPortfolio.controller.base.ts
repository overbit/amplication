/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import * as common from "@nestjs/common";
import * as swagger from "@nestjs/swagger";
import { isRecordNotFoundError } from "../../prisma.util";
import * as errors from "../../errors";
import { Request } from "express";
import { plainToClass } from "class-transformer";
import { ApiNestedQuery } from "../../decorators/api-nested-query.decorator";
import { MhciPrereqsDesignPortfolioService } from "../mhciPrereqsDesignPortfolio.service";
import { MhciPrereqsDesignPortfolioCreateInput } from "./MhciPrereqsDesignPortfolioCreateInput";
import { MhciPrereqsDesignPortfolio } from "./MhciPrereqsDesignPortfolio";
import { MhciPrereqsDesignPortfolioFindManyArgs } from "./MhciPrereqsDesignPortfolioFindManyArgs";
import { MhciPrereqsDesignPortfolioWhereUniqueInput } from "./MhciPrereqsDesignPortfolioWhereUniqueInput";
import { MhciPrereqsDesignPortfolioUpdateInput } from "./MhciPrereqsDesignPortfolioUpdateInput";

export class MhciPrereqsDesignPortfolioControllerBase {
  constructor(protected readonly service: MhciPrereqsDesignPortfolioService) {}
  @common.Post()
  @swagger.ApiCreatedResponse({ type: MhciPrereqsDesignPortfolio })
  async createMhciPrereqsDesignPortfolio(
    @common.Body() data: MhciPrereqsDesignPortfolioCreateInput
  ): Promise<MhciPrereqsDesignPortfolio> {
    return await this.service.createMhciPrereqsDesignPortfolio({
      data: {
        ...data,

        luUsersUsertypes: {
          connect: data.luUsersUsertypes,
        },
      },
      select: {
        applicationId: true,
        description: true,
        id: true,

        luUsersUsertypes: {
          select: {
            id: true,
          },
        },

        periodId: true,
        programId: true,
        url: true,
      },
    });
  }

  @common.Get()
  @swagger.ApiOkResponse({ type: [MhciPrereqsDesignPortfolio] })
  @ApiNestedQuery(MhciPrereqsDesignPortfolioFindManyArgs)
  async mhciPrereqsDesignPortfolios(
    @common.Req() request: Request
  ): Promise<MhciPrereqsDesignPortfolio[]> {
    const args = plainToClass(
      MhciPrereqsDesignPortfolioFindManyArgs,
      request.query
    );
    return this.service.mhciPrereqsDesignPortfolios({
      ...args,
      select: {
        applicationId: true,
        description: true,
        id: true,

        luUsersUsertypes: {
          select: {
            id: true,
          },
        },

        periodId: true,
        programId: true,
        url: true,
      },
    });
  }

  @common.Get("/:id")
  @swagger.ApiOkResponse({ type: MhciPrereqsDesignPortfolio })
  @swagger.ApiNotFoundResponse({ type: errors.NotFoundException })
  async mhciPrereqsDesignPortfolio(
    @common.Param() params: MhciPrereqsDesignPortfolioWhereUniqueInput
  ): Promise<MhciPrereqsDesignPortfolio | null> {
    const result = await this.service.mhciPrereqsDesignPortfolio({
      where: params,
      select: {
        applicationId: true,
        description: true,
        id: true,

        luUsersUsertypes: {
          select: {
            id: true,
          },
        },

        periodId: true,
        programId: true,
        url: true,
      },
    });
    if (result === null) {
      throw new errors.NotFoundException(
        `No resource was found for ${JSON.stringify(params)}`
      );
    }
    return result;
  }

  @common.Patch("/:id")
  @swagger.ApiOkResponse({ type: MhciPrereqsDesignPortfolio })
  @swagger.ApiNotFoundResponse({ type: errors.NotFoundException })
  async updateMhciPrereqsDesignPortfolio(
    @common.Param() params: MhciPrereqsDesignPortfolioWhereUniqueInput,
    @common.Body() data: MhciPrereqsDesignPortfolioUpdateInput
  ): Promise<MhciPrereqsDesignPortfolio | null> {
    try {
      return await this.service.updateMhciPrereqsDesignPortfolio({
        where: params,
        data: {
          ...data,

          luUsersUsertypes: {
            connect: data.luUsersUsertypes,
          },
        },
        select: {
          applicationId: true,
          description: true,
          id: true,

          luUsersUsertypes: {
            select: {
              id: true,
            },
          },

          periodId: true,
          programId: true,
          url: true,
        },
      });
    } catch (error) {
      if (isRecordNotFoundError(error)) {
        throw new errors.NotFoundException(
          `No resource was found for ${JSON.stringify(params)}`
        );
      }
      throw error;
    }
  }

  @common.Delete("/:id")
  @swagger.ApiOkResponse({ type: MhciPrereqsDesignPortfolio })
  @swagger.ApiNotFoundResponse({ type: errors.NotFoundException })
  async deleteMhciPrereqsDesignPortfolio(
    @common.Param() params: MhciPrereqsDesignPortfolioWhereUniqueInput
  ): Promise<MhciPrereqsDesignPortfolio | null> {
    try {
      return await this.service.deleteMhciPrereqsDesignPortfolio({
        where: params,
        select: {
          applicationId: true,
          description: true,
          id: true,

          luUsersUsertypes: {
            select: {
              id: true,
            },
          },

          periodId: true,
          programId: true,
          url: true,
        },
      });
    } catch (error) {
      if (isRecordNotFoundError(error)) {
        throw new errors.NotFoundException(
          `No resource was found for ${JSON.stringify(params)}`
        );
      }
      throw error;
    }
  }
}
