/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import * as common from "@nestjs/common";
import * as swagger from "@nestjs/swagger";
import { isRecordNotFoundError } from "../../prisma.util";
import * as errors from "../../errors";
import { Request } from "express";
import { plainToClass } from "class-transformer";
import { ApiNestedQuery } from "../../decorators/api-nested-query.decorator";
import { MitsSlateSuppinfoService } from "../mitsSlateSuppinfo.service";
import { MitsSlateSuppinfoCreateInput } from "./MitsSlateSuppinfoCreateInput";
import { MitsSlateSuppinfoWhereInput } from "./MitsSlateSuppinfoWhereInput";
import { MitsSlateSuppinfoWhereUniqueInput } from "./MitsSlateSuppinfoWhereUniqueInput";
import { MitsSlateSuppinfoFindManyArgs } from "./MitsSlateSuppinfoFindManyArgs";
import { MitsSlateSuppinfoUpdateInput } from "./MitsSlateSuppinfoUpdateInput";
import { MitsSlateSuppinfo } from "./MitsSlateSuppinfo";

export class MitsSlateSuppinfoControllerBase {
  constructor(protected readonly service: MitsSlateSuppinfoService) {}
  @common.Post()
  @swagger.ApiCreatedResponse({ type: MitsSlateSuppinfo })
  async create(
    @common.Body() data: MitsSlateSuppinfoCreateInput
  ): Promise<MitsSlateSuppinfo> {
    return await this.service.create({
      data: data,
      select: {
        fellowship10Amount: true,
        fellowship10AppliedDate: true,
        fellowship10AwardedDate: true,
        fellowship10Duration: true,
        fellowship10Name: true,
        fellowship10Status: true,
        fellowship1Amount: true,
        fellowship1AppliedDate: true,
        fellowship1AwardedDate: true,
        fellowship1Duration: true,
        fellowship1Name: true,
        fellowship1Status: true,
        fellowship2Amount: true,
        fellowship2AppliedDate: true,
        fellowship2AwardedDate: true,
        fellowship2Duration: true,
        fellowship2Name: true,
        fellowship2Status: true,
        fellowship3Amount: true,
        fellowship3AppliedDate: true,
        fellowship3AwardedDate: true,
        fellowship3Duration: true,
        fellowship3Name: true,
        fellowship3Status: true,
        fellowship4Amount: true,
        fellowship4AppliedDate: true,
        fellowship4AwardedDate: true,
        fellowship4Duration: true,
        fellowship4Name: true,
        fellowship4Status: true,
        fellowship5Amount: true,
        fellowship5AppliedDate: true,
        fellowship5AwardedDate: true,
        fellowship5Duration: true,
        fellowship5Name: true,
        fellowship5Status: true,
        fellowship6Amount: true,
        fellowship6AppliedDate: true,
        fellowship6AwardedDate: true,
        fellowship6Duration: true,
        fellowship6Name: true,
        fellowship6Status: true,
        fellowship7Amount: true,
        fellowship7AppliedDate: true,
        fellowship7AwardedDate: true,
        fellowship7Duration: true,
        fellowship7Name: true,
        fellowship7Status: true,
        fellowship8Amount: true,
        fellowship8AppliedDate: true,
        fellowship8AwardedDate: true,
        fellowship8Duration: true,
        fellowship8Name: true,
        fellowship8Status: true,
        fellowship9Amount: true,
        fellowship9AppliedDate: true,
        fellowship9AwardedDate: true,
        fellowship9Duration: true,
        fellowship9Name: true,
        fellowship9Status: true,
        first: true,
        hasFellowships: true,
        id: true,
        last: true,
        learnAboutOther: true,
        learnAboutUs: true,
        middle: true,
        prefix: true,
        videoEssayAccessCode: true,
        videoEssayUrl: true,
      },
    });
  }

  @common.Get()
  @swagger.ApiOkResponse({ type: [MitsSlateSuppinfo] })
  @ApiNestedQuery(MitsSlateSuppinfoFindManyArgs)
  async findMany(@common.Req() request: Request): Promise<MitsSlateSuppinfo[]> {
    const args = plainToClass(MitsSlateSuppinfoFindManyArgs, request.query);
    return this.service.findMany({
      ...args,
      select: {
        fellowship10Amount: true,
        fellowship10AppliedDate: true,
        fellowship10AwardedDate: true,
        fellowship10Duration: true,
        fellowship10Name: true,
        fellowship10Status: true,
        fellowship1Amount: true,
        fellowship1AppliedDate: true,
        fellowship1AwardedDate: true,
        fellowship1Duration: true,
        fellowship1Name: true,
        fellowship1Status: true,
        fellowship2Amount: true,
        fellowship2AppliedDate: true,
        fellowship2AwardedDate: true,
        fellowship2Duration: true,
        fellowship2Name: true,
        fellowship2Status: true,
        fellowship3Amount: true,
        fellowship3AppliedDate: true,
        fellowship3AwardedDate: true,
        fellowship3Duration: true,
        fellowship3Name: true,
        fellowship3Status: true,
        fellowship4Amount: true,
        fellowship4AppliedDate: true,
        fellowship4AwardedDate: true,
        fellowship4Duration: true,
        fellowship4Name: true,
        fellowship4Status: true,
        fellowship5Amount: true,
        fellowship5AppliedDate: true,
        fellowship5AwardedDate: true,
        fellowship5Duration: true,
        fellowship5Name: true,
        fellowship5Status: true,
        fellowship6Amount: true,
        fellowship6AppliedDate: true,
        fellowship6AwardedDate: true,
        fellowship6Duration: true,
        fellowship6Name: true,
        fellowship6Status: true,
        fellowship7Amount: true,
        fellowship7AppliedDate: true,
        fellowship7AwardedDate: true,
        fellowship7Duration: true,
        fellowship7Name: true,
        fellowship7Status: true,
        fellowship8Amount: true,
        fellowship8AppliedDate: true,
        fellowship8AwardedDate: true,
        fellowship8Duration: true,
        fellowship8Name: true,
        fellowship8Status: true,
        fellowship9Amount: true,
        fellowship9AppliedDate: true,
        fellowship9AwardedDate: true,
        fellowship9Duration: true,
        fellowship9Name: true,
        fellowship9Status: true,
        first: true,
        hasFellowships: true,
        id: true,
        last: true,
        learnAboutOther: true,
        learnAboutUs: true,
        middle: true,
        prefix: true,
        videoEssayAccessCode: true,
        videoEssayUrl: true,
      },
    });
  }

  @common.Get("/:id")
  @swagger.ApiOkResponse({ type: MitsSlateSuppinfo })
  @swagger.ApiNotFoundResponse({ type: errors.NotFoundException })
  async findOne(
    @common.Param() params: MitsSlateSuppinfoWhereUniqueInput
  ): Promise<MitsSlateSuppinfo | null> {
    const result = await this.service.findOne({
      where: params,
      select: {
        fellowship10Amount: true,
        fellowship10AppliedDate: true,
        fellowship10AwardedDate: true,
        fellowship10Duration: true,
        fellowship10Name: true,
        fellowship10Status: true,
        fellowship1Amount: true,
        fellowship1AppliedDate: true,
        fellowship1AwardedDate: true,
        fellowship1Duration: true,
        fellowship1Name: true,
        fellowship1Status: true,
        fellowship2Amount: true,
        fellowship2AppliedDate: true,
        fellowship2AwardedDate: true,
        fellowship2Duration: true,
        fellowship2Name: true,
        fellowship2Status: true,
        fellowship3Amount: true,
        fellowship3AppliedDate: true,
        fellowship3AwardedDate: true,
        fellowship3Duration: true,
        fellowship3Name: true,
        fellowship3Status: true,
        fellowship4Amount: true,
        fellowship4AppliedDate: true,
        fellowship4AwardedDate: true,
        fellowship4Duration: true,
        fellowship4Name: true,
        fellowship4Status: true,
        fellowship5Amount: true,
        fellowship5AppliedDate: true,
        fellowship5AwardedDate: true,
        fellowship5Duration: true,
        fellowship5Name: true,
        fellowship5Status: true,
        fellowship6Amount: true,
        fellowship6AppliedDate: true,
        fellowship6AwardedDate: true,
        fellowship6Duration: true,
        fellowship6Name: true,
        fellowship6Status: true,
        fellowship7Amount: true,
        fellowship7AppliedDate: true,
        fellowship7AwardedDate: true,
        fellowship7Duration: true,
        fellowship7Name: true,
        fellowship7Status: true,
        fellowship8Amount: true,
        fellowship8AppliedDate: true,
        fellowship8AwardedDate: true,
        fellowship8Duration: true,
        fellowship8Name: true,
        fellowship8Status: true,
        fellowship9Amount: true,
        fellowship9AppliedDate: true,
        fellowship9AwardedDate: true,
        fellowship9Duration: true,
        fellowship9Name: true,
        fellowship9Status: true,
        first: true,
        hasFellowships: true,
        id: true,
        last: true,
        learnAboutOther: true,
        learnAboutUs: true,
        middle: true,
        prefix: true,
        videoEssayAccessCode: true,
        videoEssayUrl: true,
      },
    });
    if (result === null) {
      throw new errors.NotFoundException(
        `No resource was found for ${JSON.stringify(params)}`
      );
    }
    return result;
  }

  @common.Patch("/:id")
  @swagger.ApiOkResponse({ type: MitsSlateSuppinfo })
  @swagger.ApiNotFoundResponse({ type: errors.NotFoundException })
  async update(
    @common.Param() params: MitsSlateSuppinfoWhereUniqueInput,
    @common.Body() data: MitsSlateSuppinfoUpdateInput
  ): Promise<MitsSlateSuppinfo | null> {
    try {
      return await this.service.update({
        where: params,
        data: data,
        select: {
          fellowship10Amount: true,
          fellowship10AppliedDate: true,
          fellowship10AwardedDate: true,
          fellowship10Duration: true,
          fellowship10Name: true,
          fellowship10Status: true,
          fellowship1Amount: true,
          fellowship1AppliedDate: true,
          fellowship1AwardedDate: true,
          fellowship1Duration: true,
          fellowship1Name: true,
          fellowship1Status: true,
          fellowship2Amount: true,
          fellowship2AppliedDate: true,
          fellowship2AwardedDate: true,
          fellowship2Duration: true,
          fellowship2Name: true,
          fellowship2Status: true,
          fellowship3Amount: true,
          fellowship3AppliedDate: true,
          fellowship3AwardedDate: true,
          fellowship3Duration: true,
          fellowship3Name: true,
          fellowship3Status: true,
          fellowship4Amount: true,
          fellowship4AppliedDate: true,
          fellowship4AwardedDate: true,
          fellowship4Duration: true,
          fellowship4Name: true,
          fellowship4Status: true,
          fellowship5Amount: true,
          fellowship5AppliedDate: true,
          fellowship5AwardedDate: true,
          fellowship5Duration: true,
          fellowship5Name: true,
          fellowship5Status: true,
          fellowship6Amount: true,
          fellowship6AppliedDate: true,
          fellowship6AwardedDate: true,
          fellowship6Duration: true,
          fellowship6Name: true,
          fellowship6Status: true,
          fellowship7Amount: true,
          fellowship7AppliedDate: true,
          fellowship7AwardedDate: true,
          fellowship7Duration: true,
          fellowship7Name: true,
          fellowship7Status: true,
          fellowship8Amount: true,
          fellowship8AppliedDate: true,
          fellowship8AwardedDate: true,
          fellowship8Duration: true,
          fellowship8Name: true,
          fellowship8Status: true,
          fellowship9Amount: true,
          fellowship9AppliedDate: true,
          fellowship9AwardedDate: true,
          fellowship9Duration: true,
          fellowship9Name: true,
          fellowship9Status: true,
          first: true,
          hasFellowships: true,
          id: true,
          last: true,
          learnAboutOther: true,
          learnAboutUs: true,
          middle: true,
          prefix: true,
          videoEssayAccessCode: true,
          videoEssayUrl: true,
        },
      });
    } catch (error) {
      if (isRecordNotFoundError(error)) {
        throw new errors.NotFoundException(
          `No resource was found for ${JSON.stringify(params)}`
        );
      }
      throw error;
    }
  }

  @common.Delete("/:id")
  @swagger.ApiOkResponse({ type: MitsSlateSuppinfo })
  @swagger.ApiNotFoundResponse({ type: errors.NotFoundException })
  async delete(
    @common.Param() params: MitsSlateSuppinfoWhereUniqueInput
  ): Promise<MitsSlateSuppinfo | null> {
    try {
      return await this.service.delete({
        where: params,
        select: {
          fellowship10Amount: true,
          fellowship10AppliedDate: true,
          fellowship10AwardedDate: true,
          fellowship10Duration: true,
          fellowship10Name: true,
          fellowship10Status: true,
          fellowship1Amount: true,
          fellowship1AppliedDate: true,
          fellowship1AwardedDate: true,
          fellowship1Duration: true,
          fellowship1Name: true,
          fellowship1Status: true,
          fellowship2Amount: true,
          fellowship2AppliedDate: true,
          fellowship2AwardedDate: true,
          fellowship2Duration: true,
          fellowship2Name: true,
          fellowship2Status: true,
          fellowship3Amount: true,
          fellowship3AppliedDate: true,
          fellowship3AwardedDate: true,
          fellowship3Duration: true,
          fellowship3Name: true,
          fellowship3Status: true,
          fellowship4Amount: true,
          fellowship4AppliedDate: true,
          fellowship4AwardedDate: true,
          fellowship4Duration: true,
          fellowship4Name: true,
          fellowship4Status: true,
          fellowship5Amount: true,
          fellowship5AppliedDate: true,
          fellowship5AwardedDate: true,
          fellowship5Duration: true,
          fellowship5Name: true,
          fellowship5Status: true,
          fellowship6Amount: true,
          fellowship6AppliedDate: true,
          fellowship6AwardedDate: true,
          fellowship6Duration: true,
          fellowship6Name: true,
          fellowship6Status: true,
          fellowship7Amount: true,
          fellowship7AppliedDate: true,
          fellowship7AwardedDate: true,
          fellowship7Duration: true,
          fellowship7Name: true,
          fellowship7Status: true,
          fellowship8Amount: true,
          fellowship8AppliedDate: true,
          fellowship8AwardedDate: true,
          fellowship8Duration: true,
          fellowship8Name: true,
          fellowship8Status: true,
          fellowship9Amount: true,
          fellowship9AppliedDate: true,
          fellowship9AwardedDate: true,
          fellowship9Duration: true,
          fellowship9Name: true,
          fellowship9Status: true,
          first: true,
          hasFellowships: true,
          id: true,
          last: true,
          learnAboutOther: true,
          learnAboutUs: true,
          middle: true,
          prefix: true,
          videoEssayAccessCode: true,
          videoEssayUrl: true,
        },
      });
    } catch (error) {
      if (isRecordNotFoundError(error)) {
        throw new errors.NotFoundException(
          `No resource was found for ${JSON.stringify(params)}`
        );
      }
      throw error;
    }
  }
}
