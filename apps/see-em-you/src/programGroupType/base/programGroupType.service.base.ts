/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  ProgramGroupType as PrismaProgramGroupType,
} from "@prisma/client";

export class ProgramGroupTypeServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.ProgramGroupTypeCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.ProgramGroupTypeCountArgs>
  ): Promise<number> {
    return this.prisma.programGroupType.count(args);
  }

  async programGroupTypes<T extends Prisma.ProgramGroupTypeFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.ProgramGroupTypeFindManyArgs>
  ): Promise<PrismaProgramGroupType[]> {
    return this.prisma.programGroupType.findMany(args);
  }
  async programGroupType<T extends Prisma.ProgramGroupTypeFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.ProgramGroupTypeFindUniqueArgs>
  ): Promise<PrismaProgramGroupType | null> {
    return this.prisma.programGroupType.findUnique(args);
  }
  async createProgramGroupType<T extends Prisma.ProgramGroupTypeCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.ProgramGroupTypeCreateArgs>
  ): Promise<PrismaProgramGroupType> {
    return this.prisma.programGroupType.create<T>(args);
  }
  async updateProgramGroupType<T extends Prisma.ProgramGroupTypeUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.ProgramGroupTypeUpdateArgs>
  ): Promise<PrismaProgramGroupType> {
    return this.prisma.programGroupType.update<T>(args);
  }
  async deleteProgramGroupType<T extends Prisma.ProgramGroupTypeDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.ProgramGroupTypeDeleteArgs>
  ): Promise<PrismaProgramGroupType> {
    return this.prisma.programGroupType.delete(args);
  }
}
