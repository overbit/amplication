/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, SearchTextTest } from "@prisma/client";

export class SearchTextTestServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.SearchTextTestCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.SearchTextTestCountArgs>
  ): Promise<number> {
    return this.prisma.searchTextTest.count(args);
  }

  async searchTextTests<T extends Prisma.SearchTextTestFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.SearchTextTestFindManyArgs>
  ): Promise<SearchTextTest[]> {
    return this.prisma.searchTextTest.findMany(args);
  }
  async searchTextTest<T extends Prisma.SearchTextTestFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.SearchTextTestFindUniqueArgs>
  ): Promise<SearchTextTest | null> {
    return this.prisma.searchTextTest.findUnique(args);
  }
  async createSearchTextTest<T extends Prisma.SearchTextTestCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.SearchTextTestCreateArgs>
  ): Promise<SearchTextTest> {
    return this.prisma.searchTextTest.create<T>(args);
  }
  async updateSearchTextTest<T extends Prisma.SearchTextTestUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.SearchTextTestUpdateArgs>
  ): Promise<SearchTextTest> {
    return this.prisma.searchTextTest.update<T>(args);
  }
  async deleteSearchTextTest<T extends Prisma.SearchTextTestDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.SearchTextTestDeleteArgs>
  ): Promise<SearchTextTest> {
    return this.prisma.searchTextTest.delete(args);
  }
}
