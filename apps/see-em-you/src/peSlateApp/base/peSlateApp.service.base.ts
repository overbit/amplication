/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, PeSlateApp as PrismaPeSlateApp } from "@prisma/client";

export class PeSlateAppServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.PeSlateAppCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.PeSlateAppCountArgs>
  ): Promise<number> {
    return this.prisma.peSlateApp.count(args);
  }

  async peSlateApps<T extends Prisma.PeSlateAppFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.PeSlateAppFindManyArgs>
  ): Promise<PrismaPeSlateApp[]> {
    return this.prisma.peSlateApp.findMany(args);
  }
  async peSlateApp<T extends Prisma.PeSlateAppFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.PeSlateAppFindUniqueArgs>
  ): Promise<PrismaPeSlateApp | null> {
    return this.prisma.peSlateApp.findUnique(args);
  }
  async createPeSlateApp<T extends Prisma.PeSlateAppCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.PeSlateAppCreateArgs>
  ): Promise<PrismaPeSlateApp> {
    return this.prisma.peSlateApp.create<T>(args);
  }
  async updatePeSlateApp<T extends Prisma.PeSlateAppUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.PeSlateAppUpdateArgs>
  ): Promise<PrismaPeSlateApp> {
    return this.prisma.peSlateApp.update<T>(args);
  }
  async deletePeSlateApp<T extends Prisma.PeSlateAppDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.PeSlateAppDeleteArgs>
  ): Promise<PrismaPeSlateApp> {
    return this.prisma.peSlateApp.delete(args);
  }
}
