/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, SlateOrg as PrismaSlateOrg } from "@prisma/client";

export class SlateOrgServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.SlateOrgCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.SlateOrgCountArgs>
  ): Promise<number> {
    return this.prisma.slateOrg.count(args);
  }

  async slateOrgs<T extends Prisma.SlateOrgFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.SlateOrgFindManyArgs>
  ): Promise<PrismaSlateOrg[]> {
    return this.prisma.slateOrg.findMany(args);
  }
  async slateOrg<T extends Prisma.SlateOrgFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.SlateOrgFindUniqueArgs>
  ): Promise<PrismaSlateOrg | null> {
    return this.prisma.slateOrg.findUnique(args);
  }
  async createSlateOrg<T extends Prisma.SlateOrgCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.SlateOrgCreateArgs>
  ): Promise<PrismaSlateOrg> {
    return this.prisma.slateOrg.create<T>(args);
  }
  async updateSlateOrg<T extends Prisma.SlateOrgUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.SlateOrgUpdateArgs>
  ): Promise<PrismaSlateOrg> {
    return this.prisma.slateOrg.update<T>(args);
  }
  async deleteSlateOrg<T extends Prisma.SlateOrgDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.SlateOrgDeleteArgs>
  ): Promise<PrismaSlateOrg> {
    return this.prisma.slateOrg.delete(args);
  }
}
