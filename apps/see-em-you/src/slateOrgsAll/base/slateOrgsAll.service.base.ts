/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, SlateOrgsAll as PrismaSlateOrgsAll } from "@prisma/client";

export class SlateOrgsAllServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.SlateOrgsAllCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.SlateOrgsAllCountArgs>
  ): Promise<number> {
    return this.prisma.slateOrgsAll.count(args);
  }

  async slateOrgsAlls<T extends Prisma.SlateOrgsAllFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.SlateOrgsAllFindManyArgs>
  ): Promise<PrismaSlateOrgsAll[]> {
    return this.prisma.slateOrgsAll.findMany(args);
  }
  async slateOrgsAll<T extends Prisma.SlateOrgsAllFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.SlateOrgsAllFindUniqueArgs>
  ): Promise<PrismaSlateOrgsAll | null> {
    return this.prisma.slateOrgsAll.findUnique(args);
  }
  async createSlateOrgsAll<T extends Prisma.SlateOrgsAllCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.SlateOrgsAllCreateArgs>
  ): Promise<PrismaSlateOrgsAll> {
    return this.prisma.slateOrgsAll.create<T>(args);
  }
  async updateSlateOrgsAll<T extends Prisma.SlateOrgsAllUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.SlateOrgsAllUpdateArgs>
  ): Promise<PrismaSlateOrgsAll> {
    return this.prisma.slateOrgsAll.update<T>(args);
  }
  async deleteSlateOrgsAll<T extends Prisma.SlateOrgsAllDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.SlateOrgsAllDeleteArgs>
  ): Promise<PrismaSlateOrgsAll> {
    return this.prisma.slateOrgsAll.delete(args);
  }
}
