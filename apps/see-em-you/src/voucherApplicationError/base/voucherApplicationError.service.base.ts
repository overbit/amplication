/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  VoucherApplicationError as PrismaVoucherApplicationError,
} from "@prisma/client";

export class VoucherApplicationErrorServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.VoucherApplicationErrorCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.VoucherApplicationErrorCountArgs>
  ): Promise<number> {
    return this.prisma.voucherApplicationError.count(args);
  }

  async voucherApplicationErrors<
    T extends Prisma.VoucherApplicationErrorFindManyArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.VoucherApplicationErrorFindManyArgs>
  ): Promise<PrismaVoucherApplicationError[]> {
    return this.prisma.voucherApplicationError.findMany(args);
  }
  async voucherApplicationError<
    T extends Prisma.VoucherApplicationErrorFindUniqueArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.VoucherApplicationErrorFindUniqueArgs>
  ): Promise<PrismaVoucherApplicationError | null> {
    return this.prisma.voucherApplicationError.findUnique(args);
  }
  async createVoucherApplicationError<
    T extends Prisma.VoucherApplicationErrorCreateArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.VoucherApplicationErrorCreateArgs>
  ): Promise<PrismaVoucherApplicationError> {
    return this.prisma.voucherApplicationError.create<T>(args);
  }
  async updateVoucherApplicationError<
    T extends Prisma.VoucherApplicationErrorUpdateArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.VoucherApplicationErrorUpdateArgs>
  ): Promise<PrismaVoucherApplicationError> {
    return this.prisma.voucherApplicationError.update<T>(args);
  }
  async deleteVoucherApplicationError<
    T extends Prisma.VoucherApplicationErrorDeleteArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.VoucherApplicationErrorDeleteArgs>
  ): Promise<PrismaVoucherApplicationError> {
    return this.prisma.voucherApplicationError.delete(args);
  }
}
