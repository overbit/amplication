/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, IniYearsExperience } from "@prisma/client";

export class IniYearsExperienceServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.IniYearsExperienceCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.IniYearsExperienceCountArgs>
  ): Promise<number> {
    return this.prisma.iniYearsExperience.count(args);
  }

  async iniYearsExperiences<T extends Prisma.IniYearsExperienceFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.IniYearsExperienceFindManyArgs>
  ): Promise<IniYearsExperience[]> {
    return this.prisma.iniYearsExperience.findMany(args);
  }
  async iniYearsExperience<T extends Prisma.IniYearsExperienceFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.IniYearsExperienceFindUniqueArgs>
  ): Promise<IniYearsExperience | null> {
    return this.prisma.iniYearsExperience.findUnique(args);
  }
  async createIniYearsExperience<T extends Prisma.IniYearsExperienceCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.IniYearsExperienceCreateArgs>
  ): Promise<IniYearsExperience> {
    return this.prisma.iniYearsExperience.create<T>(args);
  }
  async updateIniYearsExperience<T extends Prisma.IniYearsExperienceUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.IniYearsExperienceUpdateArgs>
  ): Promise<IniYearsExperience> {
    return this.prisma.iniYearsExperience.update<T>(args);
  }
  async deleteIniYearsExperience<T extends Prisma.IniYearsExperienceDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.IniYearsExperienceDeleteArgs>
  ): Promise<IniYearsExperience> {
    return this.prisma.iniYearsExperience.delete(args);
  }
}
