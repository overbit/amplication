/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, DegreeLevel } from "@prisma/client";

export class DegreeLevelServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.DegreeLevelCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.DegreeLevelCountArgs>
  ): Promise<number> {
    return this.prisma.degreeLevel.count(args);
  }

  async degreeLevels<T extends Prisma.DegreeLevelFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.DegreeLevelFindManyArgs>
  ): Promise<DegreeLevel[]> {
    return this.prisma.degreeLevel.findMany(args);
  }
  async degreeLevel<T extends Prisma.DegreeLevelFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.DegreeLevelFindUniqueArgs>
  ): Promise<DegreeLevel | null> {
    return this.prisma.degreeLevel.findUnique(args);
  }
  async createDegreeLevel<T extends Prisma.DegreeLevelCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.DegreeLevelCreateArgs>
  ): Promise<DegreeLevel> {
    return this.prisma.degreeLevel.create<T>(args);
  }
  async updateDegreeLevel<T extends Prisma.DegreeLevelUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.DegreeLevelUpdateArgs>
  ): Promise<DegreeLevel> {
    return this.prisma.degreeLevel.update<T>(args);
  }
  async deleteDegreeLevel<T extends Prisma.DegreeLevelDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.DegreeLevelDeleteArgs>
  ): Promise<DegreeLevel> {
    return this.prisma.degreeLevel.delete(args);
  }
}
