/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field, Float } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsNumber,
  IsOptional,
  ValidateNested,
  IsString,
  IsInt,
} from "class-validator";
import { Decimal } from "decimal.js";
import { Degree } from "../../degree/base/Degree";
import { Type } from "class-transformer";
import { Fieldsofstudy } from "../../fieldsofstudy/base/Fieldsofstudy";
import { LuApplicationProgram } from "../../luApplicationProgram/base/LuApplicationProgram";
import { MlArea } from "../../mlArea/base/MlArea";
import { PaymentItem } from "../../paymentItem/base/PaymentItem";
import { ProgramsApplicationreq } from "../../programsApplicationreq/base/ProgramsApplicationreq";

@ObjectType()
class ProgramModel {
  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsNumber()
  @Field(() => Float)
  baseprice!: Decimal;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  basepriceLate!: Decimal | null;

  @ApiProperty({
    required: true,
    type: () => Degree,
  })
  @ValidateNested()
  @Type(() => Degree)
  degree?: Degree;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  enabled!: string | null;

  @ApiProperty({
    required: true,
    type: () => Fieldsofstudy,
  })
  @ValidateNested()
  @Type(() => Fieldsofstudy)
  fieldsofstudy?: Fieldsofstudy;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Field(() => Number)
  id!: number;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  linkword!: string;

  @ApiProperty({
    required: false,
    type: () => [LuApplicationProgram],
  })
  @ValidateNested()
  @Type(() => LuApplicationProgram)
  @IsOptional()
  luApplicationPrograms?: Array<LuApplicationProgram>;

  @ApiProperty({
    required: false,
    type: () => [MlArea],
  })
  @ValidateNested()
  @Type(() => MlArea)
  @IsOptional()
  mlArea?: Array<MlArea>;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  oraclestring!: string | null;

  @ApiProperty({
    required: false,
    type: () => [PaymentItem],
  })
  @ValidateNested()
  @Type(() => PaymentItem)
  @IsOptional()
  paymentItem?: Array<PaymentItem>;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Field(() => Number)
  prank!: number;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsNumber()
  @Field(() => Float)
  programprice!: Decimal;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  programpriceLate!: Decimal | null;

  @ApiProperty({
    required: false,
    type: () => [ProgramsApplicationreq],
  })
  @ValidateNested()
  @Type(() => ProgramsApplicationreq)
  @IsOptional()
  programsApplicationreqs?: Array<ProgramsApplicationreq>;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  registrationoraclestring!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  url!: string | null;
}

export { ProgramModel as ProgramModel };
