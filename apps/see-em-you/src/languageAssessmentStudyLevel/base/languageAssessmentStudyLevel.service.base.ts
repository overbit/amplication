/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, LanguageAssessmentStudyLevel } from "@prisma/client";

export class LanguageAssessmentStudyLevelServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.LanguageAssessmentStudyLevelCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.LanguageAssessmentStudyLevelCountArgs>
  ): Promise<number> {
    return this.prisma.languageAssessmentStudyLevel.count(args);
  }

  async languageAssessmentStudyLevels<
    T extends Prisma.LanguageAssessmentStudyLevelFindManyArgs
  >(
    args: Prisma.SelectSubset<
      T,
      Prisma.LanguageAssessmentStudyLevelFindManyArgs
    >
  ): Promise<LanguageAssessmentStudyLevel[]> {
    return this.prisma.languageAssessmentStudyLevel.findMany(args);
  }
  async languageAssessmentStudyLevel<
    T extends Prisma.LanguageAssessmentStudyLevelFindUniqueArgs
  >(
    args: Prisma.SelectSubset<
      T,
      Prisma.LanguageAssessmentStudyLevelFindUniqueArgs
    >
  ): Promise<LanguageAssessmentStudyLevel | null> {
    return this.prisma.languageAssessmentStudyLevel.findUnique(args);
  }
  async createLanguageAssessmentStudyLevel<
    T extends Prisma.LanguageAssessmentStudyLevelCreateArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.LanguageAssessmentStudyLevelCreateArgs>
  ): Promise<LanguageAssessmentStudyLevel> {
    return this.prisma.languageAssessmentStudyLevel.create<T>(args);
  }
  async updateLanguageAssessmentStudyLevel<
    T extends Prisma.LanguageAssessmentStudyLevelUpdateArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.LanguageAssessmentStudyLevelUpdateArgs>
  ): Promise<LanguageAssessmentStudyLevel> {
    return this.prisma.languageAssessmentStudyLevel.update<T>(args);
  }
  async deleteLanguageAssessmentStudyLevel<
    T extends Prisma.LanguageAssessmentStudyLevelDeleteArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.LanguageAssessmentStudyLevelDeleteArgs>
  ): Promise<LanguageAssessmentStudyLevel> {
    return this.prisma.languageAssessmentStudyLevel.delete(args);
  }
}
