/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, PhoneScreen } from "@prisma/client";

export class PhoneScreenServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.PhoneScreenCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.PhoneScreenCountArgs>
  ): Promise<number> {
    return this.prisma.phoneScreen.count(args);
  }

  async phoneScreens<T extends Prisma.PhoneScreenFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.PhoneScreenFindManyArgs>
  ): Promise<PhoneScreen[]> {
    return this.prisma.phoneScreen.findMany(args);
  }
  async phoneScreen<T extends Prisma.PhoneScreenFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.PhoneScreenFindUniqueArgs>
  ): Promise<PhoneScreen | null> {
    return this.prisma.phoneScreen.findUnique(args);
  }
  async createPhoneScreen<T extends Prisma.PhoneScreenCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.PhoneScreenCreateArgs>
  ): Promise<PhoneScreen> {
    return this.prisma.phoneScreen.create<T>(args);
  }
  async updatePhoneScreen<T extends Prisma.PhoneScreenUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.PhoneScreenUpdateArgs>
  ): Promise<PhoneScreen> {
    return this.prisma.phoneScreen.update<T>(args);
  }
  async deletePhoneScreen<T extends Prisma.PhoneScreenDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.PhoneScreenDeleteArgs>
  ): Promise<PhoneScreen> {
    return this.prisma.phoneScreen.delete(args);
  }
}
