/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, MhciSlatePub as PrismaMhciSlatePub } from "@prisma/client";

export class MhciSlatePubServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.MhciSlatePubCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.MhciSlatePubCountArgs>
  ): Promise<number> {
    return this.prisma.mhciSlatePub.count(args);
  }

  async mhciSlatePubs<T extends Prisma.MhciSlatePubFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.MhciSlatePubFindManyArgs>
  ): Promise<PrismaMhciSlatePub[]> {
    return this.prisma.mhciSlatePub.findMany(args);
  }
  async mhciSlatePub<T extends Prisma.MhciSlatePubFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.MhciSlatePubFindUniqueArgs>
  ): Promise<PrismaMhciSlatePub | null> {
    return this.prisma.mhciSlatePub.findUnique(args);
  }
  async createMhciSlatePub<T extends Prisma.MhciSlatePubCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.MhciSlatePubCreateArgs>
  ): Promise<PrismaMhciSlatePub> {
    return this.prisma.mhciSlatePub.create<T>(args);
  }
  async updateMhciSlatePub<T extends Prisma.MhciSlatePubUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.MhciSlatePubUpdateArgs>
  ): Promise<PrismaMhciSlatePub> {
    return this.prisma.mhciSlatePub.update<T>(args);
  }
  async deleteMhciSlatePub<T extends Prisma.MhciSlatePubDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.MhciSlatePubDeleteArgs>
  ): Promise<PrismaMhciSlatePub> {
    return this.prisma.mhciSlatePub.delete(args);
  }
}
