/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, SlateIelt as PrismaSlateIelt } from "@prisma/client";

export class SlateIeltServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.SlateIeltCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.SlateIeltCountArgs>
  ): Promise<number> {
    return this.prisma.slateIelt.count(args);
  }

  async slateIelts<T extends Prisma.SlateIeltFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.SlateIeltFindManyArgs>
  ): Promise<PrismaSlateIelt[]> {
    return this.prisma.slateIelt.findMany(args);
  }
  async slateIelt<T extends Prisma.SlateIeltFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.SlateIeltFindUniqueArgs>
  ): Promise<PrismaSlateIelt | null> {
    return this.prisma.slateIelt.findUnique(args);
  }
  async createSlateIelt<T extends Prisma.SlateIeltCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.SlateIeltCreateArgs>
  ): Promise<PrismaSlateIelt> {
    return this.prisma.slateIelt.create<T>(args);
  }
  async updateSlateIelt<T extends Prisma.SlateIeltUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.SlateIeltUpdateArgs>
  ): Promise<PrismaSlateIelt> {
    return this.prisma.slateIelt.update<T>(args);
  }
  async deleteSlateIelt<T extends Prisma.SlateIeltDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.SlateIeltDeleteArgs>
  ): Promise<PrismaSlateIelt> {
    return this.prisma.slateIelt.delete(args);
  }
}
