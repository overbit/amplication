/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  DietrichSharing as PrismaDietrichSharing,
} from "@prisma/client";

export class DietrichSharingServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.DietrichSharingCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.DietrichSharingCountArgs>
  ): Promise<number> {
    return this.prisma.dietrichSharing.count(args);
  }

  async dietrichSharings<T extends Prisma.DietrichSharingFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.DietrichSharingFindManyArgs>
  ): Promise<PrismaDietrichSharing[]> {
    return this.prisma.dietrichSharing.findMany(args);
  }
  async dietrichSharing<T extends Prisma.DietrichSharingFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.DietrichSharingFindUniqueArgs>
  ): Promise<PrismaDietrichSharing | null> {
    return this.prisma.dietrichSharing.findUnique(args);
  }
  async createDietrichSharing<T extends Prisma.DietrichSharingCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.DietrichSharingCreateArgs>
  ): Promise<PrismaDietrichSharing> {
    return this.prisma.dietrichSharing.create<T>(args);
  }
  async updateDietrichSharing<T extends Prisma.DietrichSharingUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.DietrichSharingUpdateArgs>
  ): Promise<PrismaDietrichSharing> {
    return this.prisma.dietrichSharing.update<T>(args);
  }
  async deleteDietrichSharing<T extends Prisma.DietrichSharingDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.DietrichSharingDeleteArgs>
  ): Promise<PrismaDietrichSharing> {
    return this.prisma.dietrichSharing.delete(args);
  }
}
