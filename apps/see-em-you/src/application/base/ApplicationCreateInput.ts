/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field, Float } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AcoPalWhereUniqueInput } from "../../acoPal/base/AcoPalWhereUniqueInput";
import {
  ValidateNested,
  IsOptional,
  IsString,
  IsBoolean,
  IsInt,
  IsDate,
  IsNumber,
} from "class-validator";
import { Type } from "class-transformer";
import { ApplicationAdminNoteCreateNestedManyWithoutApplicationsInput } from "./ApplicationAdminNoteCreateNestedManyWithoutApplicationsInput";
import { AttendanceCreateNestedManyWithoutApplicationsInput } from "./AttendanceCreateNestedManyWithoutApplicationsInput";
import { CashnetPaymentCreateNestedManyWithoutApplicationsInput } from "./CashnetPaymentCreateNestedManyWithoutApplicationsInput";
import { ExperienceCreateNestedManyWithoutApplicationsInput } from "./ExperienceCreateNestedManyWithoutApplicationsInput";
import { FellowshipCreateNestedManyWithoutApplicationsInput } from "./FellowshipCreateNestedManyWithoutApplicationsInput";
import { GmatscoreCreateNestedManyWithoutApplicationsInput } from "./GmatscoreCreateNestedManyWithoutApplicationsInput";
import { GresubjectscoreCreateNestedManyWithoutApplicationsInput } from "./GresubjectscoreCreateNestedManyWithoutApplicationsInput";
import { IeltsscoreCreateNestedManyWithoutApplicationsInput } from "./IeltsscoreCreateNestedManyWithoutApplicationsInput";
import { LuApplicationAdvisorCreateNestedManyWithoutApplicationsInput } from "./LuApplicationAdvisorCreateNestedManyWithoutApplicationsInput";
import { LuApplicationAppreqCreateNestedManyWithoutApplicationsInput } from "./LuApplicationAppreqCreateNestedManyWithoutApplicationsInput";
import { LuApplicationCohortWhereUniqueInput } from "../../luApplicationCohort/base/LuApplicationCohortWhereUniqueInput";
import { LuApplicationGroupCreateNestedManyWithoutApplicationsInput } from "./LuApplicationGroupCreateNestedManyWithoutApplicationsInput";
import { LuApplicationProgramCreateNestedManyWithoutApplicationsInput } from "./LuApplicationProgramCreateNestedManyWithoutApplicationsInput";
import { LuApplicationStartSemesterWhereUniqueInput } from "../../luApplicationStartSemester/base/LuApplicationStartSemesterWhereUniqueInput";
import { MhciPrereqCreateNestedManyWithoutApplicationsInput } from "./MhciPrereqCreateNestedManyWithoutApplicationsInput";
import { MhciPrereqsCourseCreateNestedManyWithoutApplicationsInput } from "./MhciPrereqsCourseCreateNestedManyWithoutApplicationsInput";
import { MlAreaCreateNestedManyWithoutApplicationsInput } from "./MlAreaCreateNestedManyWithoutApplicationsInput";
import { MlSupportingCourseworkCreateNestedManyWithoutApplicationsInput } from "./MlSupportingCourseworkCreateNestedManyWithoutApplicationsInput";
import { MseAqaCreateNestedManyWithoutApplicationsInput } from "./MseAqaCreateNestedManyWithoutApplicationsInput";
import { MseCodilityWhereUniqueInput } from "../../mseCodility/base/MseCodilityWhereUniqueInput";
import { PaymentCreateNestedManyWithoutApplicationsInput } from "./PaymentCreateNestedManyWithoutApplicationsInput";
import { Decimal } from "decimal.js";
import { PeriodApplicationCreateNestedManyWithoutApplicationsInput } from "./PeriodApplicationCreateNestedManyWithoutApplicationsInput";
import { PromotionHistoryCreateNestedManyWithoutApplicationsInput } from "./PromotionHistoryCreateNestedManyWithoutApplicationsInput";
import { PublicationCreateNestedManyWithoutApplicationsInput } from "./PublicationCreateNestedManyWithoutApplicationsInput";
import { RecommendCreateNestedManyWithoutApplicationsInput } from "./RecommendCreateNestedManyWithoutApplicationsInput";
import { RegistrationFeePaymentCreateNestedManyWithoutApplicationsInput } from "./RegistrationFeePaymentCreateNestedManyWithoutApplicationsInput";
import { RegistrationFeeStatusCreateNestedManyWithoutApplicationsInput } from "./RegistrationFeeStatusCreateNestedManyWithoutApplicationsInput";
import { ReviewCreateNestedManyWithoutApplicationsInput } from "./ReviewCreateNestedManyWithoutApplicationsInput";
import { RissFundingCreateNestedManyWithoutApplicationsInput } from "./RissFundingCreateNestedManyWithoutApplicationsInput";
import { RissMcnairCreateNestedManyWithoutApplicationsInput } from "./RissMcnairCreateNestedManyWithoutApplicationsInput";
import { SpecialConsiderationCreateNestedManyWithoutApplicationsInput } from "./SpecialConsiderationCreateNestedManyWithoutApplicationsInput";
import { StudentDecisionCreateNestedManyWithoutApplicationsInput } from "./StudentDecisionCreateNestedManyWithoutApplicationsInput";
import { StudentDecisionHistoryCreateNestedManyWithoutApplicationsInput } from "./StudentDecisionHistoryCreateNestedManyWithoutApplicationsInput";
import { TagMemberCreateNestedManyWithoutApplicationsInput } from "./TagMemberCreateNestedManyWithoutApplicationsInput";

@InputType()
class ApplicationCreateInput {
  @ApiProperty({
    required: false,
    type: () => AcoPalWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => AcoPalWhereUniqueInput)
  @IsOptional()
  @Field(() => AcoPalWhereUniqueInput, {
    nullable: true,
  })
  acoPal?: AcoPalWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => ApplicationAdminNoteCreateNestedManyWithoutApplicationsInput,
  })
  @ValidateNested()
  @Type(() => ApplicationAdminNoteCreateNestedManyWithoutApplicationsInput)
  @IsOptional()
  @Field(() => ApplicationAdminNoteCreateNestedManyWithoutApplicationsInput, {
    nullable: true,
  })
  applicationAdminNote?: ApplicationAdminNoteCreateNestedManyWithoutApplicationsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  area1?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  area2?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  area3?: string | null;

  @ApiProperty({
    required: false,
    type: () => AttendanceCreateNestedManyWithoutApplicationsInput,
  })
  @ValidateNested()
  @Type(() => AttendanceCreateNestedManyWithoutApplicationsInput)
  @IsOptional()
  @Field(() => AttendanceCreateNestedManyWithoutApplicationsInput, {
    nullable: true,
  })
  attendance?: AttendanceCreateNestedManyWithoutApplicationsInput;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  buckleywaive?: boolean | null;

  @ApiProperty({
    required: false,
    type: () => CashnetPaymentCreateNestedManyWithoutApplicationsInput,
  })
  @ValidateNested()
  @Type(() => CashnetPaymentCreateNestedManyWithoutApplicationsInput)
  @IsOptional()
  @Field(() => CashnetPaymentCreateNestedManyWithoutApplicationsInput, {
    nullable: true,
  })
  cashnetPayment?: CashnetPaymentCreateNestedManyWithoutApplicationsInput;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  cnbc?: number | null;

  @ApiProperty({
    required: true,
    type: Boolean,
  })
  @IsBoolean()
  @Field(() => Boolean)
  complete!: boolean;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  createdDate?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  crossDeptProgs?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  crossDeptProgsOther?: string | null;

  @ApiProperty({
    required: true,
    type: Boolean,
  })
  @IsBoolean()
  @Field(() => Boolean)
  cups!: boolean;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  curEnrolled!: string;

  @ApiProperty({
    required: false,
    type: () => ExperienceCreateNestedManyWithoutApplicationsInput,
  })
  @ValidateNested()
  @Type(() => ExperienceCreateNestedManyWithoutApplicationsInput)
  @IsOptional()
  @Field(() => ExperienceCreateNestedManyWithoutApplicationsInput, {
    nullable: true,
  })
  experience?: ExperienceCreateNestedManyWithoutApplicationsInput;

  @ApiProperty({
    required: false,
    type: () => FellowshipCreateNestedManyWithoutApplicationsInput,
  })
  @ValidateNested()
  @Type(() => FellowshipCreateNestedManyWithoutApplicationsInput)
  @IsOptional()
  @Field(() => FellowshipCreateNestedManyWithoutApplicationsInput, {
    nullable: true,
  })
  fellowships?: FellowshipCreateNestedManyWithoutApplicationsInput;

  @ApiProperty({
    required: false,
    type: () => GmatscoreCreateNestedManyWithoutApplicationsInput,
  })
  @ValidateNested()
  @Type(() => GmatscoreCreateNestedManyWithoutApplicationsInput)
  @IsOptional()
  @Field(() => GmatscoreCreateNestedManyWithoutApplicationsInput, {
    nullable: true,
  })
  gmatscore?: GmatscoreCreateNestedManyWithoutApplicationsInput;

  @ApiProperty({
    required: false,
    type: () => GresubjectscoreCreateNestedManyWithoutApplicationsInput,
  })
  @ValidateNested()
  @Type(() => GresubjectscoreCreateNestedManyWithoutApplicationsInput)
  @IsOptional()
  @Field(() => GresubjectscoreCreateNestedManyWithoutApplicationsInput, {
    nullable: true,
  })
  gresubjectscore?: GresubjectscoreCreateNestedManyWithoutApplicationsInput;

  @ApiProperty({
    required: true,
    type: Boolean,
  })
  @IsBoolean()
  @Field(() => Boolean)
  hide!: boolean;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  honors?: string | null;

  @ApiProperty({
    required: false,
    type: () => IeltsscoreCreateNestedManyWithoutApplicationsInput,
  })
  @ValidateNested()
  @Type(() => IeltsscoreCreateNestedManyWithoutApplicationsInput)
  @IsOptional()
  @Field(() => IeltsscoreCreateNestedManyWithoutApplicationsInput, {
    nullable: true,
  })
  ieltsscore?: IeltsscoreCreateNestedManyWithoutApplicationsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  invitationEmailSent?: string | null;

  @ApiProperty({
    required: false,
    type: () => LuApplicationAdvisorCreateNestedManyWithoutApplicationsInput,
  })
  @ValidateNested()
  @Type(() => LuApplicationAdvisorCreateNestedManyWithoutApplicationsInput)
  @IsOptional()
  @Field(() => LuApplicationAdvisorCreateNestedManyWithoutApplicationsInput, {
    nullable: true,
  })
  luApplicationAdvisor?: LuApplicationAdvisorCreateNestedManyWithoutApplicationsInput;

  @ApiProperty({
    required: false,
    type: () => LuApplicationAppreqCreateNestedManyWithoutApplicationsInput,
  })
  @ValidateNested()
  @Type(() => LuApplicationAppreqCreateNestedManyWithoutApplicationsInput)
  @IsOptional()
  @Field(() => LuApplicationAppreqCreateNestedManyWithoutApplicationsInput, {
    nullable: true,
  })
  luApplicationAppreqs?: LuApplicationAppreqCreateNestedManyWithoutApplicationsInput;

  @ApiProperty({
    required: false,
    type: () => LuApplicationCohortWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => LuApplicationCohortWhereUniqueInput)
  @IsOptional()
  @Field(() => LuApplicationCohortWhereUniqueInput, {
    nullable: true,
  })
  luApplicationCohort?: LuApplicationCohortWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => LuApplicationGroupCreateNestedManyWithoutApplicationsInput,
  })
  @ValidateNested()
  @Type(() => LuApplicationGroupCreateNestedManyWithoutApplicationsInput)
  @IsOptional()
  @Field(() => LuApplicationGroupCreateNestedManyWithoutApplicationsInput, {
    nullable: true,
  })
  luApplicationGroups?: LuApplicationGroupCreateNestedManyWithoutApplicationsInput;

  @ApiProperty({
    required: false,
    type: () => LuApplicationProgramCreateNestedManyWithoutApplicationsInput,
  })
  @ValidateNested()
  @Type(() => LuApplicationProgramCreateNestedManyWithoutApplicationsInput)
  @IsOptional()
  @Field(() => LuApplicationProgramCreateNestedManyWithoutApplicationsInput, {
    nullable: true,
  })
  luApplicationPrograms?: LuApplicationProgramCreateNestedManyWithoutApplicationsInput;

  @ApiProperty({
    required: false,
    type: () => LuApplicationStartSemesterWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => LuApplicationStartSemesterWhereUniqueInput)
  @IsOptional()
  @Field(() => LuApplicationStartSemesterWhereUniqueInput, {
    nullable: true,
  })
  luApplicationStartSemester?: LuApplicationStartSemesterWhereUniqueInput | null;

  @ApiProperty({
    required: true,
    type: Boolean,
  })
  @IsBoolean()
  @Field(() => Boolean)
  mastersReviewWaiver!: boolean;

  @ApiProperty({
    required: false,
    type: () => MhciPrereqCreateNestedManyWithoutApplicationsInput,
  })
  @ValidateNested()
  @Type(() => MhciPrereqCreateNestedManyWithoutApplicationsInput)
  @IsOptional()
  @Field(() => MhciPrereqCreateNestedManyWithoutApplicationsInput, {
    nullable: true,
  })
  mhciPrereqs?: MhciPrereqCreateNestedManyWithoutApplicationsInput;

  @ApiProperty({
    required: false,
    type: () => MhciPrereqsCourseCreateNestedManyWithoutApplicationsInput,
  })
  @ValidateNested()
  @Type(() => MhciPrereqsCourseCreateNestedManyWithoutApplicationsInput)
  @IsOptional()
  @Field(() => MhciPrereqsCourseCreateNestedManyWithoutApplicationsInput, {
    nullable: true,
  })
  mhciPrereqsCourses?: MhciPrereqsCourseCreateNestedManyWithoutApplicationsInput;

  @ApiProperty({
    required: false,
    type: () => MlAreaCreateNestedManyWithoutApplicationsInput,
  })
  @ValidateNested()
  @Type(() => MlAreaCreateNestedManyWithoutApplicationsInput)
  @IsOptional()
  @Field(() => MlAreaCreateNestedManyWithoutApplicationsInput, {
    nullable: true,
  })
  mlArea?: MlAreaCreateNestedManyWithoutApplicationsInput;

  @ApiProperty({
    required: false,
    type: () => MlSupportingCourseworkCreateNestedManyWithoutApplicationsInput,
  })
  @ValidateNested()
  @Type(() => MlSupportingCourseworkCreateNestedManyWithoutApplicationsInput)
  @IsOptional()
  @Field(() => MlSupportingCourseworkCreateNestedManyWithoutApplicationsInput, {
    nullable: true,
  })
  mlSupportingCoursework?: MlSupportingCourseworkCreateNestedManyWithoutApplicationsInput;

  @ApiProperty({
    required: false,
    type: () => MseAqaCreateNestedManyWithoutApplicationsInput,
  })
  @ValidateNested()
  @Type(() => MseAqaCreateNestedManyWithoutApplicationsInput)
  @IsOptional()
  @Field(() => MseAqaCreateNestedManyWithoutApplicationsInput, {
    nullable: true,
  })
  mseAqa?: MseAqaCreateNestedManyWithoutApplicationsInput;

  @ApiProperty({
    required: false,
    type: () => MseCodilityWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => MseCodilityWhereUniqueInput)
  @IsOptional()
  @Field(() => MseCodilityWhereUniqueInput, {
    nullable: true,
  })
  mseCodility?: MseCodilityWhereUniqueInput | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  name!: string;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  notificationsent?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  otherInst?: string | null;

  @ApiProperty({
    required: true,
    type: Boolean,
  })
  @IsBoolean()
  @Field(() => Boolean)
  paid!: boolean;

  @ApiProperty({
    required: false,
    type: () => PaymentCreateNestedManyWithoutApplicationsInput,
  })
  @ValidateNested()
  @Type(() => PaymentCreateNestedManyWithoutApplicationsInput)
  @IsOptional()
  @Field(() => PaymentCreateNestedManyWithoutApplicationsInput, {
    nullable: true,
  })
  payment?: PaymentCreateNestedManyWithoutApplicationsInput;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  paymentamount?: Decimal | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  paymentdate?: Date | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  paymenttype?: number | null;

  @ApiProperty({
    required: false,
    type: () => PeriodApplicationCreateNestedManyWithoutApplicationsInput,
  })
  @ValidateNested()
  @Type(() => PeriodApplicationCreateNestedManyWithoutApplicationsInput)
  @IsOptional()
  @Field(() => PeriodApplicationCreateNestedManyWithoutApplicationsInput, {
    nullable: true,
  })
  periodApplication?: PeriodApplicationCreateNestedManyWithoutApplicationsInput;

  @ApiProperty({
    required: true,
    type: Boolean,
  })
  @IsBoolean()
  @Field(() => Boolean)
  pier!: boolean;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  portfolioLink?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  portfolioPassword?: string | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  portfoliosubmitted?: boolean | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  previousCoursework?: number | null;

  @ApiProperty({
    required: false,
    type: () => PromotionHistoryCreateNestedManyWithoutApplicationsInput,
  })
  @ValidateNested()
  @Type(() => PromotionHistoryCreateNestedManyWithoutApplicationsInput)
  @IsOptional()
  @Field(() => PromotionHistoryCreateNestedManyWithoutApplicationsInput, {
    nullable: true,
  })
  promotionHistory?: PromotionHistoryCreateNestedManyWithoutApplicationsInput;

  @ApiProperty({
    required: false,
    type: () => PublicationCreateNestedManyWithoutApplicationsInput,
  })
  @ValidateNested()
  @Type(() => PublicationCreateNestedManyWithoutApplicationsInput)
  @IsOptional()
  @Field(() => PublicationCreateNestedManyWithoutApplicationsInput, {
    nullable: true,
  })
  publication?: PublicationCreateNestedManyWithoutApplicationsInput;

  @ApiProperty({
    required: false,
    type: () => RecommendCreateNestedManyWithoutApplicationsInput,
  })
  @ValidateNested()
  @Type(() => RecommendCreateNestedManyWithoutApplicationsInput)
  @IsOptional()
  @Field(() => RecommendCreateNestedManyWithoutApplicationsInput, {
    nullable: true,
  })
  recommend?: RecommendCreateNestedManyWithoutApplicationsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  recordsPermission?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  recruitingEvent?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  referralToProgram?: string | null;

  @ApiProperty({
    required: false,
    type: () => RegistrationFeePaymentCreateNestedManyWithoutApplicationsInput,
  })
  @ValidateNested()
  @Type(() => RegistrationFeePaymentCreateNestedManyWithoutApplicationsInput)
  @IsOptional()
  @Field(() => RegistrationFeePaymentCreateNestedManyWithoutApplicationsInput, {
    nullable: true,
  })
  registrationFeePayment?: RegistrationFeePaymentCreateNestedManyWithoutApplicationsInput;

  @ApiProperty({
    required: false,
    type: () => RegistrationFeeStatusCreateNestedManyWithoutApplicationsInput,
  })
  @ValidateNested()
  @Type(() => RegistrationFeeStatusCreateNestedManyWithoutApplicationsInput)
  @IsOptional()
  @Field(() => RegistrationFeeStatusCreateNestedManyWithoutApplicationsInput, {
    nullable: true,
  })
  registrationFeeStatus?: RegistrationFeeStatusCreateNestedManyWithoutApplicationsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  rejectionSent?: string | null;

  @ApiProperty({
    required: false,
    type: () => ReviewCreateNestedManyWithoutApplicationsInput,
  })
  @ValidateNested()
  @Type(() => ReviewCreateNestedManyWithoutApplicationsInput)
  @IsOptional()
  @Field(() => ReviewCreateNestedManyWithoutApplicationsInput, {
    nullable: true,
  })
  review?: ReviewCreateNestedManyWithoutApplicationsInput;

  @ApiProperty({
    required: false,
    type: () => RissFundingCreateNestedManyWithoutApplicationsInput,
  })
  @ValidateNested()
  @Type(() => RissFundingCreateNestedManyWithoutApplicationsInput)
  @IsOptional()
  @Field(() => RissFundingCreateNestedManyWithoutApplicationsInput, {
    nullable: true,
  })
  rissFunding?: RissFundingCreateNestedManyWithoutApplicationsInput;

  @ApiProperty({
    required: false,
    type: () => RissMcnairCreateNestedManyWithoutApplicationsInput,
  })
  @ValidateNested()
  @Type(() => RissMcnairCreateNestedManyWithoutApplicationsInput)
  @IsOptional()
  @Field(() => RissMcnairCreateNestedManyWithoutApplicationsInput, {
    nullable: true,
  })
  rissMcnair?: RissMcnairCreateNestedManyWithoutApplicationsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  round2?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  round3?: string | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  sentToProgram!: string;

  @ApiProperty({
    required: false,
    type: () => SpecialConsiderationCreateNestedManyWithoutApplicationsInput,
  })
  @ValidateNested()
  @Type(() => SpecialConsiderationCreateNestedManyWithoutApplicationsInput)
  @IsOptional()
  @Field(() => SpecialConsiderationCreateNestedManyWithoutApplicationsInput, {
    nullable: true,
  })
  specialConsideration?: SpecialConsiderationCreateNestedManyWithoutApplicationsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  statementofpurpose?: string | null;

  @ApiProperty({
    required: true,
    type: Boolean,
  })
  @IsBoolean()
  @Field(() => Boolean)
  studentCommit!: boolean;

  @ApiProperty({
    required: false,
    type: () => StudentDecisionCreateNestedManyWithoutApplicationsInput,
  })
  @ValidateNested()
  @Type(() => StudentDecisionCreateNestedManyWithoutApplicationsInput)
  @IsOptional()
  @Field(() => StudentDecisionCreateNestedManyWithoutApplicationsInput, {
    nullable: true,
  })
  studentDecision?: StudentDecisionCreateNestedManyWithoutApplicationsInput;

  @ApiProperty({
    required: false,
    type: () => StudentDecisionHistoryCreateNestedManyWithoutApplicationsInput,
  })
  @ValidateNested()
  @Type(() => StudentDecisionHistoryCreateNestedManyWithoutApplicationsInput)
  @IsOptional()
  @Field(() => StudentDecisionHistoryCreateNestedManyWithoutApplicationsInput, {
    nullable: true,
  })
  studentDecisionHistory?: StudentDecisionHistoryCreateNestedManyWithoutApplicationsInput;

  @ApiProperty({
    required: true,
    type: Boolean,
  })
  @IsBoolean()
  @Field(() => Boolean)
  submitted!: boolean;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  submittedDate?: Date | null;

  @ApiProperty({
    required: false,
    type: () => TagMemberCreateNestedManyWithoutApplicationsInput,
  })
  @ValidateNested()
  @Type(() => TagMemberCreateNestedManyWithoutApplicationsInput)
  @IsOptional()
  @Field(() => TagMemberCreateNestedManyWithoutApplicationsInput, {
    nullable: true,
  })
  tagMembers?: TagMemberCreateNestedManyWithoutApplicationsInput;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Field(() => Number)
  userId!: number;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  waitlistSent?: string | null;

  @ApiProperty({
    required: true,
    type: Boolean,
  })
  @IsBoolean()
  @Field(() => Boolean)
  waive!: boolean;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  waivedate?: Date | null;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Field(() => Number)
  waiveHigherFee!: number;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  waiveToefl?: number | null;

  @ApiProperty({
    required: true,
    type: Boolean,
  })
  @IsBoolean()
  @Field(() => Boolean)
  womenfellowship!: boolean;
}

export { ApplicationCreateInput as ApplicationCreateInput };
