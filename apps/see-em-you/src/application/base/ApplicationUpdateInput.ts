/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field, Float } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AcoPalWhereUniqueInput } from "../../acoPal/base/AcoPalWhereUniqueInput";
import {
  ValidateNested,
  IsOptional,
  IsString,
  IsBoolean,
  IsInt,
  IsDate,
  IsNumber,
} from "class-validator";
import { Type } from "class-transformer";
import { ApplicationAdminNoteUpdateManyWithoutApplicationsInput } from "./ApplicationAdminNoteUpdateManyWithoutApplicationsInput";
import { AttendanceUpdateManyWithoutApplicationsInput } from "./AttendanceUpdateManyWithoutApplicationsInput";
import { CashnetPaymentUpdateManyWithoutApplicationsInput } from "./CashnetPaymentUpdateManyWithoutApplicationsInput";
import { ExperienceUpdateManyWithoutApplicationsInput } from "./ExperienceUpdateManyWithoutApplicationsInput";
import { FellowshipUpdateManyWithoutApplicationsInput } from "./FellowshipUpdateManyWithoutApplicationsInput";
import { GmatscoreUpdateManyWithoutApplicationsInput } from "./GmatscoreUpdateManyWithoutApplicationsInput";
import { GresubjectscoreUpdateManyWithoutApplicationsInput } from "./GresubjectscoreUpdateManyWithoutApplicationsInput";
import { IeltsscoreUpdateManyWithoutApplicationsInput } from "./IeltsscoreUpdateManyWithoutApplicationsInput";
import { LuApplicationAdvisorUpdateManyWithoutApplicationsInput } from "./LuApplicationAdvisorUpdateManyWithoutApplicationsInput";
import { LuApplicationAppreqUpdateManyWithoutApplicationsInput } from "./LuApplicationAppreqUpdateManyWithoutApplicationsInput";
import { LuApplicationCohortWhereUniqueInput } from "../../luApplicationCohort/base/LuApplicationCohortWhereUniqueInput";
import { LuApplicationGroupUpdateManyWithoutApplicationsInput } from "./LuApplicationGroupUpdateManyWithoutApplicationsInput";
import { LuApplicationProgramUpdateManyWithoutApplicationsInput } from "./LuApplicationProgramUpdateManyWithoutApplicationsInput";
import { LuApplicationStartSemesterWhereUniqueInput } from "../../luApplicationStartSemester/base/LuApplicationStartSemesterWhereUniqueInput";
import { MhciPrereqUpdateManyWithoutApplicationsInput } from "./MhciPrereqUpdateManyWithoutApplicationsInput";
import { MhciPrereqsCourseUpdateManyWithoutApplicationsInput } from "./MhciPrereqsCourseUpdateManyWithoutApplicationsInput";
import { MlAreaUpdateManyWithoutApplicationsInput } from "./MlAreaUpdateManyWithoutApplicationsInput";
import { MlSupportingCourseworkUpdateManyWithoutApplicationsInput } from "./MlSupportingCourseworkUpdateManyWithoutApplicationsInput";
import { MseAqaUpdateManyWithoutApplicationsInput } from "./MseAqaUpdateManyWithoutApplicationsInput";
import { MseCodilityWhereUniqueInput } from "../../mseCodility/base/MseCodilityWhereUniqueInput";
import { PaymentUpdateManyWithoutApplicationsInput } from "./PaymentUpdateManyWithoutApplicationsInput";
import { Decimal } from "decimal.js";
import { PeriodApplicationUpdateManyWithoutApplicationsInput } from "./PeriodApplicationUpdateManyWithoutApplicationsInput";
import { PromotionHistoryUpdateManyWithoutApplicationsInput } from "./PromotionHistoryUpdateManyWithoutApplicationsInput";
import { PublicationUpdateManyWithoutApplicationsInput } from "./PublicationUpdateManyWithoutApplicationsInput";
import { RecommendUpdateManyWithoutApplicationsInput } from "./RecommendUpdateManyWithoutApplicationsInput";
import { RegistrationFeePaymentUpdateManyWithoutApplicationsInput } from "./RegistrationFeePaymentUpdateManyWithoutApplicationsInput";
import { RegistrationFeeStatusUpdateManyWithoutApplicationsInput } from "./RegistrationFeeStatusUpdateManyWithoutApplicationsInput";
import { ReviewUpdateManyWithoutApplicationsInput } from "./ReviewUpdateManyWithoutApplicationsInput";
import { RissFundingUpdateManyWithoutApplicationsInput } from "./RissFundingUpdateManyWithoutApplicationsInput";
import { RissMcnairUpdateManyWithoutApplicationsInput } from "./RissMcnairUpdateManyWithoutApplicationsInput";
import { SpecialConsiderationUpdateManyWithoutApplicationsInput } from "./SpecialConsiderationUpdateManyWithoutApplicationsInput";
import { StudentDecisionUpdateManyWithoutApplicationsInput } from "./StudentDecisionUpdateManyWithoutApplicationsInput";
import { StudentDecisionHistoryUpdateManyWithoutApplicationsInput } from "./StudentDecisionHistoryUpdateManyWithoutApplicationsInput";
import { TagMemberUpdateManyWithoutApplicationsInput } from "./TagMemberUpdateManyWithoutApplicationsInput";

@InputType()
class ApplicationUpdateInput {
  @ApiProperty({
    required: false,
    type: () => AcoPalWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => AcoPalWhereUniqueInput)
  @IsOptional()
  @Field(() => AcoPalWhereUniqueInput, {
    nullable: true,
  })
  acoPal?: AcoPalWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => ApplicationAdminNoteUpdateManyWithoutApplicationsInput,
  })
  @ValidateNested()
  @Type(() => ApplicationAdminNoteUpdateManyWithoutApplicationsInput)
  @IsOptional()
  @Field(() => ApplicationAdminNoteUpdateManyWithoutApplicationsInput, {
    nullable: true,
  })
  applicationAdminNote?: ApplicationAdminNoteUpdateManyWithoutApplicationsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  area1?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  area2?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  area3?: string | null;

  @ApiProperty({
    required: false,
    type: () => AttendanceUpdateManyWithoutApplicationsInput,
  })
  @ValidateNested()
  @Type(() => AttendanceUpdateManyWithoutApplicationsInput)
  @IsOptional()
  @Field(() => AttendanceUpdateManyWithoutApplicationsInput, {
    nullable: true,
  })
  attendance?: AttendanceUpdateManyWithoutApplicationsInput;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  buckleywaive?: boolean | null;

  @ApiProperty({
    required: false,
    type: () => CashnetPaymentUpdateManyWithoutApplicationsInput,
  })
  @ValidateNested()
  @Type(() => CashnetPaymentUpdateManyWithoutApplicationsInput)
  @IsOptional()
  @Field(() => CashnetPaymentUpdateManyWithoutApplicationsInput, {
    nullable: true,
  })
  cashnetPayment?: CashnetPaymentUpdateManyWithoutApplicationsInput;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  cnbc?: number | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  complete?: boolean;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  createdDate?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  crossDeptProgs?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  crossDeptProgsOther?: string | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  cups?: boolean;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  curEnrolled?: string;

  @ApiProperty({
    required: false,
    type: () => ExperienceUpdateManyWithoutApplicationsInput,
  })
  @ValidateNested()
  @Type(() => ExperienceUpdateManyWithoutApplicationsInput)
  @IsOptional()
  @Field(() => ExperienceUpdateManyWithoutApplicationsInput, {
    nullable: true,
  })
  experience?: ExperienceUpdateManyWithoutApplicationsInput;

  @ApiProperty({
    required: false,
    type: () => FellowshipUpdateManyWithoutApplicationsInput,
  })
  @ValidateNested()
  @Type(() => FellowshipUpdateManyWithoutApplicationsInput)
  @IsOptional()
  @Field(() => FellowshipUpdateManyWithoutApplicationsInput, {
    nullable: true,
  })
  fellowships?: FellowshipUpdateManyWithoutApplicationsInput;

  @ApiProperty({
    required: false,
    type: () => GmatscoreUpdateManyWithoutApplicationsInput,
  })
  @ValidateNested()
  @Type(() => GmatscoreUpdateManyWithoutApplicationsInput)
  @IsOptional()
  @Field(() => GmatscoreUpdateManyWithoutApplicationsInput, {
    nullable: true,
  })
  gmatscore?: GmatscoreUpdateManyWithoutApplicationsInput;

  @ApiProperty({
    required: false,
    type: () => GresubjectscoreUpdateManyWithoutApplicationsInput,
  })
  @ValidateNested()
  @Type(() => GresubjectscoreUpdateManyWithoutApplicationsInput)
  @IsOptional()
  @Field(() => GresubjectscoreUpdateManyWithoutApplicationsInput, {
    nullable: true,
  })
  gresubjectscore?: GresubjectscoreUpdateManyWithoutApplicationsInput;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  hide?: boolean;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  honors?: string | null;

  @ApiProperty({
    required: false,
    type: () => IeltsscoreUpdateManyWithoutApplicationsInput,
  })
  @ValidateNested()
  @Type(() => IeltsscoreUpdateManyWithoutApplicationsInput)
  @IsOptional()
  @Field(() => IeltsscoreUpdateManyWithoutApplicationsInput, {
    nullable: true,
  })
  ieltsscore?: IeltsscoreUpdateManyWithoutApplicationsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  invitationEmailSent?: string | null;

  @ApiProperty({
    required: false,
    type: () => LuApplicationAdvisorUpdateManyWithoutApplicationsInput,
  })
  @ValidateNested()
  @Type(() => LuApplicationAdvisorUpdateManyWithoutApplicationsInput)
  @IsOptional()
  @Field(() => LuApplicationAdvisorUpdateManyWithoutApplicationsInput, {
    nullable: true,
  })
  luApplicationAdvisor?: LuApplicationAdvisorUpdateManyWithoutApplicationsInput;

  @ApiProperty({
    required: false,
    type: () => LuApplicationAppreqUpdateManyWithoutApplicationsInput,
  })
  @ValidateNested()
  @Type(() => LuApplicationAppreqUpdateManyWithoutApplicationsInput)
  @IsOptional()
  @Field(() => LuApplicationAppreqUpdateManyWithoutApplicationsInput, {
    nullable: true,
  })
  luApplicationAppreqs?: LuApplicationAppreqUpdateManyWithoutApplicationsInput;

  @ApiProperty({
    required: false,
    type: () => LuApplicationCohortWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => LuApplicationCohortWhereUniqueInput)
  @IsOptional()
  @Field(() => LuApplicationCohortWhereUniqueInput, {
    nullable: true,
  })
  luApplicationCohort?: LuApplicationCohortWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => LuApplicationGroupUpdateManyWithoutApplicationsInput,
  })
  @ValidateNested()
  @Type(() => LuApplicationGroupUpdateManyWithoutApplicationsInput)
  @IsOptional()
  @Field(() => LuApplicationGroupUpdateManyWithoutApplicationsInput, {
    nullable: true,
  })
  luApplicationGroups?: LuApplicationGroupUpdateManyWithoutApplicationsInput;

  @ApiProperty({
    required: false,
    type: () => LuApplicationProgramUpdateManyWithoutApplicationsInput,
  })
  @ValidateNested()
  @Type(() => LuApplicationProgramUpdateManyWithoutApplicationsInput)
  @IsOptional()
  @Field(() => LuApplicationProgramUpdateManyWithoutApplicationsInput, {
    nullable: true,
  })
  luApplicationPrograms?: LuApplicationProgramUpdateManyWithoutApplicationsInput;

  @ApiProperty({
    required: false,
    type: () => LuApplicationStartSemesterWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => LuApplicationStartSemesterWhereUniqueInput)
  @IsOptional()
  @Field(() => LuApplicationStartSemesterWhereUniqueInput, {
    nullable: true,
  })
  luApplicationStartSemester?: LuApplicationStartSemesterWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  mastersReviewWaiver?: boolean;

  @ApiProperty({
    required: false,
    type: () => MhciPrereqUpdateManyWithoutApplicationsInput,
  })
  @ValidateNested()
  @Type(() => MhciPrereqUpdateManyWithoutApplicationsInput)
  @IsOptional()
  @Field(() => MhciPrereqUpdateManyWithoutApplicationsInput, {
    nullable: true,
  })
  mhciPrereqs?: MhciPrereqUpdateManyWithoutApplicationsInput;

  @ApiProperty({
    required: false,
    type: () => MhciPrereqsCourseUpdateManyWithoutApplicationsInput,
  })
  @ValidateNested()
  @Type(() => MhciPrereqsCourseUpdateManyWithoutApplicationsInput)
  @IsOptional()
  @Field(() => MhciPrereqsCourseUpdateManyWithoutApplicationsInput, {
    nullable: true,
  })
  mhciPrereqsCourses?: MhciPrereqsCourseUpdateManyWithoutApplicationsInput;

  @ApiProperty({
    required: false,
    type: () => MlAreaUpdateManyWithoutApplicationsInput,
  })
  @ValidateNested()
  @Type(() => MlAreaUpdateManyWithoutApplicationsInput)
  @IsOptional()
  @Field(() => MlAreaUpdateManyWithoutApplicationsInput, {
    nullable: true,
  })
  mlArea?: MlAreaUpdateManyWithoutApplicationsInput;

  @ApiProperty({
    required: false,
    type: () => MlSupportingCourseworkUpdateManyWithoutApplicationsInput,
  })
  @ValidateNested()
  @Type(() => MlSupportingCourseworkUpdateManyWithoutApplicationsInput)
  @IsOptional()
  @Field(() => MlSupportingCourseworkUpdateManyWithoutApplicationsInput, {
    nullable: true,
  })
  mlSupportingCoursework?: MlSupportingCourseworkUpdateManyWithoutApplicationsInput;

  @ApiProperty({
    required: false,
    type: () => MseAqaUpdateManyWithoutApplicationsInput,
  })
  @ValidateNested()
  @Type(() => MseAqaUpdateManyWithoutApplicationsInput)
  @IsOptional()
  @Field(() => MseAqaUpdateManyWithoutApplicationsInput, {
    nullable: true,
  })
  mseAqa?: MseAqaUpdateManyWithoutApplicationsInput;

  @ApiProperty({
    required: false,
    type: () => MseCodilityWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => MseCodilityWhereUniqueInput)
  @IsOptional()
  @Field(() => MseCodilityWhereUniqueInput, {
    nullable: true,
  })
  mseCodility?: MseCodilityWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  notificationsent?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  otherInst?: string | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  paid?: boolean;

  @ApiProperty({
    required: false,
    type: () => PaymentUpdateManyWithoutApplicationsInput,
  })
  @ValidateNested()
  @Type(() => PaymentUpdateManyWithoutApplicationsInput)
  @IsOptional()
  @Field(() => PaymentUpdateManyWithoutApplicationsInput, {
    nullable: true,
  })
  payment?: PaymentUpdateManyWithoutApplicationsInput;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  paymentamount?: Decimal | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  paymentdate?: Date | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  paymenttype?: number | null;

  @ApiProperty({
    required: false,
    type: () => PeriodApplicationUpdateManyWithoutApplicationsInput,
  })
  @ValidateNested()
  @Type(() => PeriodApplicationUpdateManyWithoutApplicationsInput)
  @IsOptional()
  @Field(() => PeriodApplicationUpdateManyWithoutApplicationsInput, {
    nullable: true,
  })
  periodApplication?: PeriodApplicationUpdateManyWithoutApplicationsInput;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  pier?: boolean;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  portfolioLink?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  portfolioPassword?: string | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  portfoliosubmitted?: boolean | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  previousCoursework?: number | null;

  @ApiProperty({
    required: false,
    type: () => PromotionHistoryUpdateManyWithoutApplicationsInput,
  })
  @ValidateNested()
  @Type(() => PromotionHistoryUpdateManyWithoutApplicationsInput)
  @IsOptional()
  @Field(() => PromotionHistoryUpdateManyWithoutApplicationsInput, {
    nullable: true,
  })
  promotionHistory?: PromotionHistoryUpdateManyWithoutApplicationsInput;

  @ApiProperty({
    required: false,
    type: () => PublicationUpdateManyWithoutApplicationsInput,
  })
  @ValidateNested()
  @Type(() => PublicationUpdateManyWithoutApplicationsInput)
  @IsOptional()
  @Field(() => PublicationUpdateManyWithoutApplicationsInput, {
    nullable: true,
  })
  publication?: PublicationUpdateManyWithoutApplicationsInput;

  @ApiProperty({
    required: false,
    type: () => RecommendUpdateManyWithoutApplicationsInput,
  })
  @ValidateNested()
  @Type(() => RecommendUpdateManyWithoutApplicationsInput)
  @IsOptional()
  @Field(() => RecommendUpdateManyWithoutApplicationsInput, {
    nullable: true,
  })
  recommend?: RecommendUpdateManyWithoutApplicationsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  recordsPermission?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  recruitingEvent?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  referralToProgram?: string | null;

  @ApiProperty({
    required: false,
    type: () => RegistrationFeePaymentUpdateManyWithoutApplicationsInput,
  })
  @ValidateNested()
  @Type(() => RegistrationFeePaymentUpdateManyWithoutApplicationsInput)
  @IsOptional()
  @Field(() => RegistrationFeePaymentUpdateManyWithoutApplicationsInput, {
    nullable: true,
  })
  registrationFeePayment?: RegistrationFeePaymentUpdateManyWithoutApplicationsInput;

  @ApiProperty({
    required: false,
    type: () => RegistrationFeeStatusUpdateManyWithoutApplicationsInput,
  })
  @ValidateNested()
  @Type(() => RegistrationFeeStatusUpdateManyWithoutApplicationsInput)
  @IsOptional()
  @Field(() => RegistrationFeeStatusUpdateManyWithoutApplicationsInput, {
    nullable: true,
  })
  registrationFeeStatus?: RegistrationFeeStatusUpdateManyWithoutApplicationsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  rejectionSent?: string | null;

  @ApiProperty({
    required: false,
    type: () => ReviewUpdateManyWithoutApplicationsInput,
  })
  @ValidateNested()
  @Type(() => ReviewUpdateManyWithoutApplicationsInput)
  @IsOptional()
  @Field(() => ReviewUpdateManyWithoutApplicationsInput, {
    nullable: true,
  })
  review?: ReviewUpdateManyWithoutApplicationsInput;

  @ApiProperty({
    required: false,
    type: () => RissFundingUpdateManyWithoutApplicationsInput,
  })
  @ValidateNested()
  @Type(() => RissFundingUpdateManyWithoutApplicationsInput)
  @IsOptional()
  @Field(() => RissFundingUpdateManyWithoutApplicationsInput, {
    nullable: true,
  })
  rissFunding?: RissFundingUpdateManyWithoutApplicationsInput;

  @ApiProperty({
    required: false,
    type: () => RissMcnairUpdateManyWithoutApplicationsInput,
  })
  @ValidateNested()
  @Type(() => RissMcnairUpdateManyWithoutApplicationsInput)
  @IsOptional()
  @Field(() => RissMcnairUpdateManyWithoutApplicationsInput, {
    nullable: true,
  })
  rissMcnair?: RissMcnairUpdateManyWithoutApplicationsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  round2?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  round3?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  sentToProgram?: string;

  @ApiProperty({
    required: false,
    type: () => SpecialConsiderationUpdateManyWithoutApplicationsInput,
  })
  @ValidateNested()
  @Type(() => SpecialConsiderationUpdateManyWithoutApplicationsInput)
  @IsOptional()
  @Field(() => SpecialConsiderationUpdateManyWithoutApplicationsInput, {
    nullable: true,
  })
  specialConsideration?: SpecialConsiderationUpdateManyWithoutApplicationsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  statementofpurpose?: string | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  studentCommit?: boolean;

  @ApiProperty({
    required: false,
    type: () => StudentDecisionUpdateManyWithoutApplicationsInput,
  })
  @ValidateNested()
  @Type(() => StudentDecisionUpdateManyWithoutApplicationsInput)
  @IsOptional()
  @Field(() => StudentDecisionUpdateManyWithoutApplicationsInput, {
    nullable: true,
  })
  studentDecision?: StudentDecisionUpdateManyWithoutApplicationsInput;

  @ApiProperty({
    required: false,
    type: () => StudentDecisionHistoryUpdateManyWithoutApplicationsInput,
  })
  @ValidateNested()
  @Type(() => StudentDecisionHistoryUpdateManyWithoutApplicationsInput)
  @IsOptional()
  @Field(() => StudentDecisionHistoryUpdateManyWithoutApplicationsInput, {
    nullable: true,
  })
  studentDecisionHistory?: StudentDecisionHistoryUpdateManyWithoutApplicationsInput;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  submitted?: boolean;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  submittedDate?: Date | null;

  @ApiProperty({
    required: false,
    type: () => TagMemberUpdateManyWithoutApplicationsInput,
  })
  @ValidateNested()
  @Type(() => TagMemberUpdateManyWithoutApplicationsInput)
  @IsOptional()
  @Field(() => TagMemberUpdateManyWithoutApplicationsInput, {
    nullable: true,
  })
  tagMembers?: TagMemberUpdateManyWithoutApplicationsInput;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  userId?: number;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  waitlistSent?: string | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  waive?: boolean;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  waivedate?: Date | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  waiveHigherFee?: number;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  waiveToefl?: number | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  womenfellowship?: boolean;
}

export { ApplicationUpdateInput as ApplicationUpdateInput };
