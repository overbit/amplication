/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AcoPalWhereUniqueInput } from "../../acoPal/base/AcoPalWhereUniqueInput";
import { ValidateNested, IsOptional } from "class-validator";
import { Type } from "class-transformer";
import { ApplicationAdminNoteListRelationFilter } from "../../applicationAdminNote/base/ApplicationAdminNoteListRelationFilter";
import { AttendanceListRelationFilter } from "../../attendance/base/AttendanceListRelationFilter";
import { CashnetPaymentListRelationFilter } from "../../cashnetPayment/base/CashnetPaymentListRelationFilter";
import { ExperienceListRelationFilter } from "../../experience/base/ExperienceListRelationFilter";
import { FellowshipListRelationFilter } from "../../fellowship/base/FellowshipListRelationFilter";
import { GmatscoreListRelationFilter } from "../../gmatscore/base/GmatscoreListRelationFilter";
import { GresubjectscoreListRelationFilter } from "../../gresubjectscore/base/GresubjectscoreListRelationFilter";
import { IeltsscoreListRelationFilter } from "../../ieltsscore/base/IeltsscoreListRelationFilter";
import { LuApplicationAdvisorListRelationFilter } from "../../luApplicationAdvisor/base/LuApplicationAdvisorListRelationFilter";
import { LuApplicationAppreqListRelationFilter } from "../../luApplicationAppreq/base/LuApplicationAppreqListRelationFilter";
import { LuApplicationCohortWhereUniqueInput } from "../../luApplicationCohort/base/LuApplicationCohortWhereUniqueInput";
import { LuApplicationGroupListRelationFilter } from "../../luApplicationGroup/base/LuApplicationGroupListRelationFilter";
import { LuApplicationProgramListRelationFilter } from "../../luApplicationProgram/base/LuApplicationProgramListRelationFilter";
import { LuApplicationStartSemesterWhereUniqueInput } from "../../luApplicationStartSemester/base/LuApplicationStartSemesterWhereUniqueInput";
import { MhciPrereqListRelationFilter } from "../../mhciPrereq/base/MhciPrereqListRelationFilter";
import { MhciPrereqsCourseListRelationFilter } from "../../mhciPrereqsCourse/base/MhciPrereqsCourseListRelationFilter";
import { MlAreaListRelationFilter } from "../../mlArea/base/MlAreaListRelationFilter";
import { MlSupportingCourseworkListRelationFilter } from "../../mlSupportingCoursework/base/MlSupportingCourseworkListRelationFilter";
import { MseAqaListRelationFilter } from "../../mseAqa/base/MseAqaListRelationFilter";
import { MseCodilityWhereUniqueInput } from "../../mseCodility/base/MseCodilityWhereUniqueInput";
import { PaymentListRelationFilter } from "../../payment/base/PaymentListRelationFilter";
import { PeriodApplicationListRelationFilter } from "../../periodApplication/base/PeriodApplicationListRelationFilter";
import { PromotionHistoryListRelationFilter } from "../../promotionHistory/base/PromotionHistoryListRelationFilter";
import { PublicationListRelationFilter } from "../../publication/base/PublicationListRelationFilter";
import { RecommendListRelationFilter } from "../../recommend/base/RecommendListRelationFilter";
import { RegistrationFeePaymentListRelationFilter } from "../../registrationFeePayment/base/RegistrationFeePaymentListRelationFilter";
import { RegistrationFeeStatusListRelationFilter } from "../../registrationFeeStatus/base/RegistrationFeeStatusListRelationFilter";
import { ReviewListRelationFilter } from "../../review/base/ReviewListRelationFilter";
import { RissFundingListRelationFilter } from "../../rissFunding/base/RissFundingListRelationFilter";
import { RissMcnairListRelationFilter } from "../../rissMcnair/base/RissMcnairListRelationFilter";
import { SpecialConsiderationListRelationFilter } from "../../specialConsideration/base/SpecialConsiderationListRelationFilter";
import { StudentDecisionListRelationFilter } from "../../studentDecision/base/StudentDecisionListRelationFilter";
import { StudentDecisionHistoryListRelationFilter } from "../../studentDecisionHistory/base/StudentDecisionHistoryListRelationFilter";
import { TagMemberListRelationFilter } from "../../tagMember/base/TagMemberListRelationFilter";

@InputType()
class ApplicationWhereInput {
  @ApiProperty({
    required: false,
    type: () => AcoPalWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => AcoPalWhereUniqueInput)
  @IsOptional()
  @Field(() => AcoPalWhereUniqueInput, {
    nullable: true,
  })
  acoPal?: AcoPalWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => ApplicationAdminNoteListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ApplicationAdminNoteListRelationFilter)
  @IsOptional()
  @Field(() => ApplicationAdminNoteListRelationFilter, {
    nullable: true,
  })
  applicationAdminNote?: ApplicationAdminNoteListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => AttendanceListRelationFilter,
  })
  @ValidateNested()
  @Type(() => AttendanceListRelationFilter)
  @IsOptional()
  @Field(() => AttendanceListRelationFilter, {
    nullable: true,
  })
  attendance?: AttendanceListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => CashnetPaymentListRelationFilter,
  })
  @ValidateNested()
  @Type(() => CashnetPaymentListRelationFilter)
  @IsOptional()
  @Field(() => CashnetPaymentListRelationFilter, {
    nullable: true,
  })
  cashnetPayment?: CashnetPaymentListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => ExperienceListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ExperienceListRelationFilter)
  @IsOptional()
  @Field(() => ExperienceListRelationFilter, {
    nullable: true,
  })
  experience?: ExperienceListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => FellowshipListRelationFilter,
  })
  @ValidateNested()
  @Type(() => FellowshipListRelationFilter)
  @IsOptional()
  @Field(() => FellowshipListRelationFilter, {
    nullable: true,
  })
  fellowships?: FellowshipListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => GmatscoreListRelationFilter,
  })
  @ValidateNested()
  @Type(() => GmatscoreListRelationFilter)
  @IsOptional()
  @Field(() => GmatscoreListRelationFilter, {
    nullable: true,
  })
  gmatscore?: GmatscoreListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => GresubjectscoreListRelationFilter,
  })
  @ValidateNested()
  @Type(() => GresubjectscoreListRelationFilter)
  @IsOptional()
  @Field(() => GresubjectscoreListRelationFilter, {
    nullable: true,
  })
  gresubjectscore?: GresubjectscoreListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => IeltsscoreListRelationFilter,
  })
  @ValidateNested()
  @Type(() => IeltsscoreListRelationFilter)
  @IsOptional()
  @Field(() => IeltsscoreListRelationFilter, {
    nullable: true,
  })
  ieltsscore?: IeltsscoreListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => LuApplicationAdvisorListRelationFilter,
  })
  @ValidateNested()
  @Type(() => LuApplicationAdvisorListRelationFilter)
  @IsOptional()
  @Field(() => LuApplicationAdvisorListRelationFilter, {
    nullable: true,
  })
  luApplicationAdvisor?: LuApplicationAdvisorListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => LuApplicationAppreqListRelationFilter,
  })
  @ValidateNested()
  @Type(() => LuApplicationAppreqListRelationFilter)
  @IsOptional()
  @Field(() => LuApplicationAppreqListRelationFilter, {
    nullable: true,
  })
  luApplicationAppreqs?: LuApplicationAppreqListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => LuApplicationCohortWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => LuApplicationCohortWhereUniqueInput)
  @IsOptional()
  @Field(() => LuApplicationCohortWhereUniqueInput, {
    nullable: true,
  })
  luApplicationCohort?: LuApplicationCohortWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => LuApplicationGroupListRelationFilter,
  })
  @ValidateNested()
  @Type(() => LuApplicationGroupListRelationFilter)
  @IsOptional()
  @Field(() => LuApplicationGroupListRelationFilter, {
    nullable: true,
  })
  luApplicationGroups?: LuApplicationGroupListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => LuApplicationProgramListRelationFilter,
  })
  @ValidateNested()
  @Type(() => LuApplicationProgramListRelationFilter)
  @IsOptional()
  @Field(() => LuApplicationProgramListRelationFilter, {
    nullable: true,
  })
  luApplicationPrograms?: LuApplicationProgramListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => LuApplicationStartSemesterWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => LuApplicationStartSemesterWhereUniqueInput)
  @IsOptional()
  @Field(() => LuApplicationStartSemesterWhereUniqueInput, {
    nullable: true,
  })
  luApplicationStartSemester?: LuApplicationStartSemesterWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => MhciPrereqListRelationFilter,
  })
  @ValidateNested()
  @Type(() => MhciPrereqListRelationFilter)
  @IsOptional()
  @Field(() => MhciPrereqListRelationFilter, {
    nullable: true,
  })
  mhciPrereqs?: MhciPrereqListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => MhciPrereqsCourseListRelationFilter,
  })
  @ValidateNested()
  @Type(() => MhciPrereqsCourseListRelationFilter)
  @IsOptional()
  @Field(() => MhciPrereqsCourseListRelationFilter, {
    nullable: true,
  })
  mhciPrereqsCourses?: MhciPrereqsCourseListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => MlAreaListRelationFilter,
  })
  @ValidateNested()
  @Type(() => MlAreaListRelationFilter)
  @IsOptional()
  @Field(() => MlAreaListRelationFilter, {
    nullable: true,
  })
  mlArea?: MlAreaListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => MlSupportingCourseworkListRelationFilter,
  })
  @ValidateNested()
  @Type(() => MlSupportingCourseworkListRelationFilter)
  @IsOptional()
  @Field(() => MlSupportingCourseworkListRelationFilter, {
    nullable: true,
  })
  mlSupportingCoursework?: MlSupportingCourseworkListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => MseAqaListRelationFilter,
  })
  @ValidateNested()
  @Type(() => MseAqaListRelationFilter)
  @IsOptional()
  @Field(() => MseAqaListRelationFilter, {
    nullable: true,
  })
  mseAqa?: MseAqaListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => MseCodilityWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => MseCodilityWhereUniqueInput)
  @IsOptional()
  @Field(() => MseCodilityWhereUniqueInput, {
    nullable: true,
  })
  mseCodility?: MseCodilityWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => PaymentListRelationFilter,
  })
  @ValidateNested()
  @Type(() => PaymentListRelationFilter)
  @IsOptional()
  @Field(() => PaymentListRelationFilter, {
    nullable: true,
  })
  payment?: PaymentListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => PeriodApplicationListRelationFilter,
  })
  @ValidateNested()
  @Type(() => PeriodApplicationListRelationFilter)
  @IsOptional()
  @Field(() => PeriodApplicationListRelationFilter, {
    nullable: true,
  })
  periodApplication?: PeriodApplicationListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => PromotionHistoryListRelationFilter,
  })
  @ValidateNested()
  @Type(() => PromotionHistoryListRelationFilter)
  @IsOptional()
  @Field(() => PromotionHistoryListRelationFilter, {
    nullable: true,
  })
  promotionHistory?: PromotionHistoryListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => PublicationListRelationFilter,
  })
  @ValidateNested()
  @Type(() => PublicationListRelationFilter)
  @IsOptional()
  @Field(() => PublicationListRelationFilter, {
    nullable: true,
  })
  publication?: PublicationListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => RecommendListRelationFilter,
  })
  @ValidateNested()
  @Type(() => RecommendListRelationFilter)
  @IsOptional()
  @Field(() => RecommendListRelationFilter, {
    nullable: true,
  })
  recommend?: RecommendListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => RegistrationFeePaymentListRelationFilter,
  })
  @ValidateNested()
  @Type(() => RegistrationFeePaymentListRelationFilter)
  @IsOptional()
  @Field(() => RegistrationFeePaymentListRelationFilter, {
    nullable: true,
  })
  registrationFeePayment?: RegistrationFeePaymentListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => RegistrationFeeStatusListRelationFilter,
  })
  @ValidateNested()
  @Type(() => RegistrationFeeStatusListRelationFilter)
  @IsOptional()
  @Field(() => RegistrationFeeStatusListRelationFilter, {
    nullable: true,
  })
  registrationFeeStatus?: RegistrationFeeStatusListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => ReviewListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ReviewListRelationFilter)
  @IsOptional()
  @Field(() => ReviewListRelationFilter, {
    nullable: true,
  })
  review?: ReviewListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => RissFundingListRelationFilter,
  })
  @ValidateNested()
  @Type(() => RissFundingListRelationFilter)
  @IsOptional()
  @Field(() => RissFundingListRelationFilter, {
    nullable: true,
  })
  rissFunding?: RissFundingListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => RissMcnairListRelationFilter,
  })
  @ValidateNested()
  @Type(() => RissMcnairListRelationFilter)
  @IsOptional()
  @Field(() => RissMcnairListRelationFilter, {
    nullable: true,
  })
  rissMcnair?: RissMcnairListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => SpecialConsiderationListRelationFilter,
  })
  @ValidateNested()
  @Type(() => SpecialConsiderationListRelationFilter)
  @IsOptional()
  @Field(() => SpecialConsiderationListRelationFilter, {
    nullable: true,
  })
  specialConsideration?: SpecialConsiderationListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => StudentDecisionListRelationFilter,
  })
  @ValidateNested()
  @Type(() => StudentDecisionListRelationFilter)
  @IsOptional()
  @Field(() => StudentDecisionListRelationFilter, {
    nullable: true,
  })
  studentDecision?: StudentDecisionListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => StudentDecisionHistoryListRelationFilter,
  })
  @ValidateNested()
  @Type(() => StudentDecisionHistoryListRelationFilter)
  @IsOptional()
  @Field(() => StudentDecisionHistoryListRelationFilter, {
    nullable: true,
  })
  studentDecisionHistory?: StudentDecisionHistoryListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => TagMemberListRelationFilter,
  })
  @ValidateNested()
  @Type(() => TagMemberListRelationFilter)
  @IsOptional()
  @Field(() => TagMemberListRelationFilter, {
    nullable: true,
  })
  tagMembers?: TagMemberListRelationFilter;
}

export { ApplicationWhereInput as ApplicationWhereInput };
