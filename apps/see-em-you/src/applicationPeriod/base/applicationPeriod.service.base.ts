/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  ApplicationPeriod as PrismaApplicationPeriod,
} from "@prisma/client";

export class ApplicationPeriodServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.ApplicationPeriodCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.ApplicationPeriodCountArgs>
  ): Promise<number> {
    return this.prisma.applicationPeriod.count(args);
  }

  async applicationPeriods<T extends Prisma.ApplicationPeriodFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.ApplicationPeriodFindManyArgs>
  ): Promise<PrismaApplicationPeriod[]> {
    return this.prisma.applicationPeriod.findMany(args);
  }
  async applicationPeriod<T extends Prisma.ApplicationPeriodFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.ApplicationPeriodFindUniqueArgs>
  ): Promise<PrismaApplicationPeriod | null> {
    return this.prisma.applicationPeriod.findUnique(args);
  }
  async createApplicationPeriod<T extends Prisma.ApplicationPeriodCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.ApplicationPeriodCreateArgs>
  ): Promise<PrismaApplicationPeriod> {
    return this.prisma.applicationPeriod.create<T>(args);
  }
  async updateApplicationPeriod<T extends Prisma.ApplicationPeriodUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.ApplicationPeriodUpdateArgs>
  ): Promise<PrismaApplicationPeriod> {
    return this.prisma.applicationPeriod.update<T>(args);
  }
  async deleteApplicationPeriod<T extends Prisma.ApplicationPeriodDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.ApplicationPeriodDeleteArgs>
  ): Promise<PrismaApplicationPeriod> {
    return this.prisma.applicationPeriod.delete(args);
  }
}
