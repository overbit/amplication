/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  MitsSlateEmploy as PrismaMitsSlateEmploy,
} from "@prisma/client";

export class MitsSlateEmployServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.MitsSlateEmployCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.MitsSlateEmployCountArgs>
  ): Promise<number> {
    return this.prisma.mitsSlateEmploy.count(args);
  }

  async mitsSlateEmploys<T extends Prisma.MitsSlateEmployFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.MitsSlateEmployFindManyArgs>
  ): Promise<PrismaMitsSlateEmploy[]> {
    return this.prisma.mitsSlateEmploy.findMany(args);
  }
  async mitsSlateEmploy<T extends Prisma.MitsSlateEmployFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.MitsSlateEmployFindUniqueArgs>
  ): Promise<PrismaMitsSlateEmploy | null> {
    return this.prisma.mitsSlateEmploy.findUnique(args);
  }
  async createMitsSlateEmploy<T extends Prisma.MitsSlateEmployCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.MitsSlateEmployCreateArgs>
  ): Promise<PrismaMitsSlateEmploy> {
    return this.prisma.mitsSlateEmploy.create<T>(args);
  }
  async updateMitsSlateEmploy<T extends Prisma.MitsSlateEmployUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.MitsSlateEmployUpdateArgs>
  ): Promise<PrismaMitsSlateEmploy> {
    return this.prisma.mitsSlateEmploy.update<T>(args);
  }
  async deleteMitsSlateEmploy<T extends Prisma.MitsSlateEmployDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.MitsSlateEmployDeleteArgs>
  ): Promise<PrismaMitsSlateEmploy> {
    return this.prisma.mitsSlateEmploy.delete(args);
  }
}
