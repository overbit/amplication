/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  LuApplicationInterest as PrismaLuApplicationInterest,
} from "@prisma/client";

export class LuApplicationInterestServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.LuApplicationInterestCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.LuApplicationInterestCountArgs>
  ): Promise<number> {
    return this.prisma.luApplicationInterest.count(args);
  }

  async luApplicationInterests<
    T extends Prisma.LuApplicationInterestFindManyArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.LuApplicationInterestFindManyArgs>
  ): Promise<PrismaLuApplicationInterest[]> {
    return this.prisma.luApplicationInterest.findMany(args);
  }
  async luApplicationInterest<
    T extends Prisma.LuApplicationInterestFindUniqueArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.LuApplicationInterestFindUniqueArgs>
  ): Promise<PrismaLuApplicationInterest | null> {
    return this.prisma.luApplicationInterest.findUnique(args);
  }
  async createLuApplicationInterest<
    T extends Prisma.LuApplicationInterestCreateArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.LuApplicationInterestCreateArgs>
  ): Promise<PrismaLuApplicationInterest> {
    return this.prisma.luApplicationInterest.create<T>(args);
  }
  async updateLuApplicationInterest<
    T extends Prisma.LuApplicationInterestUpdateArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.LuApplicationInterestUpdateArgs>
  ): Promise<PrismaLuApplicationInterest> {
    return this.prisma.luApplicationInterest.update<T>(args);
  }
  async deleteLuApplicationInterest<
    T extends Prisma.LuApplicationInterestDeleteArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.LuApplicationInterestDeleteArgs>
  ): Promise<PrismaLuApplicationInterest> {
    return this.prisma.luApplicationInterest.delete(args);
  }
}
