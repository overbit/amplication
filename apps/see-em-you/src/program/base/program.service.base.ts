/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Program as PrismaProgram } from "@prisma/client";

export class ProgramServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.ProgramCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.ProgramCountArgs>
  ): Promise<number> {
    return this.prisma.program.count(args);
  }

  async programs<T extends Prisma.ProgramFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.ProgramFindManyArgs>
  ): Promise<PrismaProgram[]> {
    return this.prisma.program.findMany(args);
  }
  async program<T extends Prisma.ProgramFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.ProgramFindUniqueArgs>
  ): Promise<PrismaProgram | null> {
    return this.prisma.program.findUnique(args);
  }
  async createProgram<T extends Prisma.ProgramCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.ProgramCreateArgs>
  ): Promise<PrismaProgram> {
    return this.prisma.program.create<T>(args);
  }
  async updateProgram<T extends Prisma.ProgramUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.ProgramUpdateArgs>
  ): Promise<PrismaProgram> {
    return this.prisma.program.update<T>(args);
  }
  async deleteProgram<T extends Prisma.ProgramDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.ProgramDeleteArgs>
  ): Promise<PrismaProgram> {
    return this.prisma.program.delete(args);
  }
}
