/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, UsersOrig as PrismaUsersOrig } from "@prisma/client";

export class UsersOrigServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.UsersOrigCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.UsersOrigCountArgs>
  ): Promise<number> {
    return this.prisma.usersOrig.count(args);
  }

  async usersOrigs<T extends Prisma.UsersOrigFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.UsersOrigFindManyArgs>
  ): Promise<PrismaUsersOrig[]> {
    return this.prisma.usersOrig.findMany(args);
  }
  async usersOrig<T extends Prisma.UsersOrigFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.UsersOrigFindUniqueArgs>
  ): Promise<PrismaUsersOrig | null> {
    return this.prisma.usersOrig.findUnique(args);
  }
  async createUsersOrig<T extends Prisma.UsersOrigCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.UsersOrigCreateArgs>
  ): Promise<PrismaUsersOrig> {
    return this.prisma.usersOrig.create<T>(args);
  }
  async updateUsersOrig<T extends Prisma.UsersOrigUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.UsersOrigUpdateArgs>
  ): Promise<PrismaUsersOrig> {
    return this.prisma.usersOrig.update<T>(args);
  }
  async deleteUsersOrig<T extends Prisma.UsersOrigDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.UsersOrigDeleteArgs>
  ): Promise<PrismaUsersOrig> {
    return this.prisma.usersOrig.delete(args);
  }
}
