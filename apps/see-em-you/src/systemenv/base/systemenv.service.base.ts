/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Systemenv } from "@prisma/client";

export class SystemenvServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.SystemenvCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.SystemenvCountArgs>
  ): Promise<number> {
    return this.prisma.systemenv.count(args);
  }

  async systemenvs<T extends Prisma.SystemenvFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.SystemenvFindManyArgs>
  ): Promise<Systemenv[]> {
    return this.prisma.systemenv.findMany(args);
  }
  async systemenv<T extends Prisma.SystemenvFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.SystemenvFindUniqueArgs>
  ): Promise<Systemenv | null> {
    return this.prisma.systemenv.findUnique(args);
  }
  async createSystemenv<T extends Prisma.SystemenvCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.SystemenvCreateArgs>
  ): Promise<Systemenv> {
    return this.prisma.systemenv.create<T>(args);
  }
  async updateSystemenv<T extends Prisma.SystemenvUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.SystemenvUpdateArgs>
  ): Promise<Systemenv> {
    return this.prisma.systemenv.update<T>(args);
  }
  async deleteSystemenv<T extends Prisma.SystemenvDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.SystemenvDeleteArgs>
  ): Promise<Systemenv> {
    return this.prisma.systemenv.delete(args);
  }
}
