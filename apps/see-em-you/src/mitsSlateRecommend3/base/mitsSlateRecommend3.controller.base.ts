/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import * as common from "@nestjs/common";
import * as swagger from "@nestjs/swagger";
import { isRecordNotFoundError } from "../../prisma.util";
import * as errors from "../../errors";
import { Request } from "express";
import { plainToClass } from "class-transformer";
import { ApiNestedQuery } from "../../decorators/api-nested-query.decorator";
import { MitsSlateRecommend3Service } from "../mitsSlateRecommend3.service";
import { MitsSlateRecommend3CreateInput } from "./MitsSlateRecommend3CreateInput";
import { MitsSlateRecommend3 } from "./MitsSlateRecommend3";
import { MitsSlateRecommend3FindManyArgs } from "./MitsSlateRecommend3FindManyArgs";
import { MitsSlateRecommend3WhereUniqueInput } from "./MitsSlateRecommend3WhereUniqueInput";
import { MitsSlateRecommend3UpdateInput } from "./MitsSlateRecommend3UpdateInput";

export class MitsSlateRecommend3ControllerBase {
  constructor(protected readonly service: MitsSlateRecommend3Service) {}
  @common.Post()
  @swagger.ApiCreatedResponse({ type: MitsSlateRecommend3 })
  async createMitsSlateRecommend3(
    @common.Body() data: MitsSlateRecommend3CreateInput
  ): Promise<MitsSlateRecommend3> {
    return await this.service.createMitsSlateRecommend3({
      data: data,
      select: {
        prefix: true,
        first: true,
        middle: true,
        last: true,
        reference3Type: true,
        reference3Submitted: true,
        reference3First: true,
        reference3Last: true,
        reference3Industry: true,
        reference3Organization: true,
        reference3Title: true,
        reference3Email: true,
        reference3Phone: true,
        referenceNum3IsrmsRecommenderScore1: true,
        referenceNum3IsrmsRecommenderScore10: true,
        referenceNum3IsrmsRecommenderScore11: true,
        referenceNum3IsrmsRecommenderScore12: true,
        referenceNum3IsrmsRecommenderScore13: true,
        referenceNum3IsrmsRecommenderScore14: true,
        referenceNum3IsrmsRecommenderScore15: true,
        referenceNum3IsrmsRecommenderScore2: true,
        referenceNum3IsrmsRecommenderScore3: true,
        referenceNum3IsrmsRecommenderScore4: true,
        referenceNum3IsrmsRecommenderScore5: true,
        referenceNum3IsrmsRecommenderScore6: true,
        referenceNum3IsrmsRecommenderScore7: true,
        referenceNum3IsrmsRecommenderScore8: true,
        referenceNum3IsrmsRecommenderScore9: true,
        referenceNum3MseRecommendationAdditional: true,
        referenceNum3MseRecommendationComparison: true,
        referenceNum3MseRecommendationHowKnown: true,
        referenceNum3MseRecommendationProjectPerformance: true,
        referenceNum3MseRecommendationStrengthsWeakness: true,
        referenceNum3RecommenderScore1: true,
        referenceNum3RecommenderScore2: true,
        referenceNum3RecommenderScore3: true,
        referenceNum3RecommenderScore4: true,
        referenceNum3RecommenderScore5: true,
        referenceNum3RecommenderScore6: true,
        referenceNum3RecommenderScore7: true,
        referenceNum3RecommenderScore8: true,
        id: true,
      },
    });
  }

  @common.Get()
  @swagger.ApiOkResponse({ type: [MitsSlateRecommend3] })
  @ApiNestedQuery(MitsSlateRecommend3FindManyArgs)
  async mitsSlateRecommend3s(
    @common.Req() request: Request
  ): Promise<MitsSlateRecommend3[]> {
    const args = plainToClass(MitsSlateRecommend3FindManyArgs, request.query);
    return this.service.mitsSlateRecommend3s({
      ...args,
      select: {
        prefix: true,
        first: true,
        middle: true,
        last: true,
        reference3Type: true,
        reference3Submitted: true,
        reference3First: true,
        reference3Last: true,
        reference3Industry: true,
        reference3Organization: true,
        reference3Title: true,
        reference3Email: true,
        reference3Phone: true,
        referenceNum3IsrmsRecommenderScore1: true,
        referenceNum3IsrmsRecommenderScore10: true,
        referenceNum3IsrmsRecommenderScore11: true,
        referenceNum3IsrmsRecommenderScore12: true,
        referenceNum3IsrmsRecommenderScore13: true,
        referenceNum3IsrmsRecommenderScore14: true,
        referenceNum3IsrmsRecommenderScore15: true,
        referenceNum3IsrmsRecommenderScore2: true,
        referenceNum3IsrmsRecommenderScore3: true,
        referenceNum3IsrmsRecommenderScore4: true,
        referenceNum3IsrmsRecommenderScore5: true,
        referenceNum3IsrmsRecommenderScore6: true,
        referenceNum3IsrmsRecommenderScore7: true,
        referenceNum3IsrmsRecommenderScore8: true,
        referenceNum3IsrmsRecommenderScore9: true,
        referenceNum3MseRecommendationAdditional: true,
        referenceNum3MseRecommendationComparison: true,
        referenceNum3MseRecommendationHowKnown: true,
        referenceNum3MseRecommendationProjectPerformance: true,
        referenceNum3MseRecommendationStrengthsWeakness: true,
        referenceNum3RecommenderScore1: true,
        referenceNum3RecommenderScore2: true,
        referenceNum3RecommenderScore3: true,
        referenceNum3RecommenderScore4: true,
        referenceNum3RecommenderScore5: true,
        referenceNum3RecommenderScore6: true,
        referenceNum3RecommenderScore7: true,
        referenceNum3RecommenderScore8: true,
        id: true,
      },
    });
  }

  @common.Get("/:id")
  @swagger.ApiOkResponse({ type: MitsSlateRecommend3 })
  @swagger.ApiNotFoundResponse({ type: errors.NotFoundException })
  async mitsSlateRecommend3(
    @common.Param() params: MitsSlateRecommend3WhereUniqueInput
  ): Promise<MitsSlateRecommend3 | null> {
    const result = await this.service.mitsSlateRecommend3({
      where: params,
      select: {
        prefix: true,
        first: true,
        middle: true,
        last: true,
        reference3Type: true,
        reference3Submitted: true,
        reference3First: true,
        reference3Last: true,
        reference3Industry: true,
        reference3Organization: true,
        reference3Title: true,
        reference3Email: true,
        reference3Phone: true,
        referenceNum3IsrmsRecommenderScore1: true,
        referenceNum3IsrmsRecommenderScore10: true,
        referenceNum3IsrmsRecommenderScore11: true,
        referenceNum3IsrmsRecommenderScore12: true,
        referenceNum3IsrmsRecommenderScore13: true,
        referenceNum3IsrmsRecommenderScore14: true,
        referenceNum3IsrmsRecommenderScore15: true,
        referenceNum3IsrmsRecommenderScore2: true,
        referenceNum3IsrmsRecommenderScore3: true,
        referenceNum3IsrmsRecommenderScore4: true,
        referenceNum3IsrmsRecommenderScore5: true,
        referenceNum3IsrmsRecommenderScore6: true,
        referenceNum3IsrmsRecommenderScore7: true,
        referenceNum3IsrmsRecommenderScore8: true,
        referenceNum3IsrmsRecommenderScore9: true,
        referenceNum3MseRecommendationAdditional: true,
        referenceNum3MseRecommendationComparison: true,
        referenceNum3MseRecommendationHowKnown: true,
        referenceNum3MseRecommendationProjectPerformance: true,
        referenceNum3MseRecommendationStrengthsWeakness: true,
        referenceNum3RecommenderScore1: true,
        referenceNum3RecommenderScore2: true,
        referenceNum3RecommenderScore3: true,
        referenceNum3RecommenderScore4: true,
        referenceNum3RecommenderScore5: true,
        referenceNum3RecommenderScore6: true,
        referenceNum3RecommenderScore7: true,
        referenceNum3RecommenderScore8: true,
        id: true,
      },
    });
    if (result === null) {
      throw new errors.NotFoundException(
        `No resource was found for ${JSON.stringify(params)}`
      );
    }
    return result;
  }

  @common.Patch("/:id")
  @swagger.ApiOkResponse({ type: MitsSlateRecommend3 })
  @swagger.ApiNotFoundResponse({ type: errors.NotFoundException })
  async updateMitsSlateRecommend3(
    @common.Param() params: MitsSlateRecommend3WhereUniqueInput,
    @common.Body() data: MitsSlateRecommend3UpdateInput
  ): Promise<MitsSlateRecommend3 | null> {
    try {
      return await this.service.updateMitsSlateRecommend3({
        where: params,
        data: data,
        select: {
          prefix: true,
          first: true,
          middle: true,
          last: true,
          reference3Type: true,
          reference3Submitted: true,
          reference3First: true,
          reference3Last: true,
          reference3Industry: true,
          reference3Organization: true,
          reference3Title: true,
          reference3Email: true,
          reference3Phone: true,
          referenceNum3IsrmsRecommenderScore1: true,
          referenceNum3IsrmsRecommenderScore10: true,
          referenceNum3IsrmsRecommenderScore11: true,
          referenceNum3IsrmsRecommenderScore12: true,
          referenceNum3IsrmsRecommenderScore13: true,
          referenceNum3IsrmsRecommenderScore14: true,
          referenceNum3IsrmsRecommenderScore15: true,
          referenceNum3IsrmsRecommenderScore2: true,
          referenceNum3IsrmsRecommenderScore3: true,
          referenceNum3IsrmsRecommenderScore4: true,
          referenceNum3IsrmsRecommenderScore5: true,
          referenceNum3IsrmsRecommenderScore6: true,
          referenceNum3IsrmsRecommenderScore7: true,
          referenceNum3IsrmsRecommenderScore8: true,
          referenceNum3IsrmsRecommenderScore9: true,
          referenceNum3MseRecommendationAdditional: true,
          referenceNum3MseRecommendationComparison: true,
          referenceNum3MseRecommendationHowKnown: true,
          referenceNum3MseRecommendationProjectPerformance: true,
          referenceNum3MseRecommendationStrengthsWeakness: true,
          referenceNum3RecommenderScore1: true,
          referenceNum3RecommenderScore2: true,
          referenceNum3RecommenderScore3: true,
          referenceNum3RecommenderScore4: true,
          referenceNum3RecommenderScore5: true,
          referenceNum3RecommenderScore6: true,
          referenceNum3RecommenderScore7: true,
          referenceNum3RecommenderScore8: true,
          id: true,
        },
      });
    } catch (error) {
      if (isRecordNotFoundError(error)) {
        throw new errors.NotFoundException(
          `No resource was found for ${JSON.stringify(params)}`
        );
      }
      throw error;
    }
  }

  @common.Delete("/:id")
  @swagger.ApiOkResponse({ type: MitsSlateRecommend3 })
  @swagger.ApiNotFoundResponse({ type: errors.NotFoundException })
  async deleteMitsSlateRecommend3(
    @common.Param() params: MitsSlateRecommend3WhereUniqueInput
  ): Promise<MitsSlateRecommend3 | null> {
    try {
      return await this.service.deleteMitsSlateRecommend3({
        where: params,
        select: {
          prefix: true,
          first: true,
          middle: true,
          last: true,
          reference3Type: true,
          reference3Submitted: true,
          reference3First: true,
          reference3Last: true,
          reference3Industry: true,
          reference3Organization: true,
          reference3Title: true,
          reference3Email: true,
          reference3Phone: true,
          referenceNum3IsrmsRecommenderScore1: true,
          referenceNum3IsrmsRecommenderScore10: true,
          referenceNum3IsrmsRecommenderScore11: true,
          referenceNum3IsrmsRecommenderScore12: true,
          referenceNum3IsrmsRecommenderScore13: true,
          referenceNum3IsrmsRecommenderScore14: true,
          referenceNum3IsrmsRecommenderScore15: true,
          referenceNum3IsrmsRecommenderScore2: true,
          referenceNum3IsrmsRecommenderScore3: true,
          referenceNum3IsrmsRecommenderScore4: true,
          referenceNum3IsrmsRecommenderScore5: true,
          referenceNum3IsrmsRecommenderScore6: true,
          referenceNum3IsrmsRecommenderScore7: true,
          referenceNum3IsrmsRecommenderScore8: true,
          referenceNum3IsrmsRecommenderScore9: true,
          referenceNum3MseRecommendationAdditional: true,
          referenceNum3MseRecommendationComparison: true,
          referenceNum3MseRecommendationHowKnown: true,
          referenceNum3MseRecommendationProjectPerformance: true,
          referenceNum3MseRecommendationStrengthsWeakness: true,
          referenceNum3RecommenderScore1: true,
          referenceNum3RecommenderScore2: true,
          referenceNum3RecommenderScore3: true,
          referenceNum3RecommenderScore4: true,
          referenceNum3RecommenderScore5: true,
          referenceNum3RecommenderScore6: true,
          referenceNum3RecommenderScore7: true,
          referenceNum3RecommenderScore8: true,
          id: true,
        },
      });
    } catch (error) {
      if (isRecordNotFoundError(error)) {
        throw new errors.NotFoundException(
          `No resource was found for ${JSON.stringify(params)}`
        );
      }
      throw error;
    }
  }
}
