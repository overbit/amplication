/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  LuDegreesApplicationreq as PrismaLuDegreesApplicationreq,
} from "@prisma/client";

export class LuDegreesApplicationreqServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.LuDegreesApplicationreqCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.LuDegreesApplicationreqCountArgs>
  ): Promise<number> {
    return this.prisma.luDegreesApplicationreq.count(args);
  }

  async luDegreesApplicationreqs<
    T extends Prisma.LuDegreesApplicationreqFindManyArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.LuDegreesApplicationreqFindManyArgs>
  ): Promise<PrismaLuDegreesApplicationreq[]> {
    return this.prisma.luDegreesApplicationreq.findMany(args);
  }
  async luDegreesApplicationreq<
    T extends Prisma.LuDegreesApplicationreqFindUniqueArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.LuDegreesApplicationreqFindUniqueArgs>
  ): Promise<PrismaLuDegreesApplicationreq | null> {
    return this.prisma.luDegreesApplicationreq.findUnique(args);
  }
  async createLuDegreesApplicationreq<
    T extends Prisma.LuDegreesApplicationreqCreateArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.LuDegreesApplicationreqCreateArgs>
  ): Promise<PrismaLuDegreesApplicationreq> {
    return this.prisma.luDegreesApplicationreq.create<T>(args);
  }
  async updateLuDegreesApplicationreq<
    T extends Prisma.LuDegreesApplicationreqUpdateArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.LuDegreesApplicationreqUpdateArgs>
  ): Promise<PrismaLuDegreesApplicationreq> {
    return this.prisma.luDegreesApplicationreq.update<T>(args);
  }
  async deleteLuDegreesApplicationreq<
    T extends Prisma.LuDegreesApplicationreqDeleteArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.LuDegreesApplicationreqDeleteArgs>
  ): Promise<PrismaLuDegreesApplicationreq> {
    return this.prisma.luDegreesApplicationreq.delete(args);
  }
}
