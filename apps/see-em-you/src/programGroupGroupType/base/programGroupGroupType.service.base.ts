/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  ProgramGroupGroupType as PrismaProgramGroupGroupType,
} from "@prisma/client";

export class ProgramGroupGroupTypeServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.ProgramGroupGroupTypeCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.ProgramGroupGroupTypeCountArgs>
  ): Promise<number> {
    return this.prisma.programGroupGroupType.count(args);
  }

  async programGroupGroupTypes<
    T extends Prisma.ProgramGroupGroupTypeFindManyArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.ProgramGroupGroupTypeFindManyArgs>
  ): Promise<PrismaProgramGroupGroupType[]> {
    return this.prisma.programGroupGroupType.findMany(args);
  }
  async programGroupGroupType<
    T extends Prisma.ProgramGroupGroupTypeFindUniqueArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.ProgramGroupGroupTypeFindUniqueArgs>
  ): Promise<PrismaProgramGroupGroupType | null> {
    return this.prisma.programGroupGroupType.findUnique(args);
  }
  async createProgramGroupGroupType<
    T extends Prisma.ProgramGroupGroupTypeCreateArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.ProgramGroupGroupTypeCreateArgs>
  ): Promise<PrismaProgramGroupGroupType> {
    return this.prisma.programGroupGroupType.create<T>(args);
  }
  async updateProgramGroupGroupType<
    T extends Prisma.ProgramGroupGroupTypeUpdateArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.ProgramGroupGroupTypeUpdateArgs>
  ): Promise<PrismaProgramGroupGroupType> {
    return this.prisma.programGroupGroupType.update<T>(args);
  }
  async deleteProgramGroupGroupType<
    T extends Prisma.ProgramGroupGroupTypeDeleteArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.ProgramGroupGroupTypeDeleteArgs>
  ): Promise<PrismaProgramGroupGroupType> {
    return this.prisma.programGroupGroupType.delete(args);
  }
}
