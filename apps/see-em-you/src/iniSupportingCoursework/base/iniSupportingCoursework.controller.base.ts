/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import * as common from "@nestjs/common";
import * as swagger from "@nestjs/swagger";
import { isRecordNotFoundError } from "../../prisma.util";
import * as errors from "../../errors";
import { Request } from "express";
import { plainToClass } from "class-transformer";
import { ApiNestedQuery } from "../../decorators/api-nested-query.decorator";
import { IniSupportingCourseworkService } from "../iniSupportingCoursework.service";
import { IniSupportingCourseworkCreateInput } from "./IniSupportingCourseworkCreateInput";
import { IniSupportingCoursework } from "./IniSupportingCoursework";
import { IniSupportingCourseworkFindManyArgs } from "./IniSupportingCourseworkFindManyArgs";
import { IniSupportingCourseworkWhereUniqueInput } from "./IniSupportingCourseworkWhereUniqueInput";
import { IniSupportingCourseworkUpdateInput } from "./IniSupportingCourseworkUpdateInput";

export class IniSupportingCourseworkControllerBase {
  constructor(protected readonly service: IniSupportingCourseworkService) {}
  @common.Post()
  @swagger.ApiCreatedResponse({ type: IniSupportingCoursework })
  async createIniSupportingCoursework(
    @common.Body() data: IniSupportingCourseworkCreateInput
  ): Promise<IniSupportingCoursework> {
    return await this.service.createIniSupportingCoursework({
      data: data,
      select: {
        applicationId: true,
        dataStructuresNumber: true,
        dataStructuresTitle: true,
        id: true,
        msitExperience: true,
        probabilityNumber: true,
        probabilityTitle: true,
        programmingDescription: true,
        programmingDescription2: true,
        statisticsNumber: true,
        statisticsTitle: true,
      },
    });
  }

  @common.Get()
  @swagger.ApiOkResponse({ type: [IniSupportingCoursework] })
  @ApiNestedQuery(IniSupportingCourseworkFindManyArgs)
  async iniSupportingCourseworks(
    @common.Req() request: Request
  ): Promise<IniSupportingCoursework[]> {
    const args = plainToClass(
      IniSupportingCourseworkFindManyArgs,
      request.query
    );
    return this.service.iniSupportingCourseworks({
      ...args,
      select: {
        applicationId: true,
        dataStructuresNumber: true,
        dataStructuresTitle: true,
        id: true,
        msitExperience: true,
        probabilityNumber: true,
        probabilityTitle: true,
        programmingDescription: true,
        programmingDescription2: true,
        statisticsNumber: true,
        statisticsTitle: true,
      },
    });
  }

  @common.Get("/:id")
  @swagger.ApiOkResponse({ type: IniSupportingCoursework })
  @swagger.ApiNotFoundResponse({ type: errors.NotFoundException })
  async iniSupportingCoursework(
    @common.Param() params: IniSupportingCourseworkWhereUniqueInput
  ): Promise<IniSupportingCoursework | null> {
    const result = await this.service.iniSupportingCoursework({
      where: params,
      select: {
        applicationId: true,
        dataStructuresNumber: true,
        dataStructuresTitle: true,
        id: true,
        msitExperience: true,
        probabilityNumber: true,
        probabilityTitle: true,
        programmingDescription: true,
        programmingDescription2: true,
        statisticsNumber: true,
        statisticsTitle: true,
      },
    });
    if (result === null) {
      throw new errors.NotFoundException(
        `No resource was found for ${JSON.stringify(params)}`
      );
    }
    return result;
  }

  @common.Patch("/:id")
  @swagger.ApiOkResponse({ type: IniSupportingCoursework })
  @swagger.ApiNotFoundResponse({ type: errors.NotFoundException })
  async updateIniSupportingCoursework(
    @common.Param() params: IniSupportingCourseworkWhereUniqueInput,
    @common.Body() data: IniSupportingCourseworkUpdateInput
  ): Promise<IniSupportingCoursework | null> {
    try {
      return await this.service.updateIniSupportingCoursework({
        where: params,
        data: data,
        select: {
          applicationId: true,
          dataStructuresNumber: true,
          dataStructuresTitle: true,
          id: true,
          msitExperience: true,
          probabilityNumber: true,
          probabilityTitle: true,
          programmingDescription: true,
          programmingDescription2: true,
          statisticsNumber: true,
          statisticsTitle: true,
        },
      });
    } catch (error) {
      if (isRecordNotFoundError(error)) {
        throw new errors.NotFoundException(
          `No resource was found for ${JSON.stringify(params)}`
        );
      }
      throw error;
    }
  }

  @common.Delete("/:id")
  @swagger.ApiOkResponse({ type: IniSupportingCoursework })
  @swagger.ApiNotFoundResponse({ type: errors.NotFoundException })
  async deleteIniSupportingCoursework(
    @common.Param() params: IniSupportingCourseworkWhereUniqueInput
  ): Promise<IniSupportingCoursework | null> {
    try {
      return await this.service.deleteIniSupportingCoursework({
        where: params,
        select: {
          applicationId: true,
          dataStructuresNumber: true,
          dataStructuresTitle: true,
          id: true,
          msitExperience: true,
          probabilityNumber: true,
          probabilityTitle: true,
          programmingDescription: true,
          programmingDescription2: true,
          statisticsNumber: true,
          statisticsTitle: true,
        },
      });
    } catch (error) {
      if (isRecordNotFoundError(error)) {
        throw new errors.NotFoundException(
          `No resource was found for ${JSON.stringify(params)}`
        );
      }
      throw error;
    }
  }
}
