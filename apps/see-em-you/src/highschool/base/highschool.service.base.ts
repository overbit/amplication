/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Highschool as PrismaHighschool } from "@prisma/client";

export class HighschoolServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.HighschoolCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.HighschoolCountArgs>
  ): Promise<number> {
    return this.prisma.highschool.count(args);
  }

  async highschools<T extends Prisma.HighschoolFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.HighschoolFindManyArgs>
  ): Promise<PrismaHighschool[]> {
    return this.prisma.highschool.findMany(args);
  }
  async highschool<T extends Prisma.HighschoolFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.HighschoolFindUniqueArgs>
  ): Promise<PrismaHighschool | null> {
    return this.prisma.highschool.findUnique(args);
  }
  async createHighschool<T extends Prisma.HighschoolCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.HighschoolCreateArgs>
  ): Promise<PrismaHighschool> {
    return this.prisma.highschool.create<T>(args);
  }
  async updateHighschool<T extends Prisma.HighschoolUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.HighschoolUpdateArgs>
  ): Promise<PrismaHighschool> {
    return this.prisma.highschool.update<T>(args);
  }
  async deleteHighschool<T extends Prisma.HighschoolDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.HighschoolDeleteArgs>
  ): Promise<PrismaHighschool> {
    return this.prisma.highschool.delete(args);
  }
}
