/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, LuProgramsRecommendation } from "@prisma/client";

export class LuProgramsRecommendationServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.LuProgramsRecommendationCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.LuProgramsRecommendationCountArgs>
  ): Promise<number> {
    return this.prisma.luProgramsRecommendation.count(args);
  }

  async luProgramsRecommendations<
    T extends Prisma.LuProgramsRecommendationFindManyArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.LuProgramsRecommendationFindManyArgs>
  ): Promise<LuProgramsRecommendation[]> {
    return this.prisma.luProgramsRecommendation.findMany(args);
  }
  async luProgramsRecommendation<
    T extends Prisma.LuProgramsRecommendationFindUniqueArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.LuProgramsRecommendationFindUniqueArgs>
  ): Promise<LuProgramsRecommendation | null> {
    return this.prisma.luProgramsRecommendation.findUnique(args);
  }
  async createLuProgramsRecommendation<
    T extends Prisma.LuProgramsRecommendationCreateArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.LuProgramsRecommendationCreateArgs>
  ): Promise<LuProgramsRecommendation> {
    return this.prisma.luProgramsRecommendation.create<T>(args);
  }
  async updateLuProgramsRecommendation<
    T extends Prisma.LuProgramsRecommendationUpdateArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.LuProgramsRecommendationUpdateArgs>
  ): Promise<LuProgramsRecommendation> {
    return this.prisma.luProgramsRecommendation.update<T>(args);
  }
  async deleteLuProgramsRecommendation<
    T extends Prisma.LuProgramsRecommendationDeleteArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.LuProgramsRecommendationDeleteArgs>
  ): Promise<LuProgramsRecommendation> {
    return this.prisma.luProgramsRecommendation.delete(args);
  }
}
