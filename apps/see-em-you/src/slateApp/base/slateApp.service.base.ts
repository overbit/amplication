/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, SlateApp as PrismaSlateApp } from "@prisma/client";

export class SlateAppServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.SlateAppCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.SlateAppCountArgs>
  ): Promise<number> {
    return this.prisma.slateApp.count(args);
  }

  async slateApps<T extends Prisma.SlateAppFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.SlateAppFindManyArgs>
  ): Promise<PrismaSlateApp[]> {
    return this.prisma.slateApp.findMany(args);
  }
  async slateApp<T extends Prisma.SlateAppFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.SlateAppFindUniqueArgs>
  ): Promise<PrismaSlateApp | null> {
    return this.prisma.slateApp.findUnique(args);
  }
  async createSlateApp<T extends Prisma.SlateAppCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.SlateAppCreateArgs>
  ): Promise<PrismaSlateApp> {
    return this.prisma.slateApp.create<T>(args);
  }
  async updateSlateApp<T extends Prisma.SlateAppUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.SlateAppUpdateArgs>
  ): Promise<PrismaSlateApp> {
    return this.prisma.slateApp.update<T>(args);
  }
  async deleteSlateApp<T extends Prisma.SlateAppDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.SlateAppDeleteArgs>
  ): Promise<PrismaSlateApp> {
    return this.prisma.slateApp.delete(args);
  }
}
