/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  SlateAppsMseReviewed as PrismaSlateAppsMseReviewed,
} from "@prisma/client";

export class SlateAppsMseReviewedServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.SlateAppsMseReviewedCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.SlateAppsMseReviewedCountArgs>
  ): Promise<number> {
    return this.prisma.slateAppsMseReviewed.count(args);
  }

  async slateAppsMseRevieweds<
    T extends Prisma.SlateAppsMseReviewedFindManyArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.SlateAppsMseReviewedFindManyArgs>
  ): Promise<PrismaSlateAppsMseReviewed[]> {
    return this.prisma.slateAppsMseReviewed.findMany(args);
  }
  async slateAppsMseReviewed<
    T extends Prisma.SlateAppsMseReviewedFindUniqueArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.SlateAppsMseReviewedFindUniqueArgs>
  ): Promise<PrismaSlateAppsMseReviewed | null> {
    return this.prisma.slateAppsMseReviewed.findUnique(args);
  }
  async createSlateAppsMseReviewed<
    T extends Prisma.SlateAppsMseReviewedCreateArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.SlateAppsMseReviewedCreateArgs>
  ): Promise<PrismaSlateAppsMseReviewed> {
    return this.prisma.slateAppsMseReviewed.create<T>(args);
  }
  async updateSlateAppsMseReviewed<
    T extends Prisma.SlateAppsMseReviewedUpdateArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.SlateAppsMseReviewedUpdateArgs>
  ): Promise<PrismaSlateAppsMseReviewed> {
    return this.prisma.slateAppsMseReviewed.update<T>(args);
  }
  async deleteSlateAppsMseReviewed<
    T extends Prisma.SlateAppsMseReviewedDeleteArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.SlateAppsMseReviewedDeleteArgs>
  ): Promise<PrismaSlateAppsMseReviewed> {
    return this.prisma.slateAppsMseReviewed.delete(args);
  }
}
