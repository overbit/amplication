/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Recommendform } from "@prisma/client";

export class RecommendformServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.RecommendformCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.RecommendformCountArgs>
  ): Promise<number> {
    return this.prisma.recommendform.count(args);
  }

  async recommendforms<T extends Prisma.RecommendformFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.RecommendformFindManyArgs>
  ): Promise<Recommendform[]> {
    return this.prisma.recommendform.findMany(args);
  }
  async recommendform<T extends Prisma.RecommendformFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.RecommendformFindUniqueArgs>
  ): Promise<Recommendform | null> {
    return this.prisma.recommendform.findUnique(args);
  }
  async createRecommendform<T extends Prisma.RecommendformCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.RecommendformCreateArgs>
  ): Promise<Recommendform> {
    return this.prisma.recommendform.create<T>(args);
  }
  async updateRecommendform<T extends Prisma.RecommendformUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.RecommendformUpdateArgs>
  ): Promise<Recommendform> {
    return this.prisma.recommendform.update<T>(args);
  }
  async deleteRecommendform<T extends Prisma.RecommendformDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.RecommendformDeleteArgs>
  ): Promise<Recommendform> {
    return this.prisma.recommendform.delete(args);
  }
}
