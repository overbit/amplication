/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, SlateReview as PrismaSlateReview } from "@prisma/client";

export class SlateReviewServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.SlateReviewCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.SlateReviewCountArgs>
  ): Promise<number> {
    return this.prisma.slateReview.count(args);
  }

  async slateReviews<T extends Prisma.SlateReviewFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.SlateReviewFindManyArgs>
  ): Promise<PrismaSlateReview[]> {
    return this.prisma.slateReview.findMany(args);
  }
  async slateReview<T extends Prisma.SlateReviewFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.SlateReviewFindUniqueArgs>
  ): Promise<PrismaSlateReview | null> {
    return this.prisma.slateReview.findUnique(args);
  }
  async createSlateReview<T extends Prisma.SlateReviewCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.SlateReviewCreateArgs>
  ): Promise<PrismaSlateReview> {
    return this.prisma.slateReview.create<T>(args);
  }
  async updateSlateReview<T extends Prisma.SlateReviewUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.SlateReviewUpdateArgs>
  ): Promise<PrismaSlateReview> {
    return this.prisma.slateReview.update<T>(args);
  }
  async deleteSlateReview<T extends Prisma.SlateReviewDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.SlateReviewDeleteArgs>
  ): Promise<PrismaSlateReview> {
    return this.prisma.slateReview.delete(args);
  }
}
