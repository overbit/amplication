/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  RecommenderInfo as PrismaRecommenderInfo,
} from "@prisma/client";

export class RecommenderInfoServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.RecommenderInfoCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.RecommenderInfoCountArgs>
  ): Promise<number> {
    return this.prisma.recommenderInfo.count(args);
  }

  async recommenderInfos<T extends Prisma.RecommenderInfoFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.RecommenderInfoFindManyArgs>
  ): Promise<PrismaRecommenderInfo[]> {
    return this.prisma.recommenderInfo.findMany(args);
  }
  async recommenderInfo<T extends Prisma.RecommenderInfoFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.RecommenderInfoFindUniqueArgs>
  ): Promise<PrismaRecommenderInfo | null> {
    return this.prisma.recommenderInfo.findUnique(args);
  }
  async createRecommenderInfo<T extends Prisma.RecommenderInfoCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.RecommenderInfoCreateArgs>
  ): Promise<PrismaRecommenderInfo> {
    return this.prisma.recommenderInfo.create<T>(args);
  }
  async updateRecommenderInfo<T extends Prisma.RecommenderInfoUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.RecommenderInfoUpdateArgs>
  ): Promise<PrismaRecommenderInfo> {
    return this.prisma.recommenderInfo.update<T>(args);
  }
  async deleteRecommenderInfo<T extends Prisma.RecommenderInfoDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.RecommenderInfoDeleteArgs>
  ): Promise<PrismaRecommenderInfo> {
    return this.prisma.recommenderInfo.delete(args);
  }
}
