/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  DietrichFinancialSupport as PrismaDietrichFinancialSupport,
} from "@prisma/client";

export class DietrichFinancialSupportServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.DietrichFinancialSupportCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.DietrichFinancialSupportCountArgs>
  ): Promise<number> {
    return this.prisma.dietrichFinancialSupport.count(args);
  }

  async dietrichFinancialSupports<
    T extends Prisma.DietrichFinancialSupportFindManyArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.DietrichFinancialSupportFindManyArgs>
  ): Promise<PrismaDietrichFinancialSupport[]> {
    return this.prisma.dietrichFinancialSupport.findMany(args);
  }
  async dietrichFinancialSupport<
    T extends Prisma.DietrichFinancialSupportFindUniqueArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.DietrichFinancialSupportFindUniqueArgs>
  ): Promise<PrismaDietrichFinancialSupport | null> {
    return this.prisma.dietrichFinancialSupport.findUnique(args);
  }
  async createDietrichFinancialSupport<
    T extends Prisma.DietrichFinancialSupportCreateArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.DietrichFinancialSupportCreateArgs>
  ): Promise<PrismaDietrichFinancialSupport> {
    return this.prisma.dietrichFinancialSupport.create<T>(args);
  }
  async updateDietrichFinancialSupport<
    T extends Prisma.DietrichFinancialSupportUpdateArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.DietrichFinancialSupportUpdateArgs>
  ): Promise<PrismaDietrichFinancialSupport> {
    return this.prisma.dietrichFinancialSupport.update<T>(args);
  }
  async deleteDietrichFinancialSupport<
    T extends Prisma.DietrichFinancialSupportDeleteArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.DietrichFinancialSupportDeleteArgs>
  ): Promise<PrismaDietrichFinancialSupport> {
    return this.prisma.dietrichFinancialSupport.delete(args);
  }
}
