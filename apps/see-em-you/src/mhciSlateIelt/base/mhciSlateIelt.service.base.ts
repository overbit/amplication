/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, MhciSlateIelt as PrismaMhciSlateIelt } from "@prisma/client";

export class MhciSlateIeltServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.MhciSlateIeltCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.MhciSlateIeltCountArgs>
  ): Promise<number> {
    return this.prisma.mhciSlateIelt.count(args);
  }

  async mhciSlateIelts<T extends Prisma.MhciSlateIeltFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.MhciSlateIeltFindManyArgs>
  ): Promise<PrismaMhciSlateIelt[]> {
    return this.prisma.mhciSlateIelt.findMany(args);
  }
  async mhciSlateIelt<T extends Prisma.MhciSlateIeltFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.MhciSlateIeltFindUniqueArgs>
  ): Promise<PrismaMhciSlateIelt | null> {
    return this.prisma.mhciSlateIelt.findUnique(args);
  }
  async createMhciSlateIelt<T extends Prisma.MhciSlateIeltCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.MhciSlateIeltCreateArgs>
  ): Promise<PrismaMhciSlateIelt> {
    return this.prisma.mhciSlateIelt.create<T>(args);
  }
  async updateMhciSlateIelt<T extends Prisma.MhciSlateIeltUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.MhciSlateIeltUpdateArgs>
  ): Promise<PrismaMhciSlateIelt> {
    return this.prisma.mhciSlateIelt.update<T>(args);
  }
  async deleteMhciSlateIelt<T extends Prisma.MhciSlateIeltDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.MhciSlateIeltDeleteArgs>
  ): Promise<PrismaMhciSlateIelt> {
    return this.prisma.mhciSlateIelt.delete(args);
  }
}
