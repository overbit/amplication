/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Usertype as PrismaUsertype } from "@prisma/client";

export class UsertypeServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.UsertypeCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.UsertypeCountArgs>
  ): Promise<number> {
    return this.prisma.usertype.count(args);
  }

  async usertypes<T extends Prisma.UsertypeFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.UsertypeFindManyArgs>
  ): Promise<PrismaUsertype[]> {
    return this.prisma.usertype.findMany(args);
  }
  async usertype<T extends Prisma.UsertypeFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.UsertypeFindUniqueArgs>
  ): Promise<PrismaUsertype | null> {
    return this.prisma.usertype.findUnique(args);
  }
  async createUsertype<T extends Prisma.UsertypeCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.UsertypeCreateArgs>
  ): Promise<PrismaUsertype> {
    return this.prisma.usertype.create<T>(args);
  }
  async updateUsertype<T extends Prisma.UsertypeUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.UsertypeUpdateArgs>
  ): Promise<PrismaUsertype> {
    return this.prisma.usertype.update<T>(args);
  }
  async deleteUsertype<T extends Prisma.UsertypeDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.UsertypeDeleteArgs>
  ): Promise<PrismaUsertype> {
    return this.prisma.usertype.delete(args);
  }
}
