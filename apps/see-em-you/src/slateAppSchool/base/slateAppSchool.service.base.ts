/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, SlateAppSchool as PrismaSlateAppSchool } from "@prisma/client";

export class SlateAppSchoolServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.SlateAppSchoolCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.SlateAppSchoolCountArgs>
  ): Promise<number> {
    return this.prisma.slateAppSchool.count(args);
  }

  async slateAppSchools<T extends Prisma.SlateAppSchoolFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.SlateAppSchoolFindManyArgs>
  ): Promise<PrismaSlateAppSchool[]> {
    return this.prisma.slateAppSchool.findMany(args);
  }
  async slateAppSchool<T extends Prisma.SlateAppSchoolFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.SlateAppSchoolFindUniqueArgs>
  ): Promise<PrismaSlateAppSchool | null> {
    return this.prisma.slateAppSchool.findUnique(args);
  }
  async createSlateAppSchool<T extends Prisma.SlateAppSchoolCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.SlateAppSchoolCreateArgs>
  ): Promise<PrismaSlateAppSchool> {
    return this.prisma.slateAppSchool.create<T>(args);
  }
  async updateSlateAppSchool<T extends Prisma.SlateAppSchoolUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.SlateAppSchoolUpdateArgs>
  ): Promise<PrismaSlateAppSchool> {
    return this.prisma.slateAppSchool.update<T>(args);
  }
  async deleteSlateAppSchool<T extends Prisma.SlateAppSchoolDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.SlateAppSchoolDeleteArgs>
  ): Promise<PrismaSlateAppSchool> {
    return this.prisma.slateAppSchool.delete(args);
  }
}
