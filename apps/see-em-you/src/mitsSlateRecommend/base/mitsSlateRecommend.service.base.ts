/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  MitsSlateRecommend as PrismaMitsSlateRecommend,
} from "@prisma/client";

export class MitsSlateRecommendServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.MitsSlateRecommendCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.MitsSlateRecommendCountArgs>
  ): Promise<number> {
    return this.prisma.mitsSlateRecommend.count(args);
  }

  async mitsSlateRecommends<T extends Prisma.MitsSlateRecommendFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.MitsSlateRecommendFindManyArgs>
  ): Promise<PrismaMitsSlateRecommend[]> {
    return this.prisma.mitsSlateRecommend.findMany(args);
  }
  async mitsSlateRecommend<T extends Prisma.MitsSlateRecommendFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.MitsSlateRecommendFindUniqueArgs>
  ): Promise<PrismaMitsSlateRecommend | null> {
    return this.prisma.mitsSlateRecommend.findUnique(args);
  }
  async createMitsSlateRecommend<T extends Prisma.MitsSlateRecommendCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.MitsSlateRecommendCreateArgs>
  ): Promise<PrismaMitsSlateRecommend> {
    return this.prisma.mitsSlateRecommend.create<T>(args);
  }
  async updateMitsSlateRecommend<T extends Prisma.MitsSlateRecommendUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.MitsSlateRecommendUpdateArgs>
  ): Promise<PrismaMitsSlateRecommend> {
    return this.prisma.mitsSlateRecommend.update<T>(args);
  }
  async deleteMitsSlateRecommend<T extends Prisma.MitsSlateRecommendDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.MitsSlateRecommendDeleteArgs>
  ): Promise<PrismaMitsSlateRecommend> {
    return this.prisma.mitsSlateRecommend.delete(args);
  }
}
