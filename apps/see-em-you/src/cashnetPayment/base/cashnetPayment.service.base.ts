/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  CashnetPayment, // @ts-ignore
  Application,
} from "@prisma/client";

export class CashnetPaymentServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.CashnetPaymentCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.CashnetPaymentCountArgs>
  ): Promise<number> {
    return this.prisma.cashnetPayment.count(args);
  }

  async cashnetPayments<T extends Prisma.CashnetPaymentFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.CashnetPaymentFindManyArgs>
  ): Promise<CashnetPayment[]> {
    return this.prisma.cashnetPayment.findMany(args);
  }
  async cashnetPayment<T extends Prisma.CashnetPaymentFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.CashnetPaymentFindUniqueArgs>
  ): Promise<CashnetPayment | null> {
    return this.prisma.cashnetPayment.findUnique(args);
  }
  async createCashnetPayment<T extends Prisma.CashnetPaymentCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.CashnetPaymentCreateArgs>
  ): Promise<CashnetPayment> {
    return this.prisma.cashnetPayment.create<T>(args);
  }
  async updateCashnetPayment<T extends Prisma.CashnetPaymentUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.CashnetPaymentUpdateArgs>
  ): Promise<CashnetPayment> {
    return this.prisma.cashnetPayment.update<T>(args);
  }
  async deleteCashnetPayment<T extends Prisma.CashnetPaymentDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.CashnetPaymentDeleteArgs>
  ): Promise<CashnetPayment> {
    return this.prisma.cashnetPayment.delete(args);
  }

  async getApplication(parentId: number): Promise<Application | null> {
    return this.prisma.cashnetPayment
      .findUnique({
        where: { id: parentId },
      })
      .application();
  }
}
