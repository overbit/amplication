/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Admission as PrismaAdmission } from "@prisma/client";

export class AdmissionServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.AdmissionCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.AdmissionCountArgs>
  ): Promise<number> {
    return this.prisma.admission.count(args);
  }

  async admissions<T extends Prisma.AdmissionFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.AdmissionFindManyArgs>
  ): Promise<PrismaAdmission[]> {
    return this.prisma.admission.findMany(args);
  }
  async admission<T extends Prisma.AdmissionFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.AdmissionFindUniqueArgs>
  ): Promise<PrismaAdmission | null> {
    return this.prisma.admission.findUnique(args);
  }
  async createAdmission<T extends Prisma.AdmissionCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.AdmissionCreateArgs>
  ): Promise<PrismaAdmission> {
    return this.prisma.admission.create<T>(args);
  }
  async updateAdmission<T extends Prisma.AdmissionUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.AdmissionUpdateArgs>
  ): Promise<PrismaAdmission> {
    return this.prisma.admission.update<T>(args);
  }
  async deleteAdmission<T extends Prisma.AdmissionDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.AdmissionDeleteArgs>
  ): Promise<PrismaAdmission> {
    return this.prisma.admission.delete(args);
  }
}
