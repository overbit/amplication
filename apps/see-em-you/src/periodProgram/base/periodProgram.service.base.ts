/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, PeriodProgram as PrismaPeriodProgram } from "@prisma/client";

export class PeriodProgramServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.PeriodProgramCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.PeriodProgramCountArgs>
  ): Promise<number> {
    return this.prisma.periodProgram.count(args);
  }

  async periodPrograms<T extends Prisma.PeriodProgramFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.PeriodProgramFindManyArgs>
  ): Promise<PrismaPeriodProgram[]> {
    return this.prisma.periodProgram.findMany(args);
  }
  async periodProgram<T extends Prisma.PeriodProgramFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.PeriodProgramFindUniqueArgs>
  ): Promise<PrismaPeriodProgram | null> {
    return this.prisma.periodProgram.findUnique(args);
  }
  async createPeriodProgram<T extends Prisma.PeriodProgramCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.PeriodProgramCreateArgs>
  ): Promise<PrismaPeriodProgram> {
    return this.prisma.periodProgram.create<T>(args);
  }
  async updatePeriodProgram<T extends Prisma.PeriodProgramUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.PeriodProgramUpdateArgs>
  ): Promise<PrismaPeriodProgram> {
    return this.prisma.periodProgram.update<T>(args);
  }
  async deletePeriodProgram<T extends Prisma.PeriodProgramDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.PeriodProgramDeleteArgs>
  ): Promise<PrismaPeriodProgram> {
    return this.prisma.periodProgram.delete(args);
  }
}
