/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Interest as PrismaInterest } from "@prisma/client";

export class InterestServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.InterestCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.InterestCountArgs>
  ): Promise<number> {
    return this.prisma.interest.count(args);
  }

  async interests<T extends Prisma.InterestFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.InterestFindManyArgs>
  ): Promise<PrismaInterest[]> {
    return this.prisma.interest.findMany(args);
  }
  async interest<T extends Prisma.InterestFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.InterestFindUniqueArgs>
  ): Promise<PrismaInterest | null> {
    return this.prisma.interest.findUnique(args);
  }
  async createInterest<T extends Prisma.InterestCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.InterestCreateArgs>
  ): Promise<PrismaInterest> {
    return this.prisma.interest.create<T>(args);
  }
  async updateInterest<T extends Prisma.InterestUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.InterestUpdateArgs>
  ): Promise<PrismaInterest> {
    return this.prisma.interest.update<T>(args);
  }
  async deleteInterest<T extends Prisma.InterestDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.InterestDeleteArgs>
  ): Promise<PrismaInterest> {
    return this.prisma.interest.delete(args);
  }
}
