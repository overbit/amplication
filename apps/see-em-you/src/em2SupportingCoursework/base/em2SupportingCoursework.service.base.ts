/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  Em2SupportingCoursework as PrismaEm2SupportingCoursework,
} from "@prisma/client";

export class Em2SupportingCourseworkServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.Em2SupportingCourseworkCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.Em2SupportingCourseworkCountArgs>
  ): Promise<number> {
    return this.prisma.em2SupportingCoursework.count(args);
  }

  async em2SupportingCourseworks<
    T extends Prisma.Em2SupportingCourseworkFindManyArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.Em2SupportingCourseworkFindManyArgs>
  ): Promise<PrismaEm2SupportingCoursework[]> {
    return this.prisma.em2SupportingCoursework.findMany(args);
  }
  async em2SupportingCoursework<
    T extends Prisma.Em2SupportingCourseworkFindUniqueArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.Em2SupportingCourseworkFindUniqueArgs>
  ): Promise<PrismaEm2SupportingCoursework | null> {
    return this.prisma.em2SupportingCoursework.findUnique(args);
  }
  async createEm2SupportingCoursework<
    T extends Prisma.Em2SupportingCourseworkCreateArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.Em2SupportingCourseworkCreateArgs>
  ): Promise<PrismaEm2SupportingCoursework> {
    return this.prisma.em2SupportingCoursework.create<T>(args);
  }
  async updateEm2SupportingCoursework<
    T extends Prisma.Em2SupportingCourseworkUpdateArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.Em2SupportingCourseworkUpdateArgs>
  ): Promise<PrismaEm2SupportingCoursework> {
    return this.prisma.em2SupportingCoursework.update<T>(args);
  }
  async deleteEm2SupportingCoursework<
    T extends Prisma.Em2SupportingCourseworkDeleteArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.Em2SupportingCourseworkDeleteArgs>
  ): Promise<PrismaEm2SupportingCoursework> {
    return this.prisma.em2SupportingCoursework.delete(args);
  }
}
