/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, ProgramType as PrismaProgramType } from "@prisma/client";

export class ProgramTypeServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.ProgramTypeCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.ProgramTypeCountArgs>
  ): Promise<number> {
    return this.prisma.programType.count(args);
  }

  async programTypes<T extends Prisma.ProgramTypeFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.ProgramTypeFindManyArgs>
  ): Promise<PrismaProgramType[]> {
    return this.prisma.programType.findMany(args);
  }
  async programType<T extends Prisma.ProgramTypeFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.ProgramTypeFindUniqueArgs>
  ): Promise<PrismaProgramType | null> {
    return this.prisma.programType.findUnique(args);
  }
  async createProgramType<T extends Prisma.ProgramTypeCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.ProgramTypeCreateArgs>
  ): Promise<PrismaProgramType> {
    return this.prisma.programType.create<T>(args);
  }
  async updateProgramType<T extends Prisma.ProgramTypeUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.ProgramTypeUpdateArgs>
  ): Promise<PrismaProgramType> {
    return this.prisma.programType.update<T>(args);
  }
  async deleteProgramType<T extends Prisma.ProgramTypeDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.ProgramTypeDeleteArgs>
  ): Promise<PrismaProgramType> {
    return this.prisma.programType.delete(args);
  }
}
