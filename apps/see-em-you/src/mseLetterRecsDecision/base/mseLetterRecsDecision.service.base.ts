/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, MseLetterRecsDecision } from "@prisma/client";

export class MseLetterRecsDecisionServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.MseLetterRecsDecisionCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.MseLetterRecsDecisionCountArgs>
  ): Promise<number> {
    return this.prisma.mseLetterRecsDecision.count(args);
  }

  async mseLetterRecsDecisions<
    T extends Prisma.MseLetterRecsDecisionFindManyArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.MseLetterRecsDecisionFindManyArgs>
  ): Promise<MseLetterRecsDecision[]> {
    return this.prisma.mseLetterRecsDecision.findMany(args);
  }
  async mseLetterRecsDecision<
    T extends Prisma.MseLetterRecsDecisionFindUniqueArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.MseLetterRecsDecisionFindUniqueArgs>
  ): Promise<MseLetterRecsDecision | null> {
    return this.prisma.mseLetterRecsDecision.findUnique(args);
  }
  async createMseLetterRecsDecision<
    T extends Prisma.MseLetterRecsDecisionCreateArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.MseLetterRecsDecisionCreateArgs>
  ): Promise<MseLetterRecsDecision> {
    return this.prisma.mseLetterRecsDecision.create<T>(args);
  }
  async updateMseLetterRecsDecision<
    T extends Prisma.MseLetterRecsDecisionUpdateArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.MseLetterRecsDecisionUpdateArgs>
  ): Promise<MseLetterRecsDecision> {
    return this.prisma.mseLetterRecsDecision.update<T>(args);
  }
  async deleteMseLetterRecsDecision<
    T extends Prisma.MseLetterRecsDecisionDeleteArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.MseLetterRecsDecisionDeleteArgs>
  ): Promise<MseLetterRecsDecision> {
    return this.prisma.mseLetterRecsDecision.delete(args);
  }
}
