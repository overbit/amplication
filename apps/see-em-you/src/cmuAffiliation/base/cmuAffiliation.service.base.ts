/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, CmuAffiliation } from "@prisma/client";

export class CmuAffiliationServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.CmuAffiliationCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.CmuAffiliationCountArgs>
  ): Promise<number> {
    return this.prisma.cmuAffiliation.count(args);
  }

  async cmuAffiliations<T extends Prisma.CmuAffiliationFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.CmuAffiliationFindManyArgs>
  ): Promise<CmuAffiliation[]> {
    return this.prisma.cmuAffiliation.findMany(args);
  }
  async cmuAffiliation<T extends Prisma.CmuAffiliationFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.CmuAffiliationFindUniqueArgs>
  ): Promise<CmuAffiliation | null> {
    return this.prisma.cmuAffiliation.findUnique(args);
  }
  async createCmuAffiliation<T extends Prisma.CmuAffiliationCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.CmuAffiliationCreateArgs>
  ): Promise<CmuAffiliation> {
    return this.prisma.cmuAffiliation.create<T>(args);
  }
  async updateCmuAffiliation<T extends Prisma.CmuAffiliationUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.CmuAffiliationUpdateArgs>
  ): Promise<CmuAffiliation> {
    return this.prisma.cmuAffiliation.update<T>(args);
  }
  async deleteCmuAffiliation<T extends Prisma.CmuAffiliationDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.CmuAffiliationDeleteArgs>
  ): Promise<CmuAffiliation> {
    return this.prisma.cmuAffiliation.delete(args);
  }
}
