/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  CcTransactionDetail as PrismaCcTransactionDetail,
} from "@prisma/client";

export class CcTransactionDetailServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.CcTransactionDetailCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.CcTransactionDetailCountArgs>
  ): Promise<number> {
    return this.prisma.ccTransactionDetail.count(args);
  }

  async ccTransactionDetails<T extends Prisma.CcTransactionDetailFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.CcTransactionDetailFindManyArgs>
  ): Promise<PrismaCcTransactionDetail[]> {
    return this.prisma.ccTransactionDetail.findMany(args);
  }
  async ccTransactionDetail<T extends Prisma.CcTransactionDetailFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.CcTransactionDetailFindUniqueArgs>
  ): Promise<PrismaCcTransactionDetail | null> {
    return this.prisma.ccTransactionDetail.findUnique(args);
  }
  async createCcTransactionDetail<
    T extends Prisma.CcTransactionDetailCreateArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.CcTransactionDetailCreateArgs>
  ): Promise<PrismaCcTransactionDetail> {
    return this.prisma.ccTransactionDetail.create<T>(args);
  }
  async updateCcTransactionDetail<
    T extends Prisma.CcTransactionDetailUpdateArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.CcTransactionDetailUpdateArgs>
  ): Promise<PrismaCcTransactionDetail> {
    return this.prisma.ccTransactionDetail.update<T>(args);
  }
  async deleteCcTransactionDetail<
    T extends Prisma.CcTransactionDetailDeleteArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.CcTransactionDetailDeleteArgs>
  ): Promise<PrismaCcTransactionDetail> {
    return this.prisma.ccTransactionDetail.delete(args);
  }
}
