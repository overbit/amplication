/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, VoucherType as PrismaVoucherType } from "@prisma/client";

export class VoucherTypeServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.VoucherTypeCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.VoucherTypeCountArgs>
  ): Promise<number> {
    return this.prisma.voucherType.count(args);
  }

  async voucherTypes<T extends Prisma.VoucherTypeFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.VoucherTypeFindManyArgs>
  ): Promise<PrismaVoucherType[]> {
    return this.prisma.voucherType.findMany(args);
  }
  async voucherType<T extends Prisma.VoucherTypeFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.VoucherTypeFindUniqueArgs>
  ): Promise<PrismaVoucherType | null> {
    return this.prisma.voucherType.findUnique(args);
  }
  async createVoucherType<T extends Prisma.VoucherTypeCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.VoucherTypeCreateArgs>
  ): Promise<PrismaVoucherType> {
    return this.prisma.voucherType.create<T>(args);
  }
  async updateVoucherType<T extends Prisma.VoucherTypeUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.VoucherTypeUpdateArgs>
  ): Promise<PrismaVoucherType> {
    return this.prisma.voucherType.update<T>(args);
  }
  async deleteVoucherType<T extends Prisma.VoucherTypeDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.VoucherTypeDeleteArgs>
  ): Promise<PrismaVoucherType> {
    return this.prisma.voucherType.delete(args);
  }
}
