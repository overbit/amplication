/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  FolderLabelInfo as PrismaFolderLabelInfo,
} from "@prisma/client";

export class FolderLabelInfoServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.FolderLabelInfoCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.FolderLabelInfoCountArgs>
  ): Promise<number> {
    return this.prisma.folderLabelInfo.count(args);
  }

  async folderLabelInfos<T extends Prisma.FolderLabelInfoFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.FolderLabelInfoFindManyArgs>
  ): Promise<PrismaFolderLabelInfo[]> {
    return this.prisma.folderLabelInfo.findMany(args);
  }
  async folderLabelInfo<T extends Prisma.FolderLabelInfoFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.FolderLabelInfoFindUniqueArgs>
  ): Promise<PrismaFolderLabelInfo | null> {
    return this.prisma.folderLabelInfo.findUnique(args);
  }
  async createFolderLabelInfo<T extends Prisma.FolderLabelInfoCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.FolderLabelInfoCreateArgs>
  ): Promise<PrismaFolderLabelInfo> {
    return this.prisma.folderLabelInfo.create<T>(args);
  }
  async updateFolderLabelInfo<T extends Prisma.FolderLabelInfoUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.FolderLabelInfoUpdateArgs>
  ): Promise<PrismaFolderLabelInfo> {
    return this.prisma.folderLabelInfo.update<T>(args);
  }
  async deleteFolderLabelInfo<T extends Prisma.FolderLabelInfoDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.FolderLabelInfoDeleteArgs>
  ): Promise<PrismaFolderLabelInfo> {
    return this.prisma.folderLabelInfo.delete(args);
  }
}
