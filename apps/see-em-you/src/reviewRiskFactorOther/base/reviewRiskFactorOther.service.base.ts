/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  ReviewRiskFactorOther as PrismaReviewRiskFactorOther,
} from "@prisma/client";

export class ReviewRiskFactorOtherServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.ReviewRiskFactorOtherCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.ReviewRiskFactorOtherCountArgs>
  ): Promise<number> {
    return this.prisma.reviewRiskFactorOther.count(args);
  }

  async reviewRiskFactorOthers<
    T extends Prisma.ReviewRiskFactorOtherFindManyArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.ReviewRiskFactorOtherFindManyArgs>
  ): Promise<PrismaReviewRiskFactorOther[]> {
    return this.prisma.reviewRiskFactorOther.findMany(args);
  }
  async reviewRiskFactorOther<
    T extends Prisma.ReviewRiskFactorOtherFindUniqueArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.ReviewRiskFactorOtherFindUniqueArgs>
  ): Promise<PrismaReviewRiskFactorOther | null> {
    return this.prisma.reviewRiskFactorOther.findUnique(args);
  }
  async createReviewRiskFactorOther<
    T extends Prisma.ReviewRiskFactorOtherCreateArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.ReviewRiskFactorOtherCreateArgs>
  ): Promise<PrismaReviewRiskFactorOther> {
    return this.prisma.reviewRiskFactorOther.create<T>(args);
  }
  async updateReviewRiskFactorOther<
    T extends Prisma.ReviewRiskFactorOtherUpdateArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.ReviewRiskFactorOtherUpdateArgs>
  ): Promise<PrismaReviewRiskFactorOther> {
    return this.prisma.reviewRiskFactorOther.update<T>(args);
  }
  async deleteReviewRiskFactorOther<
    T extends Prisma.ReviewRiskFactorOtherDeleteArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.ReviewRiskFactorOtherDeleteArgs>
  ): Promise<PrismaReviewRiskFactorOther> {
    return this.prisma.reviewRiskFactorOther.delete(args);
  }
}
