/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  ProgramGroupProgram as PrismaProgramGroupProgram,
} from "@prisma/client";

export class ProgramGroupProgramServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.ProgramGroupProgramCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.ProgramGroupProgramCountArgs>
  ): Promise<number> {
    return this.prisma.programGroupProgram.count(args);
  }

  async programGroupPrograms<T extends Prisma.ProgramGroupProgramFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.ProgramGroupProgramFindManyArgs>
  ): Promise<PrismaProgramGroupProgram[]> {
    return this.prisma.programGroupProgram.findMany(args);
  }
  async programGroupProgram<T extends Prisma.ProgramGroupProgramFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.ProgramGroupProgramFindUniqueArgs>
  ): Promise<PrismaProgramGroupProgram | null> {
    return this.prisma.programGroupProgram.findUnique(args);
  }
  async createProgramGroupProgram<
    T extends Prisma.ProgramGroupProgramCreateArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.ProgramGroupProgramCreateArgs>
  ): Promise<PrismaProgramGroupProgram> {
    return this.prisma.programGroupProgram.create<T>(args);
  }
  async updateProgramGroupProgram<
    T extends Prisma.ProgramGroupProgramUpdateArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.ProgramGroupProgramUpdateArgs>
  ): Promise<PrismaProgramGroupProgram> {
    return this.prisma.programGroupProgram.update<T>(args);
  }
  async deleteProgramGroupProgram<
    T extends Prisma.ProgramGroupProgramDeleteArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.ProgramGroupProgramDeleteArgs>
  ): Promise<PrismaProgramGroupProgram> {
    return this.prisma.programGroupProgram.delete(args);
  }
}
