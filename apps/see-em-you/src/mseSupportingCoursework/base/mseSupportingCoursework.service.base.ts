/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  MseSupportingCoursework as PrismaMseSupportingCoursework,
} from "@prisma/client";

export class MseSupportingCourseworkServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.MseSupportingCourseworkCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.MseSupportingCourseworkCountArgs>
  ): Promise<number> {
    return this.prisma.mseSupportingCoursework.count(args);
  }

  async mseSupportingCourseworks<
    T extends Prisma.MseSupportingCourseworkFindManyArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.MseSupportingCourseworkFindManyArgs>
  ): Promise<PrismaMseSupportingCoursework[]> {
    return this.prisma.mseSupportingCoursework.findMany(args);
  }
  async mseSupportingCoursework<
    T extends Prisma.MseSupportingCourseworkFindUniqueArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.MseSupportingCourseworkFindUniqueArgs>
  ): Promise<PrismaMseSupportingCoursework | null> {
    return this.prisma.mseSupportingCoursework.findUnique(args);
  }
  async createMseSupportingCoursework<
    T extends Prisma.MseSupportingCourseworkCreateArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.MseSupportingCourseworkCreateArgs>
  ): Promise<PrismaMseSupportingCoursework> {
    return this.prisma.mseSupportingCoursework.create<T>(args);
  }
  async updateMseSupportingCoursework<
    T extends Prisma.MseSupportingCourseworkUpdateArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.MseSupportingCourseworkUpdateArgs>
  ): Promise<PrismaMseSupportingCoursework> {
    return this.prisma.mseSupportingCoursework.update<T>(args);
  }
  async deleteMseSupportingCoursework<
    T extends Prisma.MseSupportingCourseworkDeleteArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.MseSupportingCourseworkDeleteArgs>
  ): Promise<PrismaMseSupportingCoursework> {
    return this.prisma.mseSupportingCoursework.delete(args);
  }
}
