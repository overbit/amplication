/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  Accesslogreplyform as PrismaAccesslogreplyform,
} from "@prisma/client";

export class AccesslogreplyformServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.AccesslogreplyformCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.AccesslogreplyformCountArgs>
  ): Promise<number> {
    return this.prisma.accesslogreplyform.count(args);
  }

  async accesslogreplyforms<T extends Prisma.AccesslogreplyformFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.AccesslogreplyformFindManyArgs>
  ): Promise<PrismaAccesslogreplyform[]> {
    return this.prisma.accesslogreplyform.findMany(args);
  }
  async accesslogreplyform<T extends Prisma.AccesslogreplyformFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.AccesslogreplyformFindUniqueArgs>
  ): Promise<PrismaAccesslogreplyform | null> {
    return this.prisma.accesslogreplyform.findUnique(args);
  }
  async createAccesslogreplyform<T extends Prisma.AccesslogreplyformCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.AccesslogreplyformCreateArgs>
  ): Promise<PrismaAccesslogreplyform> {
    return this.prisma.accesslogreplyform.create<T>(args);
  }
  async updateAccesslogreplyform<T extends Prisma.AccesslogreplyformUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.AccesslogreplyformUpdateArgs>
  ): Promise<PrismaAccesslogreplyform> {
    return this.prisma.accesslogreplyform.update<T>(args);
  }
  async deleteAccesslogreplyform<T extends Prisma.AccesslogreplyformDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.AccesslogreplyformDeleteArgs>
  ): Promise<PrismaAccesslogreplyform> {
    return this.prisma.accesslogreplyform.delete(args);
  }
}
