/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import * as graphql from "@nestjs/graphql";
import * as apollo from "apollo-server-express";
import { isRecordNotFoundError } from "../../prisma.util";
import { MetaQueryPayload } from "../../util/MetaQueryPayload";
import { CreateIniSopArgs } from "./CreateIniSopArgs";
import { UpdateIniSopArgs } from "./UpdateIniSopArgs";
import { DeleteIniSopArgs } from "./DeleteIniSopArgs";
import { IniSopCountArgs } from "./IniSopCountArgs";
import { IniSopFindManyArgs } from "./IniSopFindManyArgs";
import { IniSopFindUniqueArgs } from "./IniSopFindUniqueArgs";
import { IniSop } from "./IniSop";
import { IniSopService } from "../iniSop.service";
@graphql.Resolver(() => IniSop)
export class IniSopResolverBase {
  constructor(protected readonly service: IniSopService) {}

  async _iniSopsMeta(
    @graphql.Args() args: IniSopCountArgs
  ): Promise<MetaQueryPayload> {
    const result = await this.service.count(args);
    return {
      count: result,
    };
  }

  @graphql.Query(() => [IniSop])
  async iniSops(@graphql.Args() args: IniSopFindManyArgs): Promise<IniSop[]> {
    return this.service.findMany(args);
  }

  @graphql.Query(() => IniSop, { nullable: true })
  async iniSop(
    @graphql.Args() args: IniSopFindUniqueArgs
  ): Promise<IniSop | null> {
    const result = await this.service.findOne(args);
    if (result === null) {
      return null;
    }
    return result;
  }

  @graphql.Mutation(() => IniSop)
  async createIniSop(@graphql.Args() args: CreateIniSopArgs): Promise<IniSop> {
    return await this.service.create({
      ...args,
      data: args.data,
    });
  }

  @graphql.Mutation(() => IniSop)
  async updateIniSop(
    @graphql.Args() args: UpdateIniSopArgs
  ): Promise<IniSop | null> {
    try {
      return await this.service.update({
        ...args,
        data: args.data,
      });
    } catch (error) {
      if (isRecordNotFoundError(error)) {
        throw new apollo.ApolloError(
          `No resource was found for ${JSON.stringify(args.where)}`
        );
      }
      throw error;
    }
  }

  @graphql.Mutation(() => IniSop)
  async deleteIniSop(
    @graphql.Args() args: DeleteIniSopArgs
  ): Promise<IniSop | null> {
    try {
      return await this.service.delete(args);
    } catch (error) {
      if (isRecordNotFoundError(error)) {
        throw new apollo.ApolloError(
          `No resource was found for ${JSON.stringify(args.where)}`
        );
      }
      throw error;
    }
  }
}
