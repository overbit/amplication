/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AaDepartmentCreateNestedManyWithoutPeriodsInput } from "./AaDepartmentCreateNestedManyWithoutPeriodsInput";
import {
  ValidateNested,
  IsOptional,
  IsString,
  IsDate,
  IsInt,
} from "class-validator";
import { Type } from "class-transformer";
import { CohortCreateNestedManyWithoutPeriodsInput } from "./CohortCreateNestedManyWithoutPeriodsInput";
import { PeriodApplicationCreateNestedManyWithoutPeriodsInput } from "./PeriodApplicationCreateNestedManyWithoutPeriodsInput";

@InputType()
class PeriodCreateInput {
  @ApiProperty({
    required: false,
    type: () => AaDepartmentCreateNestedManyWithoutPeriodsInput,
  })
  @ValidateNested()
  @Type(() => AaDepartmentCreateNestedManyWithoutPeriodsInput)
  @IsOptional()
  @Field(() => AaDepartmentCreateNestedManyWithoutPeriodsInput, {
    nullable: true,
  })
  aaDepartment?: AaDepartmentCreateNestedManyWithoutPeriodsInput;

  @ApiProperty({
    required: false,
    type: () => CohortCreateNestedManyWithoutPeriodsInput,
  })
  @ValidateNested()
  @Type(() => CohortCreateNestedManyWithoutPeriodsInput)
  @IsOptional()
  @Field(() => CohortCreateNestedManyWithoutPeriodsInput, {
    nullable: true,
  })
  cohort?: CohortCreateNestedManyWithoutPeriodsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  endDate?: Date | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  parentPeriodId?: number | null;

  @ApiProperty({
    required: false,
    type: () => PeriodApplicationCreateNestedManyWithoutPeriodsInput,
  })
  @ValidateNested()
  @Type(() => PeriodApplicationCreateNestedManyWithoutPeriodsInput)
  @IsOptional()
  @Field(() => PeriodApplicationCreateNestedManyWithoutPeriodsInput, {
    nullable: true,
  })
  periodApplication?: PeriodApplicationCreateNestedManyWithoutPeriodsInput;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Field(() => Number)
  periodTypeId!: number;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  startDate!: Date;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Field(() => Number)
  unitId!: number;
}

export { PeriodCreateInput as PeriodCreateInput };
