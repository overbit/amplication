/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsInt,
  IsString,
  IsOptional,
  IsDate,
  ValidateNested,
} from "class-validator";
import { Type } from "class-transformer";
import { AaDepartment } from "../../aaDepartment/base/AaDepartment";
import { Cohort } from "../../cohort/base/Cohort";
import { PeriodApplication } from "../../periodApplication/base/PeriodApplication";

@ObjectType()
class Period {
  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Field(() => Number)
  unitId!: number;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Field(() => Number)
  periodTypeId!: number;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description!: string | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  startDate!: Date;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  endDate!: Date | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  parentPeriodId!: number | null;

  @ApiProperty({
    required: false,
    type: () => [AaDepartment],
  })
  @ValidateNested()
  @Type(() => AaDepartment)
  @IsOptional()
  aaDepartment?: Array<AaDepartment>;

  @ApiProperty({
    required: false,
    type: () => [Cohort],
  })
  @ValidateNested()
  @Type(() => Cohort)
  @IsOptional()
  cohort?: Array<Cohort>;

  @ApiProperty({
    required: false,
    type: () => [PeriodApplication],
  })
  @ValidateNested()
  @Type(() => PeriodApplication)
  @IsOptional()
  periodApplication?: Array<PeriodApplication>;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Field(() => Number)
  id!: number;
}

export { Period as Period };
