/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  LtiMastersAdmit as PrismaLtiMastersAdmit,
} from "@prisma/client";

export class LtiMastersAdmitServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.LtiMastersAdmitCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.LtiMastersAdmitCountArgs>
  ): Promise<number> {
    return this.prisma.ltiMastersAdmit.count(args);
  }

  async ltiMastersAdmits<T extends Prisma.LtiMastersAdmitFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.LtiMastersAdmitFindManyArgs>
  ): Promise<PrismaLtiMastersAdmit[]> {
    return this.prisma.ltiMastersAdmit.findMany(args);
  }
  async ltiMastersAdmit<T extends Prisma.LtiMastersAdmitFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.LtiMastersAdmitFindUniqueArgs>
  ): Promise<PrismaLtiMastersAdmit | null> {
    return this.prisma.ltiMastersAdmit.findUnique(args);
  }
  async createLtiMastersAdmit<T extends Prisma.LtiMastersAdmitCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.LtiMastersAdmitCreateArgs>
  ): Promise<PrismaLtiMastersAdmit> {
    return this.prisma.ltiMastersAdmit.create<T>(args);
  }
  async updateLtiMastersAdmit<T extends Prisma.LtiMastersAdmitUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.LtiMastersAdmitUpdateArgs>
  ): Promise<PrismaLtiMastersAdmit> {
    return this.prisma.ltiMastersAdmit.update<T>(args);
  }
  async deleteLtiMastersAdmit<T extends Prisma.LtiMastersAdmitDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.LtiMastersAdmitDeleteArgs>
  ): Promise<PrismaLtiMastersAdmit> {
    return this.prisma.ltiMastersAdmit.delete(args);
  }
}
