/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, PaymentNew as PrismaPaymentNew } from "@prisma/client";

export class PaymentNewServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.PaymentNewCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.PaymentNewCountArgs>
  ): Promise<number> {
    return this.prisma.paymentNew.count(args);
  }

  async paymentNews<T extends Prisma.PaymentNewFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.PaymentNewFindManyArgs>
  ): Promise<PrismaPaymentNew[]> {
    return this.prisma.paymentNew.findMany(args);
  }
  async paymentNew<T extends Prisma.PaymentNewFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.PaymentNewFindUniqueArgs>
  ): Promise<PrismaPaymentNew | null> {
    return this.prisma.paymentNew.findUnique(args);
  }
  async createPaymentNew<T extends Prisma.PaymentNewCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.PaymentNewCreateArgs>
  ): Promise<PrismaPaymentNew> {
    return this.prisma.paymentNew.create<T>(args);
  }
  async updatePaymentNew<T extends Prisma.PaymentNewUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.PaymentNewUpdateArgs>
  ): Promise<PrismaPaymentNew> {
    return this.prisma.paymentNew.update<T>(args);
  }
  async deletePaymentNew<T extends Prisma.PaymentNewDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.PaymentNewDeleteArgs>
  ): Promise<PrismaPaymentNew> {
    return this.prisma.paymentNew.delete(args);
  }
}
