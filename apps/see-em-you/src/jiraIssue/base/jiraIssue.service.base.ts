/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, JiraIssue as PrismaJiraIssue } from "@prisma/client";

export class JiraIssueServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.JiraIssueCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.JiraIssueCountArgs>
  ): Promise<number> {
    return this.prisma.jiraIssue.count(args);
  }

  async jiraIssues<T extends Prisma.JiraIssueFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.JiraIssueFindManyArgs>
  ): Promise<PrismaJiraIssue[]> {
    return this.prisma.jiraIssue.findMany(args);
  }
  async jiraIssue<T extends Prisma.JiraIssueFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.JiraIssueFindUniqueArgs>
  ): Promise<PrismaJiraIssue | null> {
    return this.prisma.jiraIssue.findUnique(args);
  }
  async createJiraIssue<T extends Prisma.JiraIssueCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.JiraIssueCreateArgs>
  ): Promise<PrismaJiraIssue> {
    return this.prisma.jiraIssue.create<T>(args);
  }
  async updateJiraIssue<T extends Prisma.JiraIssueUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.JiraIssueUpdateArgs>
  ): Promise<PrismaJiraIssue> {
    return this.prisma.jiraIssue.update<T>(args);
  }
  async deleteJiraIssue<T extends Prisma.JiraIssueDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.JiraIssueDeleteArgs>
  ): Promise<PrismaJiraIssue> {
    return this.prisma.jiraIssue.delete(args);
  }
}
