/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import * as common from "@nestjs/common";
import * as swagger from "@nestjs/swagger";
import { isRecordNotFoundError } from "../../prisma.util";
import * as errors from "../../errors";
import { Request } from "express";
import { plainToClass } from "class-transformer";
import { ApiNestedQuery } from "../../decorators/api-nested-query.decorator";
import { SlateCodilityService } from "../slateCodility.service";
import { SlateCodilityCreateInput } from "./SlateCodilityCreateInput";
import { SlateCodility } from "./SlateCodility";
import { SlateCodilityFindManyArgs } from "./SlateCodilityFindManyArgs";
import { SlateCodilityWhereUniqueInput } from "./SlateCodilityWhereUniqueInput";
import { SlateCodilityUpdateInput } from "./SlateCodilityUpdateInput";

export class SlateCodilityControllerBase {
  constructor(protected readonly service: SlateCodilityService) {}
  @common.Post()
  @swagger.ApiCreatedResponse({ type: SlateCodility })
  async createSlateCodility(
    @common.Body() data: SlateCodilityCreateInput
  ): Promise<SlateCodility> {
    return await this.service.createSlateCodility({
      data: data,
      select: {
        prefix: true,
        first: true,
        middle: true,
        last: true,
        codilityCloseDate: true,
        codilityCreateDate: true,
        codilityIpAddresses: true,
        codilityMaxScore: true,
        codilityPercentCorrectness: true,
        codilityPercentPerformance: true,
        codilityPercentTotalScore: true,
        codilityScore: true,
        codilitySimilarity: true,
        codilityStartDate: true,
        codilityTask1Correctness: true,
        codilityTask1Difficulty: true,
        codilityTask1Language: true,
        codilityTask1Name: true,
        codilityTask1Performance: true,
        codilityTask1Score: true,
        codilityTask2Correctness: true,
        codilityTask2Difficulty: true,
        codilityTask2Language: true,
        codilityTask2Name: true,
        codilityTask2Performance: true,
        codilityTask2Score: true,
        codilityTask3Correctness: true,
        codilityTask3Difficulty: true,
        codilityTask3Language: true,
        codilityTask3Name: true,
        codilityTask3Performance: true,
        codilityTask3Score: true,
        codilityTask4Correctness: true,
        codilityTask4Difficulty: true,
        codilityTask4Language: true,
        codilityTask4Name: true,
        codilityTask4Performance: true,
        codilityTask4Score: true,
        codilityTestName: true,
        codilityTestSession: true,
        id: true,
      },
    });
  }

  @common.Get()
  @swagger.ApiOkResponse({ type: [SlateCodility] })
  @ApiNestedQuery(SlateCodilityFindManyArgs)
  async slateCodilities(
    @common.Req() request: Request
  ): Promise<SlateCodility[]> {
    const args = plainToClass(SlateCodilityFindManyArgs, request.query);
    return this.service.slateCodilities({
      ...args,
      select: {
        prefix: true,
        first: true,
        middle: true,
        last: true,
        codilityCloseDate: true,
        codilityCreateDate: true,
        codilityIpAddresses: true,
        codilityMaxScore: true,
        codilityPercentCorrectness: true,
        codilityPercentPerformance: true,
        codilityPercentTotalScore: true,
        codilityScore: true,
        codilitySimilarity: true,
        codilityStartDate: true,
        codilityTask1Correctness: true,
        codilityTask1Difficulty: true,
        codilityTask1Language: true,
        codilityTask1Name: true,
        codilityTask1Performance: true,
        codilityTask1Score: true,
        codilityTask2Correctness: true,
        codilityTask2Difficulty: true,
        codilityTask2Language: true,
        codilityTask2Name: true,
        codilityTask2Performance: true,
        codilityTask2Score: true,
        codilityTask3Correctness: true,
        codilityTask3Difficulty: true,
        codilityTask3Language: true,
        codilityTask3Name: true,
        codilityTask3Performance: true,
        codilityTask3Score: true,
        codilityTask4Correctness: true,
        codilityTask4Difficulty: true,
        codilityTask4Language: true,
        codilityTask4Name: true,
        codilityTask4Performance: true,
        codilityTask4Score: true,
        codilityTestName: true,
        codilityTestSession: true,
        id: true,
      },
    });
  }

  @common.Get("/:id")
  @swagger.ApiOkResponse({ type: SlateCodility })
  @swagger.ApiNotFoundResponse({ type: errors.NotFoundException })
  async slateCodility(
    @common.Param() params: SlateCodilityWhereUniqueInput
  ): Promise<SlateCodility | null> {
    const result = await this.service.slateCodility({
      where: params,
      select: {
        prefix: true,
        first: true,
        middle: true,
        last: true,
        codilityCloseDate: true,
        codilityCreateDate: true,
        codilityIpAddresses: true,
        codilityMaxScore: true,
        codilityPercentCorrectness: true,
        codilityPercentPerformance: true,
        codilityPercentTotalScore: true,
        codilityScore: true,
        codilitySimilarity: true,
        codilityStartDate: true,
        codilityTask1Correctness: true,
        codilityTask1Difficulty: true,
        codilityTask1Language: true,
        codilityTask1Name: true,
        codilityTask1Performance: true,
        codilityTask1Score: true,
        codilityTask2Correctness: true,
        codilityTask2Difficulty: true,
        codilityTask2Language: true,
        codilityTask2Name: true,
        codilityTask2Performance: true,
        codilityTask2Score: true,
        codilityTask3Correctness: true,
        codilityTask3Difficulty: true,
        codilityTask3Language: true,
        codilityTask3Name: true,
        codilityTask3Performance: true,
        codilityTask3Score: true,
        codilityTask4Correctness: true,
        codilityTask4Difficulty: true,
        codilityTask4Language: true,
        codilityTask4Name: true,
        codilityTask4Performance: true,
        codilityTask4Score: true,
        codilityTestName: true,
        codilityTestSession: true,
        id: true,
      },
    });
    if (result === null) {
      throw new errors.NotFoundException(
        `No resource was found for ${JSON.stringify(params)}`
      );
    }
    return result;
  }

  @common.Patch("/:id")
  @swagger.ApiOkResponse({ type: SlateCodility })
  @swagger.ApiNotFoundResponse({ type: errors.NotFoundException })
  async updateSlateCodility(
    @common.Param() params: SlateCodilityWhereUniqueInput,
    @common.Body() data: SlateCodilityUpdateInput
  ): Promise<SlateCodility | null> {
    try {
      return await this.service.updateSlateCodility({
        where: params,
        data: data,
        select: {
          prefix: true,
          first: true,
          middle: true,
          last: true,
          codilityCloseDate: true,
          codilityCreateDate: true,
          codilityIpAddresses: true,
          codilityMaxScore: true,
          codilityPercentCorrectness: true,
          codilityPercentPerformance: true,
          codilityPercentTotalScore: true,
          codilityScore: true,
          codilitySimilarity: true,
          codilityStartDate: true,
          codilityTask1Correctness: true,
          codilityTask1Difficulty: true,
          codilityTask1Language: true,
          codilityTask1Name: true,
          codilityTask1Performance: true,
          codilityTask1Score: true,
          codilityTask2Correctness: true,
          codilityTask2Difficulty: true,
          codilityTask2Language: true,
          codilityTask2Name: true,
          codilityTask2Performance: true,
          codilityTask2Score: true,
          codilityTask3Correctness: true,
          codilityTask3Difficulty: true,
          codilityTask3Language: true,
          codilityTask3Name: true,
          codilityTask3Performance: true,
          codilityTask3Score: true,
          codilityTask4Correctness: true,
          codilityTask4Difficulty: true,
          codilityTask4Language: true,
          codilityTask4Name: true,
          codilityTask4Performance: true,
          codilityTask4Score: true,
          codilityTestName: true,
          codilityTestSession: true,
          id: true,
        },
      });
    } catch (error) {
      if (isRecordNotFoundError(error)) {
        throw new errors.NotFoundException(
          `No resource was found for ${JSON.stringify(params)}`
        );
      }
      throw error;
    }
  }

  @common.Delete("/:id")
  @swagger.ApiOkResponse({ type: SlateCodility })
  @swagger.ApiNotFoundResponse({ type: errors.NotFoundException })
  async deleteSlateCodility(
    @common.Param() params: SlateCodilityWhereUniqueInput
  ): Promise<SlateCodility | null> {
    try {
      return await this.service.deleteSlateCodility({
        where: params,
        select: {
          prefix: true,
          first: true,
          middle: true,
          last: true,
          codilityCloseDate: true,
          codilityCreateDate: true,
          codilityIpAddresses: true,
          codilityMaxScore: true,
          codilityPercentCorrectness: true,
          codilityPercentPerformance: true,
          codilityPercentTotalScore: true,
          codilityScore: true,
          codilitySimilarity: true,
          codilityStartDate: true,
          codilityTask1Correctness: true,
          codilityTask1Difficulty: true,
          codilityTask1Language: true,
          codilityTask1Name: true,
          codilityTask1Performance: true,
          codilityTask1Score: true,
          codilityTask2Correctness: true,
          codilityTask2Difficulty: true,
          codilityTask2Language: true,
          codilityTask2Name: true,
          codilityTask2Performance: true,
          codilityTask2Score: true,
          codilityTask3Correctness: true,
          codilityTask3Difficulty: true,
          codilityTask3Language: true,
          codilityTask3Name: true,
          codilityTask3Performance: true,
          codilityTask3Score: true,
          codilityTask4Correctness: true,
          codilityTask4Difficulty: true,
          codilityTask4Language: true,
          codilityTask4Name: true,
          codilityTask4Performance: true,
          codilityTask4Score: true,
          codilityTestName: true,
          codilityTestSession: true,
          id: true,
        },
      });
    } catch (error) {
      if (isRecordNotFoundError(error)) {
        throw new errors.NotFoundException(
          `No resource was found for ${JSON.stringify(params)}`
        );
      }
      throw error;
    }
  }
}
