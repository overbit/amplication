name: _Reusable Release template

on:
  workflow_call:
    inputs:
      branch:
        type: string
        description: Name of the git branch
        required: true
      affected-apps:
        type: string
        description: Nx applications affected by the changes
        required: true
      affected-lib:
        type: string
        description: Nx libraries affected by the changes
        required: true
      affected-package-container:
        type: string
        description: Nx projects configured with package:container affected by the changes
        required: true
      affected-deploy-static:
        type: string
        description: Nx projects configured with deploy:static affected by the changes
        required: true
      affected-deploy-container:
        type: string
        description: Nx projects configured with deploy affected by the changes
        required: true
    secrets:
      NX_CLOUD_ACCESS_TOKEN:
        required: true
      ECR_AWS_ACCESS_KEY_ID:
        required: true
      ECR_AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
env:
  NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
  BRANCH: ${{ inputs.branch }}
  CYPRESS_CACHE_FOLDER: node_modules/.cache/Cypress

jobs:
  package:
    if: ${{ inputs.affected-package-container != '[]' && inputs.affected-package-container != ''}}
    name: Package
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        project: ${{ fromJson(inputs.affected-package-container) }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.workflow_run.head_branch }}
          fetch-depth: 0

      - uses: actions/setup-node@v3
        with:
          node-version-file: "package.json"
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"

      - name: Setup Bun Runtime
        uses: oven-sh/setup-bun@v1

      - name: Install Dependencies
        if: ${{ steps.cache-node-modules.outputs.cache-hit != 'true' || steps.cache-other-node-modules.outputs.cache-hit != 'true' }}
        run: bun i --lockfile package-lock.json

      # https://github.com/docker/metadata-action
      - name: Docker Metadata
        uses: docker/metadata-action@v4
        id: meta
        with:
          images: "439403303254.dkr.ecr.us-east-1.amazonaws.com/${{ matrix.project }}"
          tags: |
            type=sha,prefix=sha-
            type=ref,event=pr,prefix=pr-
            type=ref,event=tag,prefix=tag-
            type=raw,value=${{ github.run_id }},prefix=gh-
            type=raw,value=${{ env.BRANCH }}
            type=raw,value=latest,enable=${{ env.BRANCH == 'master' }}

      # https://www.npmjs.com/package/@nx-tools/nx-docker
      - name: Dockerize
        run: npx nx package:container ${{ matrix.project }} --prod
        env:
          INPUT_TAGS: ${{ steps.meta.outputs.tags }}
          INPUT_PUSH: false
          # env variables substituted in the project.json docker target build-args
          GIT_REF_NAME: ${{ github.ref_name }}
          GIT_SHA: ${{ github.sha }}
