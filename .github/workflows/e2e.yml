name: E2E
concurrency: ${{ github.ref }}-e2e

on:
  workflow_dispatch:
    inputs:
      nx-base:
        type: string
        description: Commit SHA, branch or tag name used by Nx in the affected jobs.
        required: true
        default: next
      nx-skip-cache:
        type: boolean
        description: Rerun the tasks even when the results are available in the cache.
        default: false
      nx-force-all:
        type: boolean
        description: Forces Nx to consider all projects (apps and libs) as affected.
        default: false
  pull_request:
    types: [opened, reopened, synchronize]
    paths-ignore:
      - "**/*.md"
      - ".all-contributorsrc"
  push:
    branches:
      - master
      - next
    paths-ignore:
      - "**/*.md"
      - ".all-contributorsrc"

env:
  NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
  NX_BRANCH: ${{ github.head_ref || github.ref_name }}
  NX_FORCE_ALL: ${{ fromJSON('["", "--all"]')[ inputs.nx-force-all ] }} # This relies on type coercion, an implicit cast from boolean true to 1 or false to 0, which is then used as array index.
  NX_SKIP_NX_CACHE: ${{ inputs.nx-skip-cache || false }}
  BASE: ${{ github.base_ref || inputs.nx-base || github.event.repository.default_branch }}
  CYPRESS_CACHE_FOLDER: node_modules/.cache/Cypress

jobs:
  nx:
    uses: ./.github/workflows/nx.template.yml
    with:
      nx-head: ${{ github.head_ref || github.ref_name }}
      nx-base: ${{ github.base_ref || inputs.nx-base || github.event.repository.default_branch }}
      nx-skip-cache: ${{ inputs.nx-skip-cache || false }} # This relies on type coercion, an implicit cast from boolean true to 1 or false to 0, which is then used as array index.
      nx-force-all: ${{ inputs.nx-force-all || false }}

  e2e:
    runs-on: ubuntu-20.04
    needs: nx
    if: ${{ needs.nx.outputs.affected-e2e != '[]' && needs.nx.outputs.affected-e2e != ''}}
    strategy:
      fail-fast: false
      matrix:
        project: ${{ fromJson(needs.nx.outputs.affected-e2e) }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v3
        with:
          node-version-file: "package.json"
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"

      - name: Setup Bun Runtime
        uses: oven-sh/setup-bun@v1

      - name: Install Dependencies
        if: ${{ steps.cache-node-modules.outputs.cache-hit != 'true' || steps.cache-other-node-modules.outputs.cache-hit != 'true' }}
        run: bun i --lockfile package-lock.json

      - name: e2e
        run: npx nx e2e ${{ matrix.project }} --prod
